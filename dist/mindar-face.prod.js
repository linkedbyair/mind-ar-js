/*! For license information please see mindar-face.prod.js.LICENSE.txt */
(()=>{var e={4377:(e,t,n)=>{"use strict";n.r(t),n.d(t,{SupportedPackages:()=>Et,load:()=>Ct});var r={};n.r(r),n.d(r,{json:()=>O});var s={};n.r(s),n.d(s,{json:()=>P});var i={};n.r(i),n.d(i,{json:()=>F});var a={};n.r(a),n.d(a,{json:()=>$});var o={};n.r(o),n.d(o,{json:()=>B});var l={};n.r(l),n.d(l,{json:()=>U});var u={};n.r(u),n.d(u,{json:()=>z});var c={};n.r(c),n.d(c,{json:()=>V});var h={};n.r(h),n.d(h,{json:()=>G});var d={};n.r(d),n.d(d,{json:()=>W});var p={};n.r(p),n.d(p,{json:()=>H});var f={};n.r(f),n.d(f,{json:()=>j});var m={};n.r(m),n.d(m,{json:()=>X});var g={};n.r(g),n.d(g,{json:()=>q});var y={};n.r(y),n.d(y,{json:()=>K});var x={};n.r(x),n.d(x,{json:()=>Y});var v={};n.r(v),n.d(v,{json:()=>J});var b={};n.r(b),n.d(b,{json:()=>Z});var w={};n.r(w),n.d(w,{json:()=>Q});var _={};n.r(_),n.d(_,{OP_SCOPE_SUFFIX:()=>ge.zvA,abs:()=>ge.WnP,acos:()=>ge.Khb,acosh:()=>ge.__u,add:()=>ge.IHx,addN:()=>ge.QBD,all:()=>ge.$6P,any:()=>ge.YjB,argMax:()=>ge.NqF,argMin:()=>ge.vHJ,asin:()=>ge.ZRM,asinh:()=>ge.VfV,atan:()=>ge.z4N,atan2:()=>ge.fvJ,atanh:()=>ge.C80,avgPool:()=>ge.wS1,avgPool3d:()=>ge.uR5,basicLSTMCell:()=>ge.zEQ,batchNorm:()=>ge.tgs,batchNorm2d:()=>ge.Dxk,batchNorm3d:()=>ge.JY5,batchNorm4d:()=>ge.p3b,batchToSpaceND:()=>ge.E4h,bincount:()=>ge.yE8,booleanMaskAsync:()=>ge.anm,broadcastArgs:()=>ge.XsQ,broadcastTo:()=>ge.UFq,buffer:()=>ge.f3b,cast:()=>ge.pju,ceil:()=>ge.mDi,clipByValue:()=>ge.iUl,clone:()=>ge.d9v,complex:()=>ge.PYB,concat:()=>ge.zoF,concat1d:()=>ge.gME,concat2d:()=>ge.Izb,concat3d:()=>ge.MNy,concat4d:()=>ge.ZaL,conv1d:()=>ge.PAt,conv2d:()=>ge.Tek,conv2dTranspose:()=>ge.bc,conv3d:()=>ge.pdZ,conv3dTranspose:()=>ge.$QV,cos:()=>ge.mCk,cosh:()=>ge.f9Y,cosineWindow:()=>ge.mew,cumprod:()=>ge.$Gn,cumsum:()=>ge.zbp,denseBincount:()=>ge.ppE,depthToSpace:()=>ge.nTT,depthwiseConv2d:()=>ge.B10,diag:()=>ge.Ka3,dilation2d:()=>ge.WmZ,div:()=>ge.hiC,divNoNan:()=>ge.NTj,dot:()=>ge.AKD,dropout:()=>ge.rvX,einsum:()=>ge.WYO,elu:()=>ge.pyx,enclosingPowerOfTwo:()=>ge.GRh,equal:()=>ge.DgJ,erf:()=>ge.qNN,euclideanNorm:()=>ge.d2q,exp:()=>ge.Qqt,expandDims:()=>ge.dt4,expm1:()=>ge.t$B,eye:()=>ge.iyy,fft:()=>ge.kp_,fill:()=>ge.hlL,floor:()=>ge.GWj,floorDiv:()=>ge.qPi,fused:()=>ge.imm,gather:()=>ge.Iqj,gatherND:()=>ge.dbB,greater:()=>ge.pjt,greaterEqual:()=>ge.brS,ifft:()=>ge.Sxn,imag:()=>ge.asL,image:()=>ge.BHj,inTopKAsync:()=>ge.V3u,irfft:()=>ge.wx0,isFinite:()=>ge.xVT,isInf:()=>ge.UWc,isNaN:()=>ge.i2d,leakyRelu:()=>ge.hi7,less:()=>ge.d9m,lessEqual:()=>ge.zN1,linalg:()=>ge.$r2,linspace:()=>ge.SX3,localResponseNormalization:()=>ge.G9k,log:()=>ge.cM7,log1p:()=>ge.Krr,logSigmoid:()=>ge.e_t,logSoftmax:()=>ge.CmS,logSumExp:()=>ge.l_t,logicalAnd:()=>ge.HvI,logicalNot:()=>ge.hJK,logicalOr:()=>ge.K5V,logicalXor:()=>ge.egP,losses:()=>ge.MB5,lowerBound:()=>ge.eab,matMul:()=>ge.OI3,max:()=>ge.Fp7,maxPool:()=>ge._sB,maxPool3d:()=>ge.YQQ,maxPoolWithArgmax:()=>ge.Ip$,maximum:()=>ge.gWQ,mean:()=>ge.J69,meshgrid:()=>ge.ry_,min:()=>ge.VV$,minimum:()=>ge.LTh,mirrorPad:()=>ge.VdP,mod:()=>ge.wQq,moments:()=>ge.Gi7,movingAverage:()=>ge.p_,mul:()=>ge.dC7,multiRNNCell:()=>ge.rq4,multinomial:()=>ge.SJ_,neg:()=>ge.W76,norm:()=>ge.KOy,notEqual:()=>ge.Quu,oneHot:()=>ge.lfX,ones:()=>ge.iUs,onesLike:()=>ge.JpU,op:()=>ge.op,outerProduct:()=>ge.N2O,pad:()=>ge.vku,pad1d:()=>ge.pNR,pad2d:()=>ge.koy,pad3d:()=>ge.t1L,pad4d:()=>ge.lGY,pool:()=>ge.d_R,pow:()=>ge.sQ3,prelu:()=>ge.AL3,print:()=>ge.S0v,prod:()=>ge.WVs,raggedGather:()=>ge.$gW,raggedTensorToTensor:()=>ge.N89,rand:()=>ge.TN_,randomGamma:()=>ge.wzB,randomNormal:()=>ge.nGf,randomStandardNormal:()=>ge.ruB,randomUniform:()=>ge.LGj,range:()=>ge.w6H,real:()=>ge.kwC,reciprocal:()=>ge.M25,relu:()=>ge.UYe,relu6:()=>ge.btT,reshape:()=>ge.XLQ,reverse:()=>ge.GYS,reverse1d:()=>ge.SDf,reverse2d:()=>ge.diP,reverse3d:()=>ge.sx7,reverse4d:()=>ge.mG2,rfft:()=>ge.QEs,round:()=>ge.NMM,rsqrt:()=>ge.bp0,scalar:()=>ge.iD$,scatterND:()=>ge.snQ,searchSorted:()=>ge.zcT,selu:()=>ge.U8D,separableConv2d:()=>ge.U_I,setdiff1dAsync:()=>ge.ODp,sigmoid:()=>ge.XD2,sign:()=>ge.Xxe,signal:()=>ge.tdS,sin:()=>ge.O$l,sinh:()=>ge.R_K,slice:()=>ge.tPi,slice1d:()=>ge.jZU,slice2d:()=>ge.SmN,slice3d:()=>ge.CnO,slice4d:()=>ge.p0P,softmax:()=>ge.XAC,softplus:()=>ge.Wvh,spaceToBatchND:()=>ge.fBT,sparse:()=>ge.rVs,sparseToDense:()=>ge.ers,spectral:()=>ge.uN7,split:()=>ge.Vl2,sqrt:()=>ge._b3,square:()=>ge.h62,squaredDifference:()=>ge.$i,squeeze:()=>ge.L9e,stack:()=>ge.knu,step:()=>ge.Nbs,stridedSlice:()=>ge.NXj,string:()=>ge.Z_8,sub:()=>ge.luU,sum:()=>ge.Smz,tan:()=>ge.ORZ,tanh:()=>ge.AEp,tensor:()=>ge.XeE,tensor1d:()=>ge.RRF,tensor2d:()=>ge.odF,tensor3d:()=>ge.wOQ,tensor4d:()=>ge.yXz,tensor5d:()=>ge.Bfx,tensor6d:()=>ge.xZs,tile:()=>ge.Gg6,topk:()=>ge.hg7,transpose:()=>ge.p4s,truncatedNormal:()=>ge.Xu6,unique:()=>ge.Two,unsortedSegmentSum:()=>ge.pUJ,unstack:()=>ge.HHK,upperBound:()=>ge.GaM,variable:()=>ge.VD$,where:()=>ge.arb,whereAsync:()=>ge.itS,zeros:()=>ge.lls,zerosLike:()=>ge.P84});var S,T,E=n(6639);(0,E.OBj)().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(S||(S={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(T||(T={}));const M={};function C(e){return M[e]}function A(e,t,n,r,s){const i=t.inputParams[e];if(i&&void 0!==i.inputIndexStart){const e=i.inputIndexStart,a=0===i.inputIndexEnd?void 0:void 0===i.inputIndexEnd?e+1:i.inputIndexEnd;if("tensor"===i.type)return I(t.inputNames[i.inputIndexStart],n,r,s);if("tensors"===i.type)return t.inputNames.slice(e,a).map((e=>I(e,n,r,s)));const o=I(t.inputNames.slice(e)[0],n,r,s),l=o.dataSync();return"number"===i.type?l[0]:E.D5U.toNestedArray(o.shape,l)}const a=t.attrParams[e];return a&&a.value}function I(e,t,n,r){const[s,i]=N(e);if(null!=r){const e=r.getHashTableHandleByName(s);if(null!=e)return e}const a=n.currentContextIds.find((e=>!!t[k(s,e)]));return void 0!==a?t[k(s,a)][i]:void 0}function R(e,t){const[n,r,s]=N(e);return[k(n,t&&t.currentContextId),r,s]}function k(e,t){return t?`${e}-${t}`:e}function N(e){const t=e.split(":");if(1===t.length)return[e,0,void 0];const n=t[0],r=3===t.length?t[1]:void 0;return[n,Number(t[t.length-1]),r]}function L(e,t,n){let r=A("pad",e,t,n);if("explicit"===r){r=A("explicitPaddings",e,t,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)s[e][0]=r[2*e],s[e][1]=r[2*e+1];return s}return r}function D(e){return e.kept?e:(0,E.d9v)(e)}const O=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],P=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],F=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],$=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],B=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],U=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],z=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],V=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],G=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],W=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],H=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],j=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],X=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],q=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],K=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],Y=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],J=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],Z=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],Q=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class ee{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[r,s,i,a,o,l,u,c,h,d,p,f,m,g,y,x,v,b,w].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],s=[],i=[],a=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?s.push(e[t.name]):null!=t.input&&0!==t.input.length||i.push(e[t.name]),e)),{});let o=[];const l=[];let u={},c={};null!=t&&(u=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const h=Object.keys(a);h.forEach((e=>{const t=a[e];t.inputNames.forEach(((e,n)=>{const[r,,s]=R(e),i=a[r];if(null!=i.outputs){const e=i.outputs.indexOf(s);if(-1!==e){const s=`${r}:${e}`;t.inputNames[n]=s}}t.inputs.push(i),i.children.push(t)}))})),0===Object.keys(c).length?h.forEach((e=>{const t=a[e];0===t.children.length&&l.push(t)})):Object.keys(c).forEach((e=>{const[t]=R(e),n=a[t];null!=n&&(n.signatureKey=c[e],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{const[t]=R(e),n=a[t];n&&(n.signatureKey=u[e],o.push(n))})):o=r;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const p={nodes:a,inputs:o,outputs:l,weights:s,placeholders:r,signature:t,functions:d};return i.length>0&&(p.initNodes=i),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=C(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let s;switch(n.type){case"string":s=ne(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ne(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":s=de(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=de(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":s=se(e.attr,n.tfName,n.defaultValue||0),void 0===s&&n.tfDeprecatedName&&(s=se(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":s=he(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=he(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":s=re(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=re(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":s=fe(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=fe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":s=ce(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ce(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":s=pe(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=pe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":s=oe(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=oe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":s=le(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=le(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":s=ae(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ae(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:s,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const s=[],i=[];e.signature.inputArg.forEach((e=>{const[t]=R(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:ie(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,s.push(n),r[t]=n})),Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[s,,i]=R(e),a=r[s];if(null!=a.outputs){const e=a.outputs.indexOf(i);if(-1!==e){const r=`${s}:${e}`;t.inputNames[n]=r}}t.inputs.push(a),a.children.push(t)}))}));const a=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=R(a[e.name]),s=r[t];null!=s&&(s.defaultOutput=n,i.push(s))}));const o=this.mapArgsToSignature(e);return{nodes:r,inputs:s,outputs:i,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function te(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=(0,E.OBj)().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function ne(e,t,n,r=!1){const s=e[t];return null!=s?te(s.s,r):n}function re(e,t,n){const r=e[t];return r?r.b:n}function se(e,t,n){const r=e[t]||{},s=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof s?s:parseInt(s,10)}function ie(e){switch("string"==typeof e&&(e=S[e]),e){case S.DT_FLOAT:case S.DT_HALF:return"float32";case S.DT_INT32:case S.DT_INT64:case S.DT_INT8:case S.DT_UINT8:return"int32";case S.DT_BOOL:return"bool";case S.DT_DOUBLE:return"float32";case S.DT_STRING:return"string";default:return null}}function ae(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function oe(e,t,n){const r=e[t];return r&&r.type?ie(r.type):n}function le(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>ie(e))):n}function ue(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function ce(e,t,n){const r=e[t];return r&&r.shape?ue(r.shape):n}function he(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function de(e,t,n,r=!1){const s=e[t];return s&&s.list&&s.list.s?s.list.s.map((e=>te(e,r))):n}function pe(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>ue(e))):n}function fe(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class me{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return I(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return I(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return se(this.node.rawAttrs,e,t);if(null!=n.s)return ne(this.node.rawAttrs,e,t);if(null!=n.b)return re(this.node.rawAttrs,e,t);if(null!=n.shape)return ce(this.node.rawAttrs,e,t);if(null!=n.type)return oe(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return he(this.node.rawAttrs,e,t);if(null!=n.list.s)return de(this.node.rawAttrs,e,t);if(null!=n.list.shape)return pe(this.node.rawAttrs,e,t);if(null!=n.list.b)return fe(this.node.rawAttrs,e,t);if(null!=n.list.type)return le(this.node.rawAttrs,e,t)}return t}}var ge=n(77912);function ye(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){E.D5U.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const s=e[r],i=t[r];E.D5U.assert(s<0||i<0||s===i,(()=>n+` Shapes ${e} and ${t} must match`))}}}function xe(e){return"number"!=typeof e&&!e.some((e=>e<0))}function ve(e,t,n){let r=be(e,n);const s=!xe(r);if(s&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&t.forEach((e=>{r=be(e.shape,r)})),!xe(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function be(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const s=e[r],i=t[r];if(s>=0&&i>=0&&s!==i)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=s>=0?s:i}return n}class we{constructor(e,t,n,r,s,i,a){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=i,this.clearAfterRead=a,this.tensors=[],this.closed_=!1,this.idTensor=(0,E.iD$)(0),(0,E.CnY)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),ye(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,(0,E.CnY)(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return(0,E.XeE)([],[0].concat(this.elementShape));const n=this.readMany(e);return ye(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),(0,E.knu)(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return(0,E.XeE)([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return ye(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),(0,E.zoF)(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,(0,E.HHK)(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const s=0===n?0:t.size/n,i=[];(0,E.lub)((()=>{t=(0,E.XLQ)(t,[1,n,s]);for(let n=0;n<e.length;++n){const a=[0,0===n?0:r[n-1],0],o=[1,e[n],s];i[n]=(0,E.XLQ)((0,E.tPi)(t,a,o),this.elementShape)}return i}));const a=[];for(let t=0;t<e.length;t++)a[t]=t;this.writeMany(a,i)}}class _e{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);ye(t,e.shape,"TensorList shape mismatch: "),(0,E.CnY)(e)})),this.idTensor=(0,E.iD$)(0),this.maxNumElements=r,(0,E.CnY)(this.idTensor)}get id(){return this.idTensor.id}copy(){return new _e([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);ye(e,this.elementShape,"TensorList shape mismatch: ");const r=ve(this.elementShape,this.tensors,e);return(0,E.lub)((()=>{const e=this.tensors.map((e=>(0,E.XLQ)(e,r)));return(0,E.knu)(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=ve(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,ye(r.shape,e,"TensorList shape mismatch: "),(0,E.XLQ)(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(ye(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");(0,E.CnY)(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new _e([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);ye(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=ve(this.elementShape,this.tensors,t);return(0,E.XLQ)(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);ye(this.elementShape,t.shape,"TensorList shape mismatch: "),(0,E.CnY)(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);ye(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=ve(this.elementShape,this.tensors,n);return 0===e.length?(0,E.XeE)([],[0].concat(r)):(0,E.lub)((()=>{const t=e.map((e=>(0,E.XLQ)(this.tensors[e],r)));return(0,E.knu)(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);ye(this.elementShape,t,"TensorList shape mismatch: ");const n=ve(this.elementShape,this.tensors,t);return 0===this.size()?(0,E.XeE)([],[0].concat(n)):(0,E.lub)((()=>{const e=this.tensors.map((e=>(0,E.XLQ)(e,n)));return(0,E.zoF)(e,0)}))}}function Se(e,t,n){const[r,s]=A("fusedOps",e,t,n),i="biasadd"===r,a=!i,o="prelu"===s,l="fusedbatchnorm"===r,u=A("numArgs",e,t,n);if(i){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&i&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=A("strides",e,t,n),h=L(e,t,n),d=A("dataFormat",e,t,n).toUpperCase(),p=A("dilations",e,t,n);let[f,m]=A("args",e,t,n);return a&&(m=f,f=void 0),{stride:c,pad:h,dataFormat:d,dilations:p,biasArg:f,preluArg:m,activationFunc:s,leakyreluAlpha:A("leakyreluAlpha",e,t,n)}}function Te(e,t,n){return{boxes:A("boxes",e,t,n),scores:A("scores",e,t,n),maxOutputSize:A("maxOutputSize",e,t,n),iouThreshold:A("iouThreshold",e,t,n),scoreThreshold:A("scoreThreshold",e,t,n),softNmsSigma:A("softNmsSigma",e,t,n)}}var Ee=n(99494);class Me{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=(0,E.iD$)(0),this.tensorMap=new Map,(0,E.CnY)(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ee.i(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),(0,E.lub)((()=>{const e=(0,E.HHK)(t),r=n.length,s=e.length;E.D5U.assert(r===s,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${s} elements.`));for(let t=0;t<r;t++){const r=n[t],s=e[t];(0,E.CnY)(s),this.tensorMap.set(r,s)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return(0,E.lub)((()=>{const e=[];for(let r=0;r<n.length;r++){const s=n[r],i=this.findWithDefault(s,t);e.push(i)}return(0,E.knu)(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}function Ce(e,t,n,r,s=E.lub){const i=((e,t,n)=>{switch(e.category){case"arithmetic":return s((()=>((e,t,n,r=_)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(A("a",e,t,n),A("b",e,t,n))];case"AddN":return[r.addN(A("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod(A("a",e,t,n),A("b",e,t,n))];case"Mul":return[r.mul(A("a",e,t,n),A("b",e,t,n))];case"RealDiv":case"Div":return[r.div(A("a",e,t,n),A("b",e,t,n))];case"DivNoNan":return[r.divNoNan(A("a",e,t,n),A("b",e,t,n))];case"FloorDiv":return[r.floorDiv(A("a",e,t,n),A("b",e,t,n))];case"Sub":return[r.sub(A("a",e,t,n),A("b",e,t,n))];case"Minimum":return[r.minimum(A("a",e,t,n),A("b",e,t,n))];case"Maximum":return[r.maximum(A("a",e,t,n),A("b",e,t,n))];case"Pow":return[r.pow(A("a",e,t,n),A("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference(A("a",e,t,n),A("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return s((()=>((e,t,n,r=_)=>{switch(e.op){case"Abs":case"ComplexAbs":return[r.abs(A("x",e,t,n))];case"Acos":return[r.acos(A("x",e,t,n))];case"Acosh":return[r.acosh(A("x",e,t,n))];case"Asin":return[r.asin(A("x",e,t,n))];case"Asinh":return[r.asinh(A("x",e,t,n))];case"Atan":return[r.atan(A("x",e,t,n))];case"Atan2":return[r.atan2(A("x",e,t,n),A("y",e,t,n))];case"Atanh":return[r.atanh(A("x",e,t,n))];case"Ceil":return[r.ceil(A("x",e,t,n))];case"Complex":return[r.complex(A("real",e,t,n),A("imag",e,t,n))];case"Cos":return[r.cos(A("x",e,t,n))];case"Cosh":return[r.cosh(A("x",e,t,n))];case"Elu":return[r.elu(A("x",e,t,n))];case"Erf":return[r.erf(A("x",e,t,n))];case"Exp":return[r.exp(A("x",e,t,n))];case"Expm1":return[r.expm1(A("x",e,t,n))];case"Floor":return[r.floor(A("x",e,t,n))];case"Log":return[r.log(A("x",e,t,n))];case"Log1p":return[r.log1p(A("x",e,t,n))];case"Imag":return[r.imag(A("x",e,t,n))];case"Neg":return[r.neg(A("x",e,t,n))];case"Reciprocal":return[r.reciprocal(A("x",e,t,n))];case"Real":return[r.real(A("x",e,t,n))];case"Relu":return[r.relu(A("x",e,t,n))];case"Round":return[r.round(A("x",e,t,n))];case"Selu":return[r.selu(A("x",e,t,n))];case"Sigmoid":return[r.sigmoid(A("x",e,t,n))];case"Sin":return[r.sin(A("x",e,t,n))];case"Sign":return[r.sign(A("x",e,t,n))];case"Sinh":return[r.sinh(A("x",e,t,n))];case"Softplus":return[r.softplus(A("x",e,t,n))];case"Sqrt":return[r.sqrt(A("x",e,t,n))];case"Square":return[r.square(A("x",e,t,n))];case"Tanh":return[r.tanh(A("x",e,t,n))];case"Tan":return[r.tan(A("x",e,t,n))];case"ClipByValue":return[r.clipByValue(A("x",e,t,n),A("clipValueMin",e,t,n),A("clipValueMax",e,t,n))];case"Relu6":return[r.relu6(A("x",e,t,n))];case"Rsqrt":return[r.rsqrt(I(e.inputNames[0],t,n))];case"Prod":return[r.prod(A("x",e,t,n),A("axes",e,t,n))];case"LeakyRelu":return[r.leakyRelu(A("x",e,t,n),A("alpha",e,t,n))];case"Prelu":return[r.prelu(A("x",e,t,n),A("alpha",e,t,n))];case"IsNan":return[r.isNaN(I(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=A("thenBranch",e,t,n),s=A("elseBranch",e,t,n),i=A("cond",e,t,n),a=A("args",e,t,n);return(await i.data())[0]?n.functionMap[r].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=A("body",e,t,n),s=A("cond",e,t,n),i=A("args",e,t,n),a=await n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap),o=i.map((e=>e.id));let l=await a[0].data();a.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let u=i;for(;l[0];){const e=u;u=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);const t=u.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const i=await n.functionMap[s].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await i[0].data(),i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return u}case"LoopCond":return[D(A("pred",e,t,n))];case"Switch":{const r=A("pred",e,t,n);let s=A("data",e,t,n);return s.kept||(s=D(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==I(e,t,n)));return r?[D(I(r,t,n))]:void 0}case"Enter":{const r=A("frameName",e,t,n),s=A("tensor",e,t,n);return n.enterFrame(r),[D(s)]}case"Exit":{const r=A("tensor",e,t,n);return n.exitFrame(),[D(r)]}case"NextIteration":{const r=A("tensor",e,t,n);return n.nextIteration(),[D(r)]}case"TensorArrayV3":{const r=A("size",e,t,n),s=A("dtype",e,t,n),i=A("elementShape",e,t,n),a=A("dynamicSize",e,t,n),o=A("clearAfterRead",e,t,n),l=A("identicalElementShapes",e,t,n),u=A("name",e,t,n),c=new we(u,s,r,i,l,a,o);return n.addTensorArray(c),[c.idTensor,(0,E.iD$)(1)]}case"TensorArrayWriteV3":{const r=A("tensorArrayId",e,t,n),s=A("index",e,t,n),i=A("tensor",e,t,n),a=n.getTensorArray(r.id);return a.write(s,i),[a.idTensor]}case"TensorArrayReadV3":{const r=A("tensorArrayId",e,t,n),s=A("index",e,t,n);return[n.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=A("tensorArrayId",e,t,n),s=A("indices",e,t,n),i=A("dtype",e,t,n);return[n.getTensorArray(r.id).gather(s,i)]}case"TensorArrayScatterV3":{const r=A("tensorArrayId",e,t,n),s=A("indices",e,t,n),i=A("tensor",e,t,n),a=n.getTensorArray(r.id);return a.scatter(s,i),[a.idTensor]}case"TensorArrayConcatV3":{const r=A("tensorArrayId",e,t,n),s=n.getTensorArray(r.id),i=A("dtype",e,t,n);return[s.concat(i)]}case"TensorArraySplitV3":{const r=A("tensorArrayId",e,t,n),s=A("tensor",e,t,n),i=A("lengths",e,t,n),a=n.getTensorArray(r.id);return a.split(i,s),[a.idTensor]}case"TensorArraySizeV3":{const r=A("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return[(0,E.iD$)(s.size(),"int32")]}case"TensorArrayCloseV3":{const r=A("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=A("tensorListId",e,t,n),s=A("index",e,t,n),i=A("tensor",e,t,n),a=n.getTensorList(r.id);return a.setItem(s,i),[a.idTensor]}case"TensorListGetItem":{const r=A("tensorListId",e,t,n),s=A("index",e,t,n),i=A("elementShape",e,t,n),a=A("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(s,i,a)]}case"TensorListScatterV2":case"TensorListScatter":{const r=A("indices",e,t,n),s=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const s=Math.max(...t);if(null!=r&&-1!==r&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const i=new _e([],n,e.dtype,r),a=(0,E.HHK)(e,0);return t.forEach(((e,t)=>{i.setItem(e,a[t])})),i}(A("tensor",e,t,n),r,A("elementShape",e,t,n),A("numElements",e,t,n));return n.addTensorList(s),[s.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=A("elementShape",e,t,n),s=A("elementDType",e,t,n);let i;i="TensorListReserve"===e.op?"numElements":"maxNumElements";const a=A(i,e,t,n),o=function(e,t,n,r){return new _e([],e,t,r)}(r,s,0,"TensorListReserve"===e.op?-1:a);return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{const r=A("tensorListId",e,t,n),s=A("indices",e,t,n),i=A("elementShape",e,t,n),a=A("elementDType",e,t,n);return[n.getTensorList(r.id).gather(s,a,i)]}case"TensorListStack":{const r=A("tensorListId",e,t,n),s=A("elementShape",e,t,n),i=A("elementDType",e,t,n),a=A("numElements",e,t,n);return[n.getTensorList(r.id).stack(s,i,a)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);ye(e.shape.slice(1),t,"TensorList shape mismatch: ");const s=(0,E.HHK)(e);return new _e(s,t,r)}(A("tensor",e,t,n),A("elementShape",e,t,n),A("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=A("tensorListId",e,t,n),s=n.getTensorList(r.id),i=A("dtype",e,t,n),a=A("elementShape",e,t,n);return[s.concat(i,a)]}case"TensorListPushBack":{const r=A("tensorListId",e,t,n),s=A("tensor",e,t,n),i=n.getTensorList(r.id);return i.pushBack(s),[i.idTensor]}case"TensorListPopBack":{const r=A("tensorListId",e,t,n),s=A("elementShape",e,t,n),i=A("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(s,i)]}case"TensorListSplit":{const r=A("tensor",e,t,n),s=A("elementShape",e,t,n),i=function(e,t,n){let r=0;const s=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const i=be(e.shape.slice(1),n),a=0===r?0:e.size/r,o=(0,E.lub)((()=>{const n=[];e=(0,E.XLQ)(e,[1,r,a]);for(let r=0;r<t.length;++r){const o=[0,0===r?0:s[r-1],0],l=[1,t[r],a];n[r]=(0,E.XLQ)((0,E.tPi)(e,o,l),i)}return e.dispose(),n})),l=new _e([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)l.setItem(e,o[e]);return l}(r,A("lengths",e,t,n),s);return n.addTensorList(i),[i.idTensor]}case"TensorListLength":{const r=A("tensorListId",e,t,n),s=n.getTensorList(r.id);return[(0,E.iD$)(s.size(),"int32")]}case"TensorListResize":{const r=A("tensorListId",e,t,n),s=A("size",e,t,n),i=n.getTensorList(r.id).resize(s);return n.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"convolution":return s((()=>((e,t,n,r=_)=>{switch(e.op){case"Conv1D":{const s=A("stride",e,t,n),i=A("pad",e,t,n),a=A("dataFormat",e,t,n).toUpperCase(),o=A("dilation",e,t,n);return[r.conv1d(A("x",e,t,n),A("filter",e,t,n),s,i,a,o)]}case"Conv2D":{const s=A("strides",e,t,n),i=L(e,t,n),a=A("dataFormat",e,t,n).toUpperCase(),o=A("dilations",e,t,n);return[r.conv2d(A("x",e,t,n),A("filter",e,t,n),[s[1],s[2]],i,a,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:s,pad:i,dataFormat:a,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=Se(e,t,n);return[r.fused.conv2d({x:A("x",e,t,n),filter:A("filter",e,t,n),strides:[s[1],s[2]],pad:i,dataFormat:a,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:i,dataFormat:a,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=Se(e,t,n);return[r.fused.depthwiseConv2d({x:A("x",e,t,n),filter:A("filter",e,t,n),strides:[s[1],s[2]],pad:i,dataFormat:a,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=A("outputShape",e,t,n),i=A("strides",e,t,n),a=L(e,t,n);return[r.conv2dTranspose(A("x",e,t,n),A("filter",e,t,n),s,[i[1],i[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=A("strides",e,t,n),i=L(e,t,n),a=A("dilations",e,t,n),o=A("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d(A("input",e,t,n),A("filter",e,t,n),[s[1],s[2]],i,o,[a[1],a[2]])]}case"Conv3D":{const s=A("strides",e,t,n),i=A("pad",e,t,n),a=A("dataFormat",e,t,n).toUpperCase(),o=A("dilations",e,t,n);return[r.conv3d(A("x",e,t,n),A("filter",e,t,n),[s[1],s[2],s[3]],i,a,[o[1],o[2],o[3]])]}case"AvgPool":{const s=A("strides",e,t,n),i=A("pad",e,t,n),a=A("kernelSize",e,t,n);return[r.avgPool(A("x",e,t,n),[a[1],a[2]],[s[1],s[2]],i)]}case"MaxPool":{const s=A("strides",e,t,n),i=A("pad",e,t,n),a=A("kernelSize",e,t,n);return[r.maxPool(A("x",e,t,n),[a[1],a[2]],[s[1],s[2]],i)]}case"MaxPoolWithArgmax":{const s=A("strides",e,t,n),i=A("pad",e,t,n),a=A("kernelSize",e,t,n),o=A("includeBatchInIndex",e,t,n),{result:l,indexes:u}=r.maxPoolWithArgmax(A("x",e,t,n),[a[1],a[2]],[s[1],s[2]],i,o);return[l,u]}case"AvgPool3D":{const s=A("strides",e,t,n),i=A("pad",e,t,n),a=A("kernelSize",e,t,n);return[r.avgPool3d(A("x",e,t,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],i)]}case"MaxPool3D":{const s=A("strides",e,t,n),i=A("pad",e,t,n),a=A("kernelSize",e,t,n);return[r.maxPool3d(A("x",e,t,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],i)]}case"Dilation2D":{const s=A("strides",e,t,n),i=A("pad",e,t,n),a=A("dilations",e,t,n),o=s[1],l=s[2],u=a[1],c=a[2];return[r.dilation2d(A("x",e,t,n),A("filter",e,t,n),[o,l],i,[u,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return s((()=>((e,t,n,r=_)=>{switch(e.op){case"Fill":{const s=A("shape",e,t,n),i=A("dtype",e,t,n),a=A("value",e,t,n);return[r.fill(s,a,i)]}case"LinSpace":{const s=A("start",e,t,n),i=A("stop",e,t,n),a=A("num",e,t,n);return[r.linspace(s,i,a)]}case"Multinomial":{const s=A("logits",e,t,n),i=A("numSamples",e,t,n),a=A("seed",e,t,n);return[r.multinomial(s,i,a)]}case"OneHot":{const s=A("indices",e,t,n),i=A("depth",e,t,n),a=A("onValue",e,t,n),o=A("offValue",e,t,n),l=A("dtype",e,t,n);return[r.oneHot(s,i,a,o,l)]}case"Ones":return[r.ones(A("shape",e,t,n),A("dtype",e,t,n))];case"OnesLike":return[r.onesLike(A("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal(A("shape",e,t,n),A("dtype",e,t,n),A("seed",e,t,n))];case"RandomUniform":return[r.randomUniform(A("shape",e,t,n),A("minval",e,t,n),A("maxval",e,t,n),A("dtype",e,t,n))];case"Range":{const s=A("start",e,t,n),i=A("stop",e,t,n),a=A("step",e,t,n);return[r.range(s,i,a,A("dtype",e,t,n))]}case"TruncatedNormal":{const s=A("shape",e,t,n),i=A("mean",e,t,n),a=A("stdDev",e,t,n),o=A("seed",e,t,n);return[r.truncatedNormal(s,i,a,A("dtype",e,t,n),o)]}case"Zeros":return[r.zeros(A("shape",e,t,n),A("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike(A("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n,r,s=_)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:i,maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=Te(e,t,n),c=await s.image.nonMaxSuppressionWithScoreAsync(r,i,a,o,l,u);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:i,maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=Te(e,t,n),u=A("padToMaxOutputSize",e,t,n),c=await s.image.nonMaxSuppressionPaddedAsync(r,i,a,o,l,u);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:i,maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=Te(e,t,n);return[await s.image.nonMaxSuppressionAsync(r,i,a,o,l)]}case"Where":{const r=s.cast(A("condition",e,t,n),"bool"),i=[await s.whereAsync(r)];return r.dispose(),i}case"ListDiff":return s.setdiff1dAsync(A("x",e,t,n),A("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return s((()=>((e,t,n,r=_)=>{switch(e.op){case"LowerBound":{const s=A("sortedSequence",e,t,n),i=A("values",e,t,n);return[r.lowerBound(s,i)]}case"TopKV2":{const s=A("x",e,t,n),i=A("k",e,t,n),a=A("sorted",e,t,n),o=r.topk(s,i,a);return[o.values,o.indices]}case"UpperBound":{const s=A("sortedSequence",e,t,n),i=A("values",e,t,n);return[r.upperBound(s,i)]}case"Unique":{const s=A("x",e,t,n),i=r.unique(s);return[i.values,i.indices]}case"UniqueV2":{const s=A("x",e,t,n),i=A("axis",e,t,n),a=r.unique(s,i);return[a.values,a.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return s((()=>((e,t,n,r=_)=>{switch(e.op){case"ResizeBilinear":{const s=A("images",e,t,n),i=A("size",e,t,n),a=A("alignCorners",e,t,n),o=A("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(s,[i[0],i[1]],a,o)]}case"ResizeNearestNeighbor":{const s=A("images",e,t,n),i=A("size",e,t,n),a=A("alignCorners",e,t,n),o=A("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(s,[i[0],i[1]],a,o)]}case"CropAndResize":{const s=A("image",e,t,n),i=A("boxes",e,t,n),a=A("boxInd",e,t,n),o=A("cropSize",e,t,n),l=A("method",e,t,n),u=A("extrapolationValue",e,t,n);return[r.image.cropAndResize(s,i,a,o,l,u)]}case"ImageProjectiveTransformV3":{const s=A("images",e,t,n),i=A("transforms",e,t,n),a=A("outputShape",e,t,n),o=A("fillValue",e,t,n),l=A("interpolation",e,t,n),u=A("fillMode",e,t,n);return[r.image.transform(s,i,l.toLowerCase(),u.toLowerCase(),o,a)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return s((()=>((e,t,n,r=_)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const s=A("default",e,t,n);return[I(e.name,t,n)||s];case"Placeholder":return[I(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[D(A("x",e,t,n))];case"IdentityN":return A("x",e,t,n).map((e=>D(e)));case"Shape":return[r.tensor1d(A("x",e,t,n).shape,"int32")];case"ShapeN":return A("x",e,t,n).map((e=>r.tensor1d(e.shape)));case"Size":return[r.scalar(A("x",e,t,n).size,"int32")];case"Rank":return[r.scalar(A("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const i=A("x",e,t,n),a=A("data",e,t,n),o=A("message",e,t,n),l=A("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<a.length;e++)console.log(Array.prototype.slice.call(a[e].dataSync()).slice(0,l));return[i];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return s((()=>((e,t,n,r=_)=>{switch(e.op){case"Equal":return[r.equal(A("a",e,t,n),A("b",e,t,n))];case"NotEqual":return[r.notEqual(A("a",e,t,n),A("b",e,t,n))];case"Greater":return[r.greater(A("a",e,t,n),A("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual(A("a",e,t,n),A("b",e,t,n))];case"Less":return[r.less(A("a",e,t,n),A("b",e,t,n))];case"LessEqual":return[r.lessEqual(A("a",e,t,n),A("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd(A("a",e,t,n),A("b",e,t,n))];case"LogicalNot":return[r.logicalNot(A("a",e,t,n))];case"LogicalOr":return[r.logicalOr(A("a",e,t,n),A("b",e,t,n))];case"Select":case"SelectV2":return[r.where(A("condition",e,t,n),A("a",e,t,n),A("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return s((()=>((e,t,n,r=_)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(A("a",e,t,n),A("b",e,t,n),A("transposeA",e,t,n),A("transposeB",e,t,n))];case"Einsum":return[r.einsum(A("equation",e,t,n),...A("tensors",e,t,n))];case"Transpose":return[r.transpose(A("x",e,t,n),A("perm",e,t,n))];case"_FusedMatMul":const[s,i]=A("fusedOps",e,t,n),a="biasadd"===s,o="prelu"===i,l=A("numArgs",e,t,n),u=A("leakyreluAlpha",e,t,n);if(a){if(o&&2!==l)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==l)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,h]=A("args",e,t,n);return[r.fused.matMul({a:A("a",e,t,n),b:A("b",e,t,n),transposeA:A("transposeA",e,t,n),transposeB:A("transposeB",e,t,n),bias:c,activation:i,preluActivationWeights:h,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return s((()=>((e,t,n,r=_)=>{switch(e.op){case"EuclideanNorm":return[r.euclideanNorm(A("x",e,t,n),A("axis",e,t,n),A("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[r.batchNorm(A("x",e,t,n),A("mean",e,t,n),A("variance",e,t,n),A("offset",e,t,n),A("scale",e,t,n),A("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization(A("x",e,t,n),A("radius",e,t,n),A("bias",e,t,n),A("alpha",e,t,n),A("beta",e,t,n))];case"Softmax":return[r.softmax(A("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax(A("x",e,t,n))];case"SparseToDense":return[r.sparseToDense(A("sparseIndices",e,t,n),A("outputShape",e,t,n),A("sparseValues",e,t,n),A("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return s((()=>((e,t,n,r=_)=>{switch(e.op){case"Max":{const s=A("axis",e,t,n),i=A("keepDims",e,t,n);return[r.max(A("x",e,t,n),s,i)]}case"Mean":{const s=A("axis",e,t,n),i=A("keepDims",e,t,n);return[r.mean(A("x",e,t,n),s,i)]}case"Min":{const s=A("axis",e,t,n),i=A("keepDims",e,t,n);return[r.min(A("x",e,t,n),s,i)]}case"Sum":{const s=A("axis",e,t,n),i=A("keepDims",e,t,n);return[r.sum(A("x",e,t,n),s,i)]}case"All":{const s=A("axis",e,t,n),i=A("keepDims",e,t,n);return[r.all(A("x",e,t,n),s,i)]}case"Any":{const s=A("axis",e,t,n),i=A("keepDims",e,t,n);return[r.any(A("x",e,t,n),s,i)]}case"ArgMax":{const s=A("axis",e,t,n);return[r.argMax(A("x",e,t,n),s)]}case"ArgMin":{const s=A("axis",e,t,n);return[r.argMin(A("x",e,t,n),s)]}case"Prod":{const s=A("axis",e,t,n),i=A("keepDims",e,t,n);return[r.prod(A("x",e,t,n),s,i)]}case"Cumprod":{const s=A("axis",e,t,n),i=A("exclusive",e,t,n),a=A("reverse",e,t,n);return[r.cumprod(A("x",e,t,n),s,i,a)]}case"Cumsum":{const s=A("axis",e,t,n),i=A("exclusive",e,t,n),a=A("reverse",e,t,n);return[r.cumsum(A("x",e,t,n),s,i,a)]}case"Bincount":const s=A("x",e,t,n),i=A("weights",e,t,n),a=A("size",e,t,n);return[r.bincount(s,i,a)];case"DenseBincount":{const s=A("x",e,t,n),i=A("weights",e,t,n),a=A("size",e,t,n),o=A("binaryOutput",e,t,n);return[r.denseBincount(s,i,a,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return s((()=>((e,t,n,r=_)=>{switch(e.op){case"ConcatV2":case"Concat":{const s=A("n",e,t,n),i=A("axis",e,t,n);let a=A("tensors",e,t,n);return a=a.slice(0,s),[r.concat(a,i)]}case"Gather":{const s=A("x",e,t,n),i=A("indices",e,t,n);return[r.gather(s,r.cast(i,"int32"),0)]}case"GatherV2":{const s=A("axis",e,t,n),i=A("batchDims",e,t,n),a=A("x",e,t,n),o=A("indices",e,t,n);return[r.gather(a,r.cast(o,"int32"),s,i)]}case"Reverse":{const s=A("dims",e,t,n),i=[];for(let e=0;e<s.length;e++)s[e]&&i.push(e);const a=A("x",e,t,n);return[r.reverse(a,i)]}case"ReverseV2":{const s=A("axis",e,t,n),i=A("x",e,t,n);return[r.reverse(i,s)]}case"Slice":{const s=A("begin",e,t,n),i=A("size",e,t,n);return[r.slice(A("x",e,t,n),s,i)]}case"StridedSlice":{const s=A("begin",e,t,n),i=A("end",e,t,n),a=A("strides",e,t,n),o=A("beginMask",e,t,n),l=A("endMask",e,t,n),u=A("ellipsisMask",e,t,n),c=A("newAxisMask",e,t,n),h=A("shrinkAxisMask",e,t,n),d=A("x",e,t,n);return[r.stridedSlice(d,s,i,a,o,l,u,c,h)]}case"Pack":return(0,E.lub)((()=>{const s=A("axis",e,t,n),i=A("tensors",e,t,n),a=i[0].shape,o=r.squeeze(i[0]).shape,l=i.map((e=>{const t=E.D5U.arraysEqual(e.shape,a);if(!t&&!E.D5U.arraysEqual(r.squeeze(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:r.reshape(e,a)}));return[r.stack(l,s)]}));case"Unpack":{const s=A("axis",e,t,n),i=A("tensor",e,t,n);return r.unstack(i,s)}case"Tile":{const s=A("reps",e,t,n);return[r.tile(A("x",e,t,n),s)]}case"Split":case"SplitV":{const s=A("axis",e,t,n),i=A("numOrSizeSplits",e,t,n),a=A("x",e,t,n);return r.split(a,i,s)}case"ScatterNd":{const s=A("indices",e,t,n),i=A("values",e,t,n),a=A("shape",e,t,n);return[r.scatterND(s,i,a)]}case"GatherNd":{const s=A("x",e,t,n),i=A("indices",e,t,n);return[r.gatherND(s,i)]}case"SparseToDense":{const s=A("sparseIndices",e,t,n),i=A("outputShape",e,t,n),a=A("sparseValues",e,t,n),o=A("defaultValue",e,t,n);return[r.sparseToDense(s,a,i,a.dtype===o.dtype?o:r.cast(o,a.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return s((()=>((e,t,n,r=_)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:s,outputValues:i,emptyRowIndicator:a,reverseIndexMap:o}=r.sparse.sparseFillEmptyRows(A("indices",e,t,n),A("values",e,t,n),A("denseShape",e,t,n),A("defaultValue",e,t,n));return[s,i,a,o]}case"SparseReshape":{const{outputIndices:s,outputShape:i}=r.sparse.sparseReshape(A("inputIndices",e,t,n),A("inputShape",e,t,n),A("newShape",e,t,n));return[s,i]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(A("data",e,t,n),A("indices",e,t,n),A("segmentIds",e,t,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(A("data",e,t,n),A("indices",e,t,n),A("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return s((()=>((e,t,n,r=_)=>{switch(e.op){case"FFT":return[r.fft(A("x",e,t,n))];case"IFFT":return[r.ifft(A("x",e,t,n))];case"RFFT":return[r.rfft(A("x",e,t,n))];case"IRFFT":return[r.irfft(A("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return s((()=>((e,t,n,r=_)=>{switch(e.op){case"StringNGrams":{const{nGrams:s,nGramsSplits:i}=r.string.stringNGrams(A("data",e,t,n),A("dataSplits",e,t,n),A("separator",e,t,n),A("nGramWidths",e,t,n),A("leftPad",e,t,n),A("rightPad",e,t,n),A("padWidth",e,t,n),A("preserveShortSequences",e,t,n));return[s,i]}case"StringSplit":{const{indices:s,values:i,shape:a}=r.string.stringSplit(A("input",e,t,n),A("delimiter",e,t,n),A("skipEmpty",e,t,n));return[s,i,a]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(A("input",e,t,n),A("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return s((()=>((e,t,n,r=_)=>{switch(e.op){case"Cast":return[r.cast(A("x",e,t,n),A("dtype",e,t,n))];case"ExpandDims":{const s=A("axis",e,t,n);return[r.expandDims(A("x",e,t,n),s)]}case"Squeeze":{const s=A("axis",e,t,n);return[r.squeeze(A("x",e,t,n),s)]}case"Reshape":return[r.reshape(A("x",e,t,n),A("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad(A("x",e,t,n),A("padding",e,t,n),A("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad(A("x",e,t,n),A("padding",e,t,n),A("constantValue",e,t,n))];case"SpaceToBatchND":{const s=A("blockShape",e,t,n),i=A("paddings",e,t,n);return[r.spaceToBatchND(A("x",e,t,n),s,i)]}case"BatchToSpaceND":{const s=A("blockShape",e,t,n),i=A("crops",e,t,n);return[r.batchToSpaceND(A("x",e,t,n),s,i)]}case"DepthToSpace":{const s=A("blockSize",e,t,n),i=A("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace(A("x",e,t,n),s,i)]}case"BroadcastTo":return[r.broadcastTo(A("x",e,t,n),A("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs(A("s0",e,t,n),A("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const s=A("keyDType",e,t,n),i=A("valueDType",e,t,n),a=new Me(s,i);return r.addHashTable(e.name,a),[a.handle]}case"LookupTableImport":case"LookupTableImportV2":{const s=A("tableHandle",e,t,n,r),i=A("keys",e,t,n),a=A("values",e,t,n),o=r.getHashTableById(s.id);return[await o.import(i,a)]}case"LookupTableFind":case"LookupTableFindV2":{const s=A("tableHandle",e,t,n,r),i=A("keys",e,t,n),a=A("defaultValue",e,t,n),o=r.getHashTableById(s.id);return[await o.find(i,a)]}case"LookupTableSize":case"LookupTableSizeV2":{const s=A("tableHandle",e,t,n,r);return[r.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const i=C(e.op);if(i&&i.customExecutor)return i.customExecutor(new me(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return E.D5U.isPromise(i)?i.then((e=>[].concat(e))):[].concat(i)}class Ae{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function Ie(e,t,n,r){const s=new Set,i=[];let a=null,o=null;const l=new Set,u=Object.keys(e).map((e=>N(e)[0]));let c=[];null!=r&&(c=r.map((e=>N(e.name)[0])));const h=[...t];for(;h.length>0;){const e=h.pop();(Le(e)||De(e)||Oe(e))&&null==a&&(a=e,o=a.children.map((e=>e.name)).filter((e=>s.has(e)))),s.add(e.name),null==n[e.name]&&-1===u.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{l.has(e.name)||(l.add(e.name),h.push(e))})):i.push(e.name))}return{inputs:e,outputs:t,usedNodes:s,missingInputs:i,dynamicNode:a,syncInputs:o}}const Re=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],ke=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],Ne=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function Le(e){return Re.indexOf(e.op)>=0}function De(e){return ke.indexOf(e.op)>=0}function Oe(e){return Ne.indexOf(e.op)>=0}class Pe{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new Pe(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=Ie(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:s,syncInputs:i}=n;if(null!=s)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(r.length>0){const n=t.map((e=>e.name)),s=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${s}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:s}=n,i=[],a=Object.keys(s).map((e=>N(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;a.forEach((e=>{r.has(e.name)&&i.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&i.push(e)})),null!=o&&o.forEach((e=>{r.has(e.name)&&i.push(e)}));const l=new Set,u=[];for(;i.length>0;){const e=i.pop();l.add(e.name),t[e.name]||u.push(e),e.children.forEach((e=>{!l.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>l.has(e.name)))&&i.push(e)}))}return u}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[N(e)[0]])),s=t.map((e=>N(e)[0]));let i=s.map((e=>this.graph.nodes[e]));this.resetIntermediateTensors(),0===i.length&&(i=this._outputs);const a=this.getCompilationKey(r,i);let o=this.compiledMap.get(a);null==o&&(o=this.compile(e,i),this.compiledMap.set(a,o));const l={},u={};return(0,E.lub)((()=>{const n=new Ae(this.weightMap,l,u,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,s]=N(t),i=[];i[s]=e[t],r[n]=i}));const i=this.getFrozenTensorIds(r),a={};for(let e=0;e<o.length;e++){const t=o[e];if(!r[t.name]){const e=Ce(t,r,n,this._resourceManager);if(E.D5U.isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,i,s,a)}}return null==this.parent&&n.dispose(i),t.map((e=>I(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,s,i,a){"control"!==t.category&&-1===i.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(a[e.id]=(a[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const i=function(e,t,n){return t[k(e,n.currentContextId)]}(e.name,n,r);null!=i&&i.forEach((e=>{if(e&&!e.kept&&!s.has(e.id)){const n=a[e.id];if(1===n){if(this.keepTensorForDebug){const[n,s]=R(t.name,r);this.intermediateTensors[n]||(this.intermediateTensors[n]=[]),this.intermediateTensors[n][s]=e}else e.dispose();delete a[e.id]}else null!=n&&a[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.intermediateTensors&&(Object.keys(this.intermediateTensors).forEach((e=>this.intermediateTensors[e].forEach((e=>e.dispose())))),this.disposeTensorsMap())}disposeTensorsMap(){this.tensorsMap&&Object.keys(this.tensorsMap).forEach((e=>{this.tensorsMap[e].forEach((e=>{!e||e.kept||e.isDisposed||this.keepIds.has(e.id)||e.dispose()}))}))}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(const e in this.intermediateTensors)this.intermediateTensors[e].forEach((e=>e.dispose())),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,r={},s={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=(0,E.OBj)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){console.warn(e.message)}this.resetIntermediateTensors();const i=new Ae(this.weightMap,r,s,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,i,t,n);const a=t.map((e=>I(e,this.tensorsMap,i))),o=a.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id));return this.keepIds=new Set([...o,...l,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),null==this.parent&&i.dispose(this.keepIds),a}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const s=Object.keys(e),i=s.map((e=>this.graph.nodes[N(e)[0]])),a=n.map((e=>N(e)[0]));let o=a.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const{usedNodes:l,missingInputs:u,dynamicNode:c,syncInputs:h}=Ie(e,o,this.weightMap,this._initNodes),d=[...i,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),p=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=N(t),s=[];s[r]=e[t],p[n]=s}));const f={},m=this.getFrozenTensorIds(p),g={};for(;d.length>0;){const e=this.processStack(i,d,t,p,g,m,a,f,l);await Promise.all(e)}null!=c||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter((e=>!Le(e)&&!I(e.name,p,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${s}]. Consider providing the following inputs: [${u}]. ${e}`)}return p}processStack(e,t,n,r,s,i,a,o,l){const u=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&A("isConstant",e.node,r,n)&&([c]=R(e.node.name,n)),null==r[e.node.name]){const h=Ce(e.node,r,n,this._resourceManager);c||([c]=R(e.node.name,n));const d=n.currentContext;E.D5U.isPromise(h)?u.push(h.then((u=>(r[c]=u,n.currentContext=d,this.checkTensorForDisposal(c,e.node,r,n,i,a,o),this.processChildNodes(e.node,t,n,r,s,l),u)))):(r[c]=h,this.checkTensorForDisposal(c,e.node,r,n,i,a,o),this.processChildNodes(e.node,t,n,r,s,l))}else this.processChildNodes(e.node,t,n,r,s,l)}return u}processChildNodes(e,t,n,r,s,i){e.children.forEach((e=>{const[a]=R(e.name,n);!s[a]&&i.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!I(e,r,n)))&&(s[a]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!I(e,r,n)))&&(s[a]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=N(t),s=this.graph.nodes[r];if(s.attrParams.shape&&s.attrParams.shape.value){const e=s.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));E.D5U.assert(t,(()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}s.attrParams.dtype&&s.attrParams.dtype.value&&E.D5U.assert(n.dtype===s.attrParams.dtype.value,(()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){const t={};for(const n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=N(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e),{})}checkOutputs(e){e.forEach((e=>{const[t]=N(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class Fe{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}const $e="?tfjs-format=file",Be="model.json";class Ue{constructor(e,t={},n=E.io){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new Fe}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return E.D5U.isPromise(e)?e.then((e=>this.loadSync(e))):this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(n=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Pe(ee.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=ee.Instance.transformGraph(e.modelInitializer);this.initializer=new Pe(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){const n=this.execute(e,this.outputNodes);if(this.structuredOutputKeys){const e=n instanceof E.esB?[n]:n,t={};return e.forEach(((e,n)=>t[this.structuredOutputKeys[n]]=e)),t}return n}normalizeInputs(e){if(!(e instanceof E.esB||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function ze(e,t={},n=E.io){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"==typeof e&&(e=function(e){return e.endsWith("/")||(e+="/"),`${e}${Be}${$e}`}(e));const r=new Ue(e,t,n);return await r.load(),r}var Ve=function(){return(Ve=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var s in t=arguments[n])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e}).apply(this,arguments)};function Ge(e,t,n,r){return new(n||(n=Promise))((function(s,i){function a(e){try{l(r.next(e))}catch(e){i(e)}}function o(e){try{l(r.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,o)}l((r=r.apply(e,t||[])).next())}))}function We(e,t){var n,r,s,i,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(s=2&i[0]?r.return:i[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,i[1])).done)return s;switch(r=0,s&&(i=[2&i[0],s.value]),i[0]){case 0:case 1:s=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((s=(s=a.trys).length>0&&s[s.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!s||i[1]>s[0]&&i[1]<s[3])){a.label=i[1];break}if(6===i[0]&&a.label<s[1]){a.label=s[1],s=i;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(i);break}s[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],r=0}finally{n=s=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}}function He(e,t,n,r){return new(n||(n=Promise))((function(s,i){function a(e){try{l(r.next(e))}catch(e){i(e)}}function o(e){try{l(r.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,o)}l((r=r.apply(e,t||[])).next())}))}function je(e,t){var n,r,s,i,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(s=2&i[0]?r.return:i[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,i[1])).done)return s;switch(r=0,s&&(i=[2&i[0],s.value]),i[0]){case 0:case 1:s=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!(s=(s=a.trys).length>0&&s[s.length-1])&&(6===i[0]||2===i[0])){a=0;continue}if(3===i[0]&&(!s||i[1]>s[0]&&i[1]<s[3])){a.label=i[1];break}if(6===i[0]&&a.label<s[1]){a.label=s[1],s=i;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(i);break}s[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],r=0}finally{n=s=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}}var Xe=function(e){return{startEndTensor:e,startPoint:(0,E.tPi)(e,[0,0],[-1,2]),endPoint:(0,E.tPi)(e,[0,2],[-1,2])}},qe={strides:[8,16],anchors:[2,6]};function Ke(e,t){var n,r,s;if(e.topLeft instanceof E.esB&&e.bottomRight instanceof E.esB){var i=(0,E.lub)((function(){return[(0,E.zoF)([(0,E.tPi)((0,E.luU)(t-1,e.topLeft),0,1),(0,E.tPi)(e.topLeft,1,1)]),(0,E.zoF)([(0,E.luU)(t-1,(0,E.tPi)(e.bottomRight,0,1)),(0,E.tPi)(e.bottomRight,1,1)])]}));n=i[0],r=i[1],null!=e.landmarks&&(s=(0,E.lub)((function(){var n=(0,E.luU)((0,E.RRF)([t-1,0]),e.landmarks),r=(0,E.RRF)([1,-1]);return(0,E.dC7)(n,r)})))}else{var a=e.topLeft,o=a[0],l=a[1],u=e.bottomRight,c=u[0],h=u[1];n=[t-1-o,l],r=[t-1-c,h],null!=e.landmarks&&(s=e.landmarks.map((function(e){return[t-1-e[0],e[1]]})))}var d={topLeft:n,bottomRight:r};return null!=s&&(d.landmarks=s),null!=e.probability&&(d.probability=e.probability instanceof E.esB?e.probability.clone():e.probability),d}function Ye(e,t){return(0,E.lub)((function(){var n;return n=e.hasOwnProperty("box")?e.box:e,(0,E.L9e)(function(e,t){var n=(0,E.dC7)(e.startPoint,t),r=(0,E.dC7)(e.endPoint,t),s=(0,E.Izb)([n,r],1);return Xe(s)}(n,t).startEndTensor)}))}var Je=function(){function e(e,t,n,r,s,i){this.blazeFaceModel=e,this.width=t,this.height=n,this.maxFaces=r,this.anchorsData=function(e,t,n){for(var r=[],s=0;s<n.strides.length;s++)for(var i=n.strides[s],a=Math.floor((t+i-1)/i),o=Math.floor((e+i-1)/i),l=n.anchors[s],u=0;u<a;u++)for(var c=i*(u+.5),h=0;h<o;h++)for(var d=i*(h+.5),p=0;p<l;p++)r.push([d,c]);return r}(t,n,qe),this.anchors=(0,E.odF)(this.anchorsData),this.inputSizeData=[t,n],this.inputSize=(0,E.RRF)([t,n]),this.iouThreshold=s,this.scoreThreshold=i}return e.prototype.getBoundingBoxes=function(e,t,n){return void 0===n&&(n=!0),He(this,void 0,void 0,(function(){var r,s,i,a,o,l,u,c,h,d,p,f,m,g,y=this;return je(this,(function(x){switch(x.label){case 0:return r=(0,E.lub)((function(){var t=E.BHj.resizeBilinear(e,[y.width,y.height]),n=(0,E.dC7)((0,E.luU)((0,E.hiC)(t,255),.5),2),r=y.blazeFaceModel.predict(n),s=(0,E.L9e)(r),i=function(e,t,n){var r=(0,E.tPi)(e,[0,1],[-1,2]),s=(0,E.IHx)(r,t),i=(0,E.tPi)(e,[0,3],[-1,2]),a=(0,E.hiC)(i,n),o=(0,E.hiC)(s,n),l=(0,E.hiC)(a,2),u=(0,E.luU)(o,l),c=(0,E.IHx)(o,l),h=(0,E.dC7)(u,n),d=(0,E.dC7)(c,n);return(0,E.Izb)([h,d],1)}(s,y.anchors,y.inputSize),a=(0,E.tPi)(s,[0,0],[-1,1]);return[s,i,(0,E.L9e)((0,E.XD2)(a))]})),s=r[0],i=r[1],a=r[2],o=console.warn,console.warn=function(){},l=E.BHj.nonMaxSuppression(i,a,this.maxFaces,this.iouThreshold,this.scoreThreshold),console.warn=o,[4,l.array()];case 1:return u=x.sent(),l.dispose(),c=u.map((function(e){return(0,E.tPi)(i,[e,0],[1,-1])})),t?[3,3]:[4,Promise.all(c.map((function(e){return He(y,void 0,void 0,(function(){var t;return je(this,(function(n){switch(n.label){case 0:return[4,e.array()];case 1:return t=n.sent(),e.dispose(),[2,t]}}))}))})))];case 2:c=x.sent(),x.label=3;case 3:for(h=e.shape[1],d=e.shape[2],p=t?(0,E.hiC)([d,h],this.inputSize):[d/this.inputSizeData[0],h/this.inputSizeData[1]],f=[],m=function(e){var r=c[e],i=(0,E.lub)((function(){var i=Xe(r instanceof E.esB?r:(0,E.odF)(r));if(!n)return i;var o,l=u[e];return o=t?(0,E.tPi)(y.anchors,[l,0],[1,2]):y.anchorsData[l],{box:i,landmarks:(0,E.XLQ)((0,E.L9e)((0,E.tPi)(s,[l,5],[1,-1])),[6,-1]),probability:(0,E.tPi)(a,[l],[1]),anchor:o}}));f.push(i)},g=0;g<c.length;g++)m(g);return i.dispose(),a.dispose(),s.dispose(),[2,{boxes:f,scaleFactor:p}]}}))}))},e.prototype.estimateFaces=function(e,t,n,r){return void 0===t&&(t=!1),void 0===n&&(n=!1),void 0===r&&(r=!0),He(this,void 0,void 0,(function(){var s,i,a,o,l,u,c=this;return je(this,(function(h){switch(h.label){case 0:return s=function(e){return e instanceof E.esB?[e.shape[0],e.shape[1]]:[e.height,e.width]}(e),i=s[1],a=(0,E.lub)((function(){return e instanceof E.esB||(e=E.Xhn.fromPixels(e)),(0,E.dt4)((0,E.pju)(e,"float32"),0)})),[4,this.getBoundingBoxes(a,t,r)];case 1:return o=h.sent(),l=o.boxes,u=o.scaleFactor,a.dispose(),t?[2,l.map((function(e){var t=Ye(e,u),s={topLeft:(0,E.tPi)(t,[0],[2]),bottomRight:(0,E.tPi)(t,[2],[2])};if(r){var a=e,o=a.landmarks,l=a.probability,c=a.anchor,h=(0,E.dC7)((0,E.IHx)(o,c),u);s.landmarks=h,s.probability=l}return n&&(s=Ke(s,i)),s}))]:[2,Promise.all(l.map((function(e){return He(c,void 0,void 0,(function(){var t,s,a,o,l,c,h,d,p,f,m,g=this;return je(this,(function(y){switch(y.label){case 0:return t=Ye(e,u),r?[3,2]:[4,t.array()];case 1:return l=y.sent(),s={topLeft:l.slice(0,2),bottomRight:l.slice(2)},[3,4];case 2:return[4,Promise.all([e.landmarks,t,e.probability].map((function(e){return He(g,void 0,void 0,(function(){return je(this,(function(t){return[2,e.array()]}))}))})))];case 3:a=y.sent(),o=a[0],l=a[1],c=a[2],h=e.anchor,p=(d=u)[0],f=d[1],m=o.map((function(e){return[(e[0]+h[0])*p,(e[1]+h[1])*f]})),s={topLeft:l.slice(0,2),bottomRight:l.slice(2),landmarks:m,probability:c},function(e){e.startEndTensor.dispose(),e.startPoint.dispose(),e.endPoint.dispose()}(e.box),e.landmarks.dispose(),e.probability.dispose(),y.label=4;case 4:return t.dispose(),n&&(s=Ke(s,i)),[2,s]}}))}))})))]}}))}))},e}();function Ze(e){var t=void 0===e?{}:e,n=t.maxFaces,r=void 0===n?10:n,s=t.inputWidth,i=void 0===s?128:s,a=t.inputHeight,o=void 0===a?128:a,l=t.iouThreshold,u=void 0===l?.3:l,c=t.scoreThreshold,h=void 0===c?.75:c,d=t.modelUrl;return He(this,void 0,void 0,(function(){var e;return je(this,(function(t){switch(t.label){case 0:return null==d?[3,2]:[4,ze(d)];case 1:return e=t.sent(),[3,4];case 2:return[4,ze("https://tfhub.dev/tensorflow/tfjs-model/blazeface/1/default/1",{fromTFHub:!0})];case 3:e=t.sent(),t.label=4;case 4:return[2,new Je(e,i,o,r,u,h)]}}))}))}var Qe={silhouette:[10,338,297,332,284,251,389,356,454,323,361,288,397,365,379,378,400,377,152,148,176,149,150,136,172,58,132,93,234,127,162,21,54,103,67,109],lipsUpperOuter:[61,185,40,39,37,0,267,269,270,409,291],lipsLowerOuter:[146,91,181,84,17,314,405,321,375,291],lipsUpperInner:[78,191,80,81,82,13,312,311,310,415,308],lipsLowerInner:[78,95,88,178,87,14,317,402,318,324,308],rightEyeUpper0:[246,161,160,159,158,157,173],rightEyeLower0:[33,7,163,144,145,153,154,155,133],rightEyeUpper1:[247,30,29,27,28,56,190],rightEyeLower1:[130,25,110,24,23,22,26,112,243],rightEyeUpper2:[113,225,224,223,222,221,189],rightEyeLower2:[226,31,228,229,230,231,232,233,244],rightEyeLower3:[143,111,117,118,119,120,121,128,245],rightEyebrowUpper:[156,70,63,105,66,107,55,193],rightEyebrowLower:[35,124,46,53,52,65],rightEyeIris:[473,474,475,476,477],leftEyeUpper0:[466,388,387,386,385,384,398],leftEyeLower0:[263,249,390,373,374,380,381,382,362],leftEyeUpper1:[467,260,259,257,258,286,414],leftEyeLower1:[359,255,339,254,253,252,256,341,463],leftEyeUpper2:[342,445,444,443,442,441,413],leftEyeLower2:[446,261,448,449,450,451,452,453,464],leftEyeLower3:[372,340,346,347,348,349,350,357,465],leftEyebrowUpper:[383,300,293,334,296,336,285,417],leftEyebrowLower:[265,353,276,283,282,295],leftEyeIris:[468,469,470,471,472],midwayBetweenEyes:[168],noseTip:[1],noseBottom:[2],noseRightCorner:[98],noseLeftCorner:[327],rightCheek:[205],leftCheek:[425]};function et(e){return[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])]}function tt(e){return[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2]}function nt(e,t){void 0===t&&(t=1.5);var n=tt(e),r=et(e),s=[t*r[0]/2,t*r[1]/2];return{startPoint:[n[0]-s[0],n[1]-s[1]],endPoint:[n[0]+s[0],n[1]+s[1]],landmarks:e.landmarks}}function rt(e){var t=tt(e),n=et(e),r=Math.max.apply(Math,n)/2;return{startPoint:[t[0]-r,t[1]-r],endPoint:[t[0]+r,t[1]+r],landmarks:e.landmarks}}var st=[[1,0,0],[0,1,0],[0,0,1]];function it(e,t){return[[1,0,e],[0,1,t],[0,0,1]]}function at(e,t){for(var n=0,r=0;r<e.length;r++)n+=e[r]*t[r];return n}function ot(e,t){for(var n=[],r=0;r<e.length;r++)n.push(e[r][t]);return n}function lt(e,t){for(var n=[],r=e.length,s=0;s<r;s++){n.push([]);for(var i=0;i<r;i++)n[s].push(at(e[s],ot(t,i)))}return n}function ut(e,t){var n=Math.cos(e),r=Math.sin(e),s=[[n,-r,0],[r,n,0],[0,0,1]],i=lt(it(t[0],t[1]),s);return lt(i,it(-t[0],-t[1]))}var ct=[13,Qe.midwayBetweenEyes[0]],ht=[3,2],dt=Qe.leftEyeLower0,pt=[dt[0],dt[dt.length-1]],ft=Qe.rightEyeLower0,mt=[ft[0],ft[ft.length-1]],gt=[{key:"EyeUpper0",indices:[9,10,11,12,13,14,15]},{key:"EyeUpper1",indices:[25,26,27,28,29,30,31]},{key:"EyeUpper2",indices:[41,42,43,44,45,46,47]},{key:"EyeLower0",indices:[0,1,2,3,4,5,6,7,8]},{key:"EyeLower1",indices:[16,17,18,19,20,21,22,23,24]},{key:"EyeLower2",indices:[32,33,34,35,36,37,38,39,40]},{key:"EyeLower3",indices:[54,55,56,57,58,59,60,61,62]},{key:"EyebrowUpper",indices:[63,64,65,66,67,68,69,70]},{key:"EyebrowLower",indices:[48,49,50,51,52,53]}];function yt(e,t,n,r){for(var s=0;s<gt.length;s++){var i=gt[s],a=i.key,o=i.indices,l=Qe[""+n+a];if(null==r||r.includes(a))for(var u=0;u<o.length;u++){var c=o[u];e[l[u]]=[t[c][0],t[c][1],(t[c][2]+e[l[u]][2])/2]}}}var xt=function(){function e(e,t,n,r,s,i,a){this.regionsOfInterest=[],this.runsWithoutFaceDetector=0,this.boundingBoxDetector=e,this.meshDetector=t,this.irisModel=a,this.meshWidth=n,this.meshHeight=r,this.maxContinuousChecks=s,this.maxFaces=i}return e.prototype.transformRawCoords=function(e,t,n,r){var s,i,a,o,l=this,u=et({startPoint:t.startPoint,endPoint:t.endPoint}),c=[u[0]/this.meshWidth,u[1]/this.meshHeight],h=e.map((function(e){return[c[0]*(e[0]-l.meshWidth/2),c[1]*(e[1]-l.meshHeight/2),e[2]]})),d=ut(n,[0,0]),p=h.map((function(e){return function(e,t){return[at(e,t[0]),at(e,t[1])]}(e,d).concat([e[2]])})),f=(i=[[(s=r)[0][0],s[1][0]],[s[0][1],s[1][1]]],a=[s[0][2],s[1][2]],o=[-at(i[0],a),-at(i[1],a)],[i[0].concat(o[0]),i[1].concat(o[1]),[0,0,1]]),m=tt({startPoint:t.startPoint,endPoint:t.endPoint}).concat([1]),g=[at(m,f[0]),at(m,f[1])];return p.map((function(e){return[e[0]+g[0],e[1]+g[1],e[2]]}))},e.prototype.getLeftToRightEyeDepthDifference=function(e){return e[pt[0]][2]-e[mt[0]][2]},e.prototype.getEyeBox=function(e,t,n,r,s){void 0===s&&(s=!1);var i=rt(nt(this.calculateLandmarksBoundingBox([e[n],e[r]]),2.3)),a=et(i),o=E.BHj.cropAndResize(t,[[i.startPoint[1]/this.meshHeight,i.startPoint[0]/this.meshWidth,i.endPoint[1]/this.meshHeight,i.endPoint[0]/this.meshWidth]],[0],[64,64]);return s&&(o=E.BHj.flipLeftRight(o)),{box:i,boxSize:a,crop:o}},e.prototype.getEyeCoords=function(e,t,n,r){void 0===r&&(r=!1);for(var s=[],i=0;i<76;i++){var a=e[3*i],o=e[3*i+1],l=e[3*i+2];s.push([(r?1-a/64:a/64)*n[0]+t.startPoint[0],o/64*n[1]+t.startPoint[1],l])}return{rawCoords:s,iris:s.slice(71)}},e.prototype.getAdjustedIrisCoords=function(e,t,n){var r=e[Qe[n+"EyeUpper0"][3]][2],s=e[Qe[n+"EyeLower0"][4]][2],i=(r+s)/2;return t.map((function(e,t){var n=i;return 2===t?n=r:4===t&&(n=s),[e[0],e[1],n]}))},e.prototype.predict=function(e,t){return Ge(this,void 0,void 0,(function(){var n,r,s,i,a=this;return We(this,(function(o){switch(o.label){case 0:return this.shouldUpdateRegionsOfInterest()?[4,this.boundingBoxDetector.getBoundingBoxes(e,!1,!0)]:[3,2];case 1:return n=o.sent(),r=n.boxes,s=n.scaleFactor,0===r.length?(this.regionsOfInterest=[],[2,null]):(i=r.map((function(e){var t,n,r={startPoint:(0,E.L9e)(e.box.startPoint).arraySync(),endPoint:(0,E.L9e)(e.box.endPoint).arraySync()},i=rt(nt((n=s,{startPoint:[(t=r).startPoint[0]*n[0],t.startPoint[1]*n[1]],endPoint:[t.endPoint[0]*n[0],t.endPoint[1]*n[1]]})));return Ve({},i,{landmarks:e.landmarks.arraySync()})})),r.forEach((function(e){null!=e&&null!=e.startPoint&&(e.startEndTensor.dispose(),e.startPoint.dispose(),e.endPoint.dispose())})),this.updateRegionsOfInterest(i),this.runsWithoutFaceDetector=0,[3,3]);case 2:this.runsWithoutFaceDetector++,o.label=3;case 3:return[2,(0,E.lub)((function(){return a.regionsOfInterest.map((function(n,r){var s,i=n.landmarks.length>=468,o=ct[0],l=ct[1];!1===i&&(o=ht[0],l=ht[1]),s=function(e,t){var n;return(n=Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]))-2*Math.PI*Math.floor((n+Math.PI)/(2*Math.PI))}(n.landmarks[o],n.landmarks[l]);var u=tt({startPoint:n.startPoint,endPoint:n.endPoint}),c=[u[0]/e.shape[2],u[1]/e.shape[1]],h=e,d=st;0!==s&&(h=E.BHj.rotateWithOffset(e,s,0,c),d=ut(-s,u));var p={startPoint:n.startPoint,endPoint:n.endPoint},f=(0,E.hiC)(function(e,t,n){var r=t.shape[1],s=t.shape[2],i=[[e.startPoint[1]/r,e.startPoint[0]/s,e.endPoint[1]/r,e.endPoint[0]/s]];return E.BHj.cropAndResize(t,i,[0],n,"bilinear",0)}(p,h,[a.meshHeight,a.meshWidth]),255),m=a.meshDetector.predict(f),g=m[1],y=m[2],x=(0,E.XLQ)(y,[-1,3]).arraySync();if(t){var v=a.getEyeBox(x,f,pt[0],pt[1],!0),b=v.box,w=v.boxSize,_=v.crop,S=a.getEyeBox(x,f,mt[0],mt[1]),T=S.box,M=S.boxSize,C=S.crop,A=a.irisModel.predict((0,E.zoF)([_,C])).dataSync(),I=A.slice(0,228),R=a.getEyeCoords(I,b,w,!0),k=R.rawCoords,N=R.iris,L=A.slice(228),D=a.getEyeCoords(L,T,M),O=D.rawCoords,P=D.iris,F=a.getLeftToRightEyeDepthDifference(x);Math.abs(F)<30?(yt(x,k,"left"),yt(x,O,"right")):F<1?yt(x,k,"left",["EyeUpper0","EyeLower0"]):yt(x,O,"right",["EyeUpper0","EyeLower0"]);var $=a.getAdjustedIrisCoords(x,N,"left"),B=a.getAdjustedIrisCoords(x,P,"right");x=x.concat($).concat(B)}var U=a.transformRawCoords(x,n,s,d),z=(0,E.odF)(U),V=nt(a.calculateLandmarksBoundingBox(U)),G=rt(V);return a.regionsOfInterest[r]=Ve({},G,{landmarks:z.arraySync()}),{coords:(0,E.odF)(x,[x.length,3]),scaledCoords:z,box:V,flag:(0,E.L9e)(g)}}))}))]}}))}))},e.prototype.updateRegionsOfInterest=function(e){for(var t=0;t<e.length;t++){var n=e[t],r=this.regionsOfInterest[t],s=0;if(r&&r.startPoint){var i=n.startPoint,a=i[0],o=i[1],l=n.endPoint,u=l[0],c=l[1],h=r.startPoint,d=h[0],p=h[1],f=r.endPoint,m=f[0],g=f[1],y=Math.max(a,d),x=Math.max(o,p),v=(Math.min(u,m)-y)*(Math.min(c,g)-x);s=v/((u-a)*(c-o)+(m-d)*(g-o)-v)}s<.25&&(this.regionsOfInterest[t]=n)}this.regionsOfInterest=this.regionsOfInterest.slice(0,e.length)},e.prototype.clearRegionOfInterest=function(e){null!=this.regionsOfInterest[e]&&(this.regionsOfInterest=this.regionsOfInterest.slice(0,e).concat(this.regionsOfInterest.slice(e+1)))},e.prototype.shouldUpdateRegionsOfInterest=function(){var e=this.regionsOfInterest.length,t=0===e;return 1===this.maxFaces||t?t:e!==this.maxFaces&&this.runsWithoutFaceDetector>=this.maxContinuousChecks},e.prototype.calculateLandmarksBoundingBox=function(e){var t=e.map((function(e){return e[0]})),n=e.map((function(e){return e[1]}));return{startPoint:[Math.min.apply(Math,t),Math.min.apply(Math,n)],endPoint:[Math.max.apply(Math,t),Math.max.apply(Math,n)]}},e}(),vt=[[.499976992607117,.652534008026123],[.500025987625122,.547487020492554],[.499974012374878,.602371990680695],[.482113003730774,.471979022026062],[.500150978565216,.527155995368958],[.499909996986389,.498252987861633],[.499523013830185,.40106201171875],[.289712011814117,.380764007568359],[.499954998493195,.312398016452789],[.499987006187439,.269918978214264],[.500023007392883,.107050001621246],[.500023007392883,.666234016418457],[.5000159740448,.679224014282227],[.500023007392883,.692348003387451],[.499976992607117,.695277988910675],[.499976992607117,.70593398809433],[.499976992607117,.719385027885437],[.499976992607117,.737019002437592],[.499967992305756,.781370997428894],[.499816000461578,.562981009483337],[.473773002624512,.573909997940063],[.104906998574734,.254140973091125],[.365929991006851,.409575998783112],[.338757991790771,.41302502155304],[.311120003461838,.409460008144379],[.274657994508743,.389131009578705],[.393361985683441,.403706014156342],[.345234006643295,.344011008739471],[.370094001293182,.346076011657715],[.319321990013123,.347265005111694],[.297903001308441,.353591024875641],[.24779200553894,.410809993743896],[.396889001131058,.842755019664764],[.280097991228104,.375599980354309],[.106310002505779,.399955987930298],[.2099249958992,.391353011131287],[.355807989835739,.534406006336212],[.471751004457474,.65040397644043],[.474155008792877,.680191993713379],[.439785003662109,.657229006290436],[.414617002010345,.66654098033905],[.450374007225037,.680860996246338],[.428770989179611,.682690978050232],[.374971002340317,.727805018424988],[.486716985702515,.547628998756409],[.485300987958908,.527395009994507],[.257764995098114,.314490020275116],[.401223003864288,.455172002315521],[.429818987846375,.548614978790283],[.421351999044418,.533740997314453],[.276895999908447,.532056987285614],[.483370006084442,.499586999416351],[.33721199631691,.282882988452911],[.296391993761063,.293242990970612],[.169294998049736,.193813979625702],[.447580009698868,.302609980106354],[.392390012741089,.353887975215912],[.354490011930466,.696784019470215],[.067304998636246,.730105042457581],[.442739009857178,.572826027870178],[.457098007202148,.584792017936707],[.381974011659622,.694710969924927],[.392388999462128,.694203019142151],[.277076005935669,.271932005882263],[.422551989555359,.563233017921448],[.385919004678726,.281364023685455],[.383103013038635,.255840003490448],[.331431001424789,.119714021682739],[.229923993349075,.232002973556519],[.364500999450684,.189113974571228],[.229622006416321,.299540996551514],[.173287004232407,.278747975826263],[.472878992557526,.666198015213013],[.446828007698059,.668527007102966],[.422762006521225,.673889994621277],[.445307999849319,.580065965652466],[.388103008270264,.693961024284363],[.403039008378983,.706539988517761],[.403629004955292,.693953037261963],[.460041999816895,.557139039039612],[.431158006191254,.692366003990173],[.452181994915009,.692366003990173],[.475387006998062,.692366003990173],[.465828001499176,.779190003871918],[.472328990697861,.736225962638855],[.473087012767792,.717857003211975],[.473122000694275,.704625964164734],[.473033010959625,.695277988910675],[.427942007780075,.695277988910675],[.426479011774063,.703539967536926],[.423162013292313,.711845993995667],[.4183090031147,.720062971115112],[.390094995498657,.639572978019714],[.013953999616206,.560034036636353],[.499913990497589,.58014702796936],[.413199990987778,.69539999961853],[.409626007080078,.701822996139526],[.468080013990402,.601534962654114],[.422728985548019,.585985004901886],[.463079988956451,.593783974647522],[.37211999297142,.47341400384903],[.334562003612518,.496073007583618],[.411671012639999,.546965003013611],[.242175996303558,.14767599105835],[.290776997804642,.201445996761322],[.327338010072708,.256527006626129],[.399509996175766,.748921036720276],[.441727995872498,.261676013469696],[.429764986038208,.187834024429321],[.412198007106781,.108901023864746],[.288955003023148,.398952007293701],[.218936994671822,.435410976409912],[.41278201341629,.398970007896423],[.257135003805161,.355440020561218],[.427684992551804,.437960982322693],[.448339998722076,.536936044692993],[.178560003638268,.45755398273468],[.247308000922203,.457193970680237],[.286267012357712,.467674970626831],[.332827985286713,.460712015628815],[.368755996227264,.447206974029541],[.398963987827301,.432654976844788],[.476410001516342,.405806005001068],[.189241006970406,.523923993110657],[.228962004184723,.348950982093811],[.490725994110107,.562400996685028],[.404670000076294,.485132992267609],[.019469000399113,.401564002037048],[.426243007183075,.420431017875671],[.396993011236191,.548797011375427],[.266469985246658,.376977026462555],[.439121007919312,.51895797252655],[.032313998788595,.644356966018677],[.419054001569748,.387154996395111],[.462783008813858,.505746960639954],[.238978996872902,.779744982719421],[.198220998048782,.831938028335571],[.107550002634525,.540755033493042],[.183610007166862,.740257024765015],[.134409993886948,.333683013916016],[.385764002799988,.883153975009918],[.490967005491257,.579378008842468],[.382384985685349,.508572995662689],[.174399003386497,.397670984268188],[.318785011768341,.39623498916626],[.343364000320435,.400596976280212],[.396100014448166,.710216999053955],[.187885001301765,.588537991046906],[.430987000465393,.944064974784851],[.318993002176285,.898285031318665],[.266247987747192,.869701027870178],[.500023007392883,.190576016902924],[.499976992607117,.954452991485596],[.366169989109039,.398822009563446],[.393207013607025,.39553701877594],[.410373002290726,.391080021858215],[.194993004202843,.342101991176605],[.388664990663528,.362284004688263],[.365961998701096,.355970978736877],[.343364000320435,.355356991291046],[.318785011768341,.35834002494812],[.301414996385574,.363156020641327],[.058132998645306,.319076001644135],[.301414996385574,.387449026107788],[.499987989664078,.618434011936188],[.415838003158569,.624195992946625],[.445681989192963,.566076993942261],[.465844005346298,.620640993118286],[.49992299079895,.351523995399475],[.288718998432159,.819945991039276],[.335278987884521,.852819979190826],[.440512001514435,.902418971061707],[.128294005990028,.791940987110138],[.408771991729736,.373893976211548],[.455606997013092,.451801002025604],[.499877005815506,.908990025520325],[.375436991453171,.924192011356354],[.11421000212431,.615022003650665],[.448662012815475,.695277988910675],[.4480200111866,.704632043838501],[.447111994028091,.715808033943176],[.444831997156143,.730794012546539],[.430011987686157,.766808986663818],[.406787008047104,.685672998428345],[.400738000869751,.681069016456604],[.392399996519089,.677703022956848],[.367855995893478,.663918972015381],[.247923001646996,.601333022117615],[.452769994735718,.420849978923798],[.43639200925827,.359887003898621],[.416164010763168,.368713974952698],[.413385987281799,.692366003990173],[.228018000721931,.683571994304657],[.468268007040024,.352671027183533],[.411361992359161,.804327011108398],[.499989002943039,.469825029373169],[.479153990745544,.442654013633728],[.499974012374878,.439637005329132],[.432112008333206,.493588984012604],[.499886006116867,.866917014122009],[.49991300702095,.821729004383087],[.456548988819122,.819200992584229],[.344549000263214,.745438992977142],[.37890899181366,.574010014533997],[.374292999505997,.780184984207153],[.319687992334366,.570737957954407],[.357154995203018,.604269981384277],[.295284003019333,.621580958366394],[.447750002145767,.862477004528046],[.410986006259918,.508723020553589],[.31395098567009,.775308012962341],[.354128003120422,.812552988529205],[.324548006057739,.703992962837219],[.189096003770828,.646299958229065],[.279776990413666,.71465802192688],[.1338230073452,.682700991630554],[.336768001317978,.644733011722565],[.429883986711502,.466521978378296],[.455527991056442,.548622965812683],[.437114000320435,.558896005153656],[.467287987470627,.529924988746643],[.414712011814117,.335219979286194],[.37704598903656,.322777986526489],[.344107985496521,.320150971412659],[.312875986099243,.32233202457428],[.283526003360748,.333190023899078],[.241245999932289,.382785975933075],[.102986000478268,.468762993812561],[.267612010240555,.424560010433197],[.297879010438919,.433175981044769],[.333433985710144,.433878004550934],[.366427004337311,.426115989685059],[.396012008190155,.416696012020111],[.420121014118195,.41022801399231],[.007561000064015,.480777025222778],[.432949006557465,.569517970085144],[.458638995885849,.479089021682739],[.473466008901596,.545744001865387],[.476087987422943,.563830018043518],[.468472003936768,.555056989192963],[.433990985155106,.582361996173859],[.483518004417419,.562983989715576],[.482482999563217,.57784903049469],[.42645001411438,.389798998832703],[.438998997211456,.39649498462677],[.450067013502121,.400434017181396],[.289712011814117,.368252992630005],[.276670008897781,.363372981548309],[.517862021923065,.471948027610779],[.710287988185883,.380764007568359],[.526226997375488,.573909997940063],[.895093023777008,.254140973091125],[.634069979190826,.409575998783112],[.661242008209229,.41302502155304],[.688880026340485,.409460008144379],[.725341975688934,.389131009578705],[.606630027294159,.40370500087738],[.654766023159027,.344011008739471],[.629905998706818,.346076011657715],[.680678009986877,.347265005111694],[.702096998691559,.353591024875641],[.75221198797226,.410804986953735],[.602918028831482,.842862963676453],[.719901978969574,.375599980354309],[.893692970275879,.399959981441498],[.790081977844238,.391354024410248],[.643998026847839,.534487962722778],[.528249025344849,.65040397644043],[.525849997997284,.680191040039062],[.560214996337891,.657229006290436],[.585384011268616,.66654098033905],[.549625992774963,.680860996246338],[.57122802734375,.682691991329193],[.624852001667023,.72809898853302],[.513050019741058,.547281980514526],[.51509702205658,.527251958847046],[.742246985435486,.314507007598877],[.598631024360657,.454979002475739],[.570338010787964,.548575043678284],[.578631997108459,.533622980117798],[.723087012767792,.532054007053375],[.516445994377136,.499638974666595],[.662801027297974,.282917976379395],[.70362401008606,.293271005153656],[.830704987049103,.193813979625702],[.552385985851288,.302568018436432],[.607609987258911,.353887975215912],[.645429015159607,.696707010269165],[.932694971561432,.730105042457581],[.557260990142822,.572826027870178],[.542901992797852,.584792017936707],[.6180260181427,.694710969924927],[.607590973377228,.694203019142151],[.722943007946014,.271963000297546],[.577413976192474,.563166975975037],[.614082992076874,.281386971473694],[.616907000541687,.255886018276215],[.668509006500244,.119913995265961],[.770092010498047,.232020974159241],[.635536015033722,.189248979091644],[.77039098739624,.299556016921997],[.826722025871277,.278755009174347],[.527121007442474,.666198015213013],[.553171992301941,.668527007102966],[.577238023281097,.673889994621277],[.554691970348358,.580065965652466],[.611896991729736,.693961024284363],[.59696102142334,.706539988517761],[.596370995044708,.693953037261963],[.539958000183105,.557139039039612],[.568841993808746,.692366003990173],[.547818005084991,.692366003990173],[.52461302280426,.692366003990173],[.534089982509613,.779141008853912],[.527670979499817,.736225962638855],[.526912987232208,.717857003211975],[.526877999305725,.704625964164734],[.526966989040375,.695277988910675],[.572058022022247,.695277988910675],[.573521018028259,.703539967536926],[.57683801651001,.711845993995667],[.581691026687622,.720062971115112],[.609944999217987,.639909982681274],[.986046016216278,.560034036636353],[.5867999792099,.69539999961853],[.590372025966644,.701822996139526],[.531915009021759,.601536989212036],[.577268004417419,.585934996604919],[.536915004253387,.593786001205444],[.627542972564697,.473352015018463],[.665585994720459,.495950996875763],[.588353991508484,.546862006187439],[.757824003696442,.14767599105835],[.709249973297119,.201507985591888],[.672684013843536,.256581008434296],[.600408971309662,.74900496006012],[.55826598405838,.261672019958496],[.570303976535797,.187870979309082],[.588165998458862,.109044015407562],[.711045026779175,.398952007293701],[.781069993972778,.435405015945435],[.587247014045715,.398931980133057],[.742869973182678,.355445981025696],[.572156012058258,.437651991844177],[.55186802148819,.536570012569427],[.821442008018494,.457556009292603],[.752701997756958,.457181990146637],[.71375697851181,.467626988887787],[.66711300611496,.460672974586487],[.631101012229919,.447153985500336],[.6008620262146,.432473003864288],[.523481011390686,.405627012252808],[.810747981071472,.523926019668579],[.771045982837677,.348959028720856],[.509127020835876,.562718033790588],[.595292985439301,.485023975372314],[.980530977249146,.401564002037048],[.573499977588654,.420000016689301],[.602994978427887,.548687994480133],[.733529984951019,.376977026462555],[.560611009597778,.519016981124878],[.967685997486115,.644356966018677],[.580985009670258,.387160003185272],[.537728011608124,.505385041236877],[.760966002941132,.779752969741821],[.801778972148895,.831938028335571],[.892440974712372,.54076099395752],[.816350996494293,.740260004997253],[.865594983100891,.333687007427216],[.614073991775513,.883246004581451],[.508952975273132,.579437971115112],[.617941975593567,.508316040039062],[.825608015060425,.397674977779388],[.681214988231659,.39623498916626],[.656635999679565,.400596976280212],[.603900015354156,.710216999053955],[.81208598613739,.588539004325867],[.56801301240921,.944564998149872],[.681007981300354,.898285031318665],[.733752012252808,.869701027870178],[.633830010890961,.398822009563446],[.606792986392975,.39553701877594],[.589659988880157,.391062021255493],[.805015981197357,.342108011245728],[.611334979534149,.362284004688263],[.634037971496582,.355970978736877],[.656635999679565,.355356991291046],[.681214988231659,.35834002494812],[.698584973812103,.363156020641327],[.941866993904114,.319076001644135],[.698584973812103,.387449026107788],[.584177017211914,.624107003211975],[.554318010807037,.566076993942261],[.534153997898102,.62064003944397],[.711217999458313,.819975018501282],[.664629995822906,.852871000766754],[.559099972248077,.902631998062134],[.871706008911133,.791940987110138],[.591234028339386,.373893976211548],[.544341027736664,.451583981513977],[.624562978744507,.924192011356354],[.88577002286911,.615028977394104],[.551338016986847,.695277988910675],[.551980018615723,.704632043838501],[.552887976169586,.715808033943176],[.555167973041534,.730794012546539],[.569944024085999,.767035007476807],[.593203008174896,.685675978660583],[.599261999130249,.681069016456604],[.607599973678589,.677703022956848],[.631937980651855,.663500010967255],[.752032995223999,.601315021514893],[.547226011753082,.420395016670227],[.563543975353241,.359827995300293],[.583841025829315,.368713974952698],[.586614012718201,.692366003990173],[.771915018558502,.683578014373779],[.531597018241882,.352482974529266],[.588370978832245,.804440975189209],[.52079701423645,.442565023899078],[.567984998226166,.493479013442993],[.543282985687256,.819254994392395],[.655317008495331,.745514988899231],[.621008992195129,.574018001556396],[.625559985637665,.78031200170517],[.680198013782501,.570719003677368],[.64276397228241,.604337990283966],[.704662978649139,.621529996395111],[.552012026309967,.862591981887817],[.589071989059448,.508637011051178],[.685944974422455,.775357007980347],[.645735025405884,.812640011310577],[.675342977046967,.703978002071381],[.810858011245728,.646304965019226],[.72012197971344,.714666962623596],[.866151988506317,.682704985141754],[.663187026977539,.644596993923187],[.570082008838654,.466325998306274],[.544561982154846,.548375964164734],[.562758982181549,.558784961700439],[.531987011432648,.530140042304993],[.585271000862122,.335177004337311],[.622952997684479,.32277899980545],[.655896008014679,.320163011550903],[.687132000923157,.322345972061157],[.716481983661652,.333200991153717],[.758756995201111,.382786989212036],[.897013008594513,.468769013881683],[.732392013072968,.424547016620636],[.70211398601532,.433162987232208],[.66652500629425,.433866024017334],[.633504986763,.426087975502014],[.603875994682312,.416586995124817],[.579657971858978,.409945011138916],[.992439985275269,.480777025222778],[.567192018032074,.569419980049133],[.54136598110199,.478899002075195],[.526564002037048,.546118021011353],[.523913025856018,.563830018043518],[.531529009342194,.555056989192963],[.566035985946655,.582329034805298],[.51631098985672,.563053965568542],[.5174720287323,.577877044677734],[.573594987392426,.389806985855103],[.560697972774506,.395331978797913],[.549755990505219,.399751007556915],[.710287988185883,.368252992630005],[.723330020904541,.363372981548309]];function bt(e){return Ge(this,void 0,void 0,(function(){var t,n,r,s,i,a,o,l,u,c,h,d,p,f,m,g;return We(this,(function(y){switch(y.label){case 0:return t=e.maxContinuousChecks,n=void 0===t?5:t,r=e.detectionConfidence,s=void 0===r?.9:r,i=e.maxFaces,a=void 0===i?10:i,o=e.iouThreshold,l=void 0===o?.3:o,u=e.scoreThreshold,c=void 0===u?.75:u,h=e.shouldLoadIrisModel,d=void 0===h||h,p=e.modelUrl,f=e.detectorModelUrl,m=e.irisModelUrl,d?[4,Promise.all([wt(f,a,l,c),_t(p),St(m)])]:[3,2];case 1:return g=y.sent(),[3,4];case 2:return[4,Promise.all([wt(f,a,l,c),_t(p)])];case 3:g=y.sent(),y.label=4;case 4:return[2,new Mt(g[0],g[1],n,s,a,d?g[2]:null)]}}))}))}function wt(e,t,n,r){return Ge(this,void 0,void 0,(function(){return We(this,(function(s){return[2,Ze({modelUrl:e,maxFaces:t,iouThreshold:n,scoreThreshold:r})]}))}))}function _t(e){return Ge(this,void 0,void 0,(function(){return We(this,(function(t){return null!=e?[2,ze(e)]:[2,ze("https://tfhub.dev/mediapipe/tfjs-model/facemesh/1/default/1",{fromTFHub:!0})]}))}))}function St(e){return Ge(this,void 0,void 0,(function(){return We(this,(function(t){return null!=e?[2,ze(e)]:[2,ze("https://tfhub.dev/mediapipe/tfjs-model/iris/1/default/2",{fromTFHub:!0})]}))}))}function Tt(e,t){if(e.mesh instanceof E.esB){var n=(0,E.lub)((function(){var n=(0,E.RRF)([t-1,0,0]),r=(0,E.RRF)([1,-1,1]);return(0,E.lub)((function(){return[(0,E.zoF)([(0,E.luU)(t-1,(0,E.tPi)(e.boundingBox.topLeft,0,1)),(0,E.tPi)(e.boundingBox.topLeft,1,1)]),(0,E.zoF)([(0,E.luU)(t-1,(0,E.tPi)(e.boundingBox.bottomRight,0,1)),(0,E.tPi)(e.boundingBox.bottomRight,1,1)]),(0,E.dC7)((0,E.luU)(n,e.mesh),r),(0,E.dC7)((0,E.luU)(n,e.scaledMesh),r)]}))})),r=n[0],s=n[1],i=n[2],a=n[3];return Object.assign({},e,{boundingBox:{topLeft:r,bottomRight:s},mesh:i,scaledMesh:a})}return Object.assign({},e,{boundingBox:{topLeft:[t-1-e.boundingBox.topLeft[0],e.boundingBox.topLeft[1]],bottomRight:[t-1-e.boundingBox.bottomRight[0],e.boundingBox.bottomRight[1]]},mesh:e.mesh.map((function(e){var n=e.slice(0);return n[0]=t-1-e[0],n})),scaledMesh:e.scaledMesh.map((function(e){var n=e.slice(0);return n[0]=t-1-e[0],n}))})}var Et,Mt=function(){function e(e,t,n,r,s,i){this.kind="MediaPipeFaceMesh",this.pipeline=new xt(e,t,192,192,n,s,i),this.detectionConfidence=r}return e.getAnnotations=function(){return Qe},e.getUVCoords=function(){return vt},e.prototype.estimateFaces=function(e){return Ge(this,void 0,void 0,(function(){var t,n,r,s,i,a,o,l,u,c,h,d,p=this;return We(this,(function(f){switch(f.label){case 0:if(t=e.returnTensors,n=void 0!==t&&t,r=e.flipHorizontal,s=void 0!==r&&r,i=e.predictIrises,a=void 0===i||i,o=e.input,a&&null==this.pipeline.irisModel)throw new Error("The iris model was not loaded as part of facemesh. Please initialize the model with facemesh.load({shouldLoadIrisModel: true}).");return l=function(e){return e instanceof E.esB?[e.shape[0],e.shape[1]]:[e.height,e.width]}(o),u=l[1],c=(0,E.lub)((function(){return o instanceof E.esB||(o=E.Xhn.fromPixels(o)),(0,E.dt4)((0,E.pju)(o,"float32"),0)})),"webgl"!==(0,E.N_N)()?[3,2]:(d=(0,E.OBj)().get("WEBGL_PACK_DEPTHWISECONV"),(0,E.OBj)().set("WEBGL_PACK_DEPTHWISECONV",!0),[4,this.pipeline.predict(c,a)]);case 1:return h=f.sent(),(0,E.OBj)().set("WEBGL_PACK_DEPTHWISECONV",d),[3,4];case 2:return[4,this.pipeline.predict(c,a)];case 3:h=f.sent(),f.label=4;case 4:return c.dispose(),null!=h&&h.length>0?[2,Promise.all(h.map((function(e,t){return Ge(p,void 0,void 0,(function(){var r,i,o,l,c,h,d,p,f,m,g,y,x,v,b=this;return We(this,(function(w){switch(w.label){case 0:return r=e.coords,i=e.scaledCoords,o=e.box,l=e.flag,c=[l],n||(c=c.concat([r,i])),[4,Promise.all(c.map((function(e){return Ge(b,void 0,void 0,(function(){return We(this,(function(t){return[2,e.array()]}))}))})))];case 1:if(h=w.sent(),d=h[0],l.dispose(),d<this.detectionConfidence&&this.pipeline.clearRegionOfInterest(t),n)return p={kind:"MediaPipePredictionTensors",faceInViewConfidence:d,mesh:r,scaledMesh:i,boundingBox:{topLeft:(0,E.RRF)(o.startPoint),bottomRight:(0,E.RRF)(o.endPoint)}},s?[2,Tt(p,u)]:[2,p];for(v in f=h.slice(1),m=f[0],g=f[1],i.dispose(),r.dispose(),y={kind:"MediaPipePredictionValues",faceInViewConfidence:d,boundingBox:{topLeft:o.startPoint,bottomRight:o.endPoint},mesh:m,scaledMesh:g},s&&(y=Tt(y,u)),x={},Qe)(a||!1===v.includes("Iris"))&&(x[v]=Qe[v].map((function(e){return y.scaledMesh[e]})));return y.annotations=x,[2,y]}}))}))})))]:[2,[]]}}))}))},e}();function Ct(e,t){return void 0===e&&(e=Et.mediapipeFacemesh),void 0===t&&(t={}),Ge(this,void 0,void 0,(function(){return We(this,(function(n){if(e===Et.mediapipeFacemesh)return[2,bt(t)];throw new Error(e+" is not a valid package name.")}))}))}(Et||(Et={})).mediapipeFacemesh="mediapipe-facemesh"},18166:(e,t,n)=>{"use strict";n.d(t,{H:()=>s});var r=n(6639);function s(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&r.D5U.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}},60224:(e,t,n)=>{"use strict";n.d(t,{bk:()=>s});var r=n(6639);function s(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}n(18166),r.SYM},32779:(e,t,n)=>{"use strict";n.d(t,{EH:()=>a});var r=n(6639),s=n(33533),i=n(46205);const a=(0,s.b)(((e,t)=>e+t)),o=(0,i.H)(((e,t,n,r)=>({real:e+n,imag:t+r})));(0,i.j)(r.mm_,a,o),r.mm_},58607:(e,t,n)=>{"use strict";n.d(t,{W:()=>s,i:()=>i});var r=n(6639);function s(e,t,n,s,i){const a=r.D5U.sizeFromShape(s),o=r.D5U.makeZerosTypedArray(i,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=i||(o[r]+=a>0?t[n]:1)}return o}function i(e,t,n,s=!1){const i=e.shape[0],a=e.shape[1],o=(0,r.f3b)([i,n],t.dtype);for(let r=0;r<i;r++)for(let i=0;i<a;i++){const a=e.get(r,i);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(s?o.set(1,r,a):t.size>0?o.set(o.get(r,a)+t.get(r,i),r,a):o.set(o.get(r,a)+1,r,a))}return o}},29258:(e,t,n)=>{"use strict";n.d(t,{pj:()=>c,sJ:()=>u});var r=n(6639),s=n(33533),i=n(24391),a=n(26961),o=n(41775),l=n(82186);function u(e,t,n,i){if("int32"===i)return[t,"int32",Int32Array.from(e)];if("bool"===i){const i=r.D5U.toTypedArray([0],n),[a,o]=(0,s.b)(((e,t)=>e!==t?1:0))(t,[],e,i,"bool");return[o,"bool",a]}throw new Error(`Error in Cast: failed to cast ${n} to ${i}`)}function c(e){const{inputs:t,backend:n,attrs:s}=e,{x:h}=t,{dtype:d}=s;if("complex64"===d){if("complex64"===h.dtype)return(0,o.y)({inputs:{x:h},backend:n});const e=(0,i.l)(n,h.shape,h.dtype),t=c({inputs:{x:h},backend:n,attrs:{dtype:"float32"}}),r=(0,a.P)({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===h.dtype){const e=(0,l.k)({inputs:{input:h},backend:n}),t=c({inputs:{x:e},backend:n,attrs:{dtype:d}});return n.disposeIntermediateTensorInfo(e),t}if(!r.D5U.hasEncodingLoss(h.dtype,d)){const e=(0,o.y)({inputs:{x:h},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:d}}const p=n.data.get(h.dataId).values,[f,m,g]=u(p,h.shape,h.dtype,d);return n.makeTensorInfo(f,m,g)}r.RFZ},34769:(e,t,n)=>{"use strict";n.d(t,{__:()=>a});var r=n(6639),s=n(18029),i=n(76738);const a=(0,s.a)((e=>Math.ceil(e)));(0,i.O)(r.gJX,a),r.gJX},26961:(e,t,n)=>{"use strict";function r(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,i=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",i),imag:n.makeTensorInfo(s.shape,"float32",a)},o}n.d(t,{P:()=>r}),n(6639).Zz9},48926:(e,t,n)=>{"use strict";n.d(t,{j:()=>s});var r=n(6639);function s(e,t,n,s){const i=r.D5U.getArrayFromDType(n,r.D5U.sizeFromShape(t));if(s&&"string"!==n){let t=0;e.forEach((e=>{const n=r.D5U.sizeFromShape(e.shape);i.set(e.vals,t),t+=n}))}else{let s=0;e.forEach((e=>{const a="string"===n?r.backend_util.fromUint8ToStringArray(e.vals):e.vals;let o=0;for(let n=0;n<e.shape[0];++n){const r=n*t[1]+s;for(let t=0;t<e.shape[1];++t)i[r+t]=a[o++]}s+=e.shape[1]}))}return i}},7679:(e,t,n)=>{"use strict";n.d(t,{tW:()=>a});var r=n(6639),s=n(33533),i=n(46205);const a=(0,s.b)(((e,t)=>e===t?1:0));(0,i.j)(r.hdR,a,null,"bool"),r.hdR},31211:(e,t,n)=>{"use strict";n.d(t,{Ro:()=>a});var r=n(6639),s=n(18029),i=n(76738);const a=(0,s.a)((e=>Math.exp(e)));(0,i.O)(r.NEP,a,"float32"),r.NEP},30969:(e,t,n)=>{"use strict";n.d(t,{OF:()=>a});var r=n(6639),s=n(18029),i=n(76738);const a=(0,s.a)((e=>Math.expm1(e)));(0,i.O)(r.Y0y,a),r.Y0y},76574:(e,t,n)=>{"use strict";n.d(t,{r6:()=>a});var r=n(6639),s=n(18029),i=n(76738);const a=(0,s.a)((e=>Math.floor(e)));(0,i.O)(r.OR,a),r.OR},31820:(e,t,n)=>{"use strict";n.d(t,{m:()=>s});var r=n(6639);function s(e,t,n,s,i,a,o,l,u){const c=(0,r.f3b)([s,a],n);for(let n=0;n<s;n++){const r=[];let s=0;for(let t=0;t<i;t++){const a=e[n*i+t];s+=a*o[t],r.push(a)}if(s<0||s>=u/a)throw new Error(`Invalid indices: ${r} does not index into ${l}`);for(let e=0;e<a;e++)c.values[n*a+e]=t.get(...t.indexToLoc(s*a+e))}return c}},54468:(e,t,n)=>{"use strict";n.d(t,{i:()=>s});var r=n(6639);function s(e,t,n){const s=(0,r.f3b)(n,e.dtype);for(let n=0;n<s.size;++n){const r=s.indexToLoc(n).slice(),i=r[0],a=r[2],o=t.locToIndex([i,a]);r[2]=t.values[o];const l=e.locToIndex(r);0<=l&&l<e.values.length&&(s.values[n]=e.values[l])}return s}},36272:(e,t,n)=>{"use strict";n.d(t,{o:()=>a});var r=n(6639),s=n(33533),i=n(46205);const a=(0,s.b)(((e,t)=>e>t?1:0));(0,i.j)(r.iZT,a,null,"bool"),r.iZT},26259:(e,t,n)=>{"use strict";n.d(t,{HL:()=>a});var r=n(6639),s=n(33533),i=n(46205);const a=(0,s.b)(((e,t)=>e>=t?1:0));(0,i.j)(r.Acj,a,null,"bool"),r.Acj},41775:(e,t,n)=>{"use strict";function r(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}n.d(t,{y:()=>r}),n(6639).iJz},88405:(e,t,n)=>{"use strict";n.d(t,{rO:()=>a});var r=n(6639),s=n(33533),i=n(46205);const a=(0,s.b)(((e,t)=>e<t?1:0));(0,i.j)(r.vtC,a,null,"bool"),r.vtC},40635:(e,t,n)=>{"use strict";n.d(t,{lx:()=>a});var r=n(6639),s=n(33533),i=n(46205);const a=(0,s.b)(((e,t)=>e<=t?1:0));(0,i.j)(r.CAk,a,null,"bool"),r.CAk},61325:(e,t,n)=>{"use strict";n.d(t,{b:()=>s});var r=n(6639);function s(e,t,n){const s=(t-e)/(n-1),i=r.D5U.makeZerosTypedArray(n,"float32");i[0]=e;for(let e=1;e<i.length;e++)i[e]=i[e-1]+s;return i}},55223:(e,t,n)=>{"use strict";n.d(t,{vX:()=>a});var r=n(6639),s=n(18029),i=n(76738);const a=(0,s.a)((e=>Math.log(e)));(0,i.O)(r.ZbH,a),r.ZbH},55126:(e,t,n)=>{"use strict";n.d(t,{B:()=>s});var r=n(6639);function s(e,t,n,s){const i=r.D5U.getTypedArrayFromDType(s,r.D5U.sizeFromShape(n));for(let n=0;n<i.length;++n){const r=n*t;let s=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>s)&&(s=t)}i[n]=s}return i}},71717:(e,t,n)=>{"use strict";n.d(t,{wS:()=>a});var r=n(6639),s=n(33533),i=n(46205);const a=(0,s.b)(((e,t)=>Math.max(e,t)));(0,i.j)(r.BMI,a),r.BMI},612:(e,t,n)=>{"use strict";n.d(t,{vP:()=>a});var r=n(6639),s=n(33533),i=n(46205);const a=(0,s.b)(((e,t)=>Math.min(e,t)));(0,i.j)(r.q8u,a),r.q8u},1917:(e,t,n)=>{"use strict";n.d(t,{$3:()=>a});var r=n(6639),s=n(33533),i=n(46205);const a=(0,s.b)(((e,t)=>e*t)),o=(0,i.H)(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n})));(0,i.j)(r.wYn,a,o),r.wYn},70854:(e,t,n)=>{"use strict";n.d(t,{uC:()=>i});var r=n(6639),s=(n(18166),n(1917));function i(e,t,n){const i=r.D5U.createScalarValue(-1,n);return(0,s.$3)([],t,i,e,n)}r.kuV},98584:(e,t,n)=>{"use strict";n.d(t,{Gj:()=>a});var r=n(6639),s=n(33533),i=n(46205);const a=(0,s.b)(((e,t)=>e!==t?1:0));(0,i.j)(r.yQU,a,null,"bool"),r.yQU},29560:(e,t,n)=>{"use strict";n.d(t,{Qg:()=>s});var r=n(6639);function s(e,t,n,s){const[i,a]=r.backend_util.computeOutAndReduceShapes(e,s),o=(0,r.x8V)(t,"int32"),l=r.D5U.makeZerosTypedArray(r.D5U.sizeFromShape(i),o),u=r.D5U.sizeFromShape(a);for(let e=0;e<l.length;++e){const t=e*u;let r=1;for(let e=0;e<u;++e)r*=n[t+e];l[e]=r}return{outVals:l,outShape:i,outDtype:o}}n(18166),n(44802),r.DlI},59885:(e,t,n)=>{"use strict";n.d(t,{c:()=>i});var r=n(6639);function s(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function i(e,t,n,i,a,o,l,u){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,s)=>{if(e<0||e>=n){const i=r.D5U.indexToLoc(s,t.length,r.D5U.computeStrides(t)).join(",");throw new Error(`indices[${i}] = ${e} is not in [0, ${n})`)}}))}(o,l,t[0][0]-1),0===i.length)throw new Error("params.rank must be nonzero");const c=i[0],{outSplits:h,valueSlices:d,numValues:p}=function(e,t,n,r){const s=[];let i=0;const a=t.length-1+n.length,o=new Array(a).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const r=e[n],s=n===e.length-1?t:e[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let e=1;e<r.length;++e)if(r[e-1]>r[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,r);let l=1;for(let e=0;e<t.length-1;++e){l*=t[e];const n=t[e+1];for(let t=1;t<l+1;++t)o[e].push(t*n)}for(let r=0;r<e.length;++r){let a=e[r],l=e[r]+1;for(let e=0;e<n.length;++e){const r=n[e],s=e+t.length-1;if(s>=0){const e=o[s],t=e[e.length-1]-r[a];for(let e=a;e<l;++e)o[s].push(r[e+1]+t)}a=r[a],l=r[l]}l!==a&&(s.push([a,l]),i+=l-a)}return{outSplits:o,valueSlices:s,numValues:i}}(o,l,e,c),f=function(e){const t=[];for(let n=0;n<e.length;++n){const s=e[n].length,i=r.D5U.getArrayFromDType("int32",s);t.push(i),e[n].forEach(((e,t)=>i[t]=e))}return t}(h),m=function(e,t,n,i,a){const o=t.slice();o[0]=a;const l=r.D5U.getArrayFromDType(n,r.D5U.sizeFromShape(o)),u=e.length;return function(e,t,n,r,i,a){const o=s(t,2)[1],l=s(a,2)[1];let u=0;for(const t of n)for(let n=t[0];n<t[1];++n){for(let t=0;t<r;++t)i[u*l+t]=e[n*o+t];++u}}(e,t,i,0===u?0:u/t[0],l,o),[l,o]}(n,i,a,d,p);return[f,m[0],m[1]]}},8306:(e,t,n)=>{"use strict";n.d(t,{p:()=>l});var r=n(6639),s=r.backend_util.RowPartitionType;class i{constructor(e,t,n,s,i,a,o,l,u,c){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=s,this.valuesDType=i,this.defaultValue=a,this.defaultValueShape=o,this.rowPartitionValues=l,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=r.backend_util.getRowPartitionTypesHelper(c),this.raggedRank=r.backend_util.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===s.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===s.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case s.VALUE_ROWIDS:return i.getMaxWidthValueRowID(t);case s.ROW_SPLITS:return i.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${s[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){const t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,r=e[0],s=0;for(let i=1;i<t;++i){const t=e[i];t!==r&&(r=t,s=Math.max(i-n,s),n=i)}return Math.max(t-n,s)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return o(e,n)}calculateOutputSize(e){const t=this.valuesShape,n=this.defaultValueShape;r.backend_util.validateDefaultValueShape(n,t);const s=this.tensorShapeFromTensor(this.shape,this.shapeShape),i=r.backend_util.combineRaggedTensorToTensorShapes(this.raggedRank,s,t);i[0]<0&&(i[0]=e);for(let e=1;e<=this.raggedRank;++e)i[e]<0&&(i[e]=this.getMaxWidth(e));return i}calculateFirstParentOutputIndex(e,t,n){const s=Math.min(e,n),i=[];let a=0;for(let e=0;e<s;++e,a+=t)i.push(a);for(let t=s;t<e;++t)i.push(-1);return r.D5U.assert(i.length===e,(()=>"Final length of result must be equal to firstDimension.")),i}calculateOutputIndexRowSplit(e,t,n,r){const s=e.length,i=[];for(let a=0;a<s-1;++a){const s=e[a+1]-e[a];let o=Math.min(r,s),l=t[a];-1===l&&(o=0);for(let e=0;e<o;++e)i.push(l),l+=n;for(let e=0;e<s-o;++e)i.push(-1)}if(s>0&&i.length!==e[s-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(e,t,n,r){const s=e.length,i=[];if(0===s)return[];let a=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];i.push(l);for(let u=1;u<s;++u){const s=e[u];if(s===o)l>=0&&(++a,a<r?l+=n:l=-1);else{if(a=0,o=s,s>=t.length)throw new Error(`Got nextValueRowId=${s} which is not less than ${t.length}`);l=t[s]}i.push(l)}if(i.length!==e.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(e,t,n,r){const i=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case s.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(i,t,n,r);case s.ROW_SPLITS:if(i.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${i.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(i,t,n,r);default:throw new Error(`Unsupported partition type: ${s[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case s.FIRST_DIM_SIZE:return e[0];case s.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case s.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${s[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];const s=o(t,!1),i=r.D5U.getArrayFromDType(this.valuesDType,r.D5U.sizeFromShape(s));if(n[0]*t[0]>0){let r=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e)r=this.calculateOutputIndex(e-1,r,n[e],t[e]);this.setOutput(this.raggedRank,r,i,s)}return[s,i]}setOutput(e,t,n,s){if(0===n.length)return;const i=this.values,o=n;let l=s.slice();l=l.slice(e+1);const u=r.D5U.sizeFromShape(l),c=t.length;let h=this.defaultValue;if(h.length!==u&&1!==h.length){const e=this.defaultValueShape;(0,r.lub)((()=>{const t=(0,r.XLQ)(h,e),n=(0,r.UFq)(t,l);h=n.dataSync()}))}let d=0,p=0,f=0;for(let e=0;e<=c;++e){let r=e<c?t[e]:-1;if(r!==f){if(p<f){const e=i.subarray(d*u);a(o.subarray(p*u),e,(f-p)*u)}if(e>=c){const e=n.length;r=Math.floor(e/u)}if(r>f)if(1===this.defaultValue.length)o.subarray(f*u,r*u).fill(this.defaultValue[0]),f=r;else for(;r>f;)a(o.slice(f*u),h,u),++f;r<0?(d=e+1,p=f):(d=e,p=f,f=p+1)}else++f}}}function a(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function o(e,t){const n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function l(e,t,n,r,s,a,o,l,u,c){return new i(e,t,n,r,s,a,o,l,u,c).compute()}},99230:(e,t,n)=>{"use strict";n.d(t,{b:()=>s});var r=n(6639);function s(e,t,n,s){if(e===t||e<t&&n<0||t<e&&n>1)return r.D5U.makeZerosTypedArray(0,s);const i=Math.abs(Math.ceil((t-e)/n)),a=r.D5U.makeZerosTypedArray(i,s);t<e&&1===n&&(n=-1),a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+n;return a}},82186:(e,t,n)=>{"use strict";function r(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,i=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,i)}n.d(t,{k:()=>r}),n(6639).xJR},7742:(e,t,n)=>{"use strict";n.d(t,{zd:()=>a});var r=n(6639),s=n(18029),i=n(76738);const a=(0,s.a)((e=>1/Math.sqrt(e)));(0,i.O)(r.bV0,a),r.bV0},60001:(e,t,n)=>{"use strict";n.d(t,{N:()=>s});var r=n(6639);function s(e,t,n,s,i,a,o,l,u,c){const h=[s/i,i],d=e.values,p=t.values;if(0===s)return(0,r.f3b)(n,t.dtype);const f=(0,r.f3b)(h,t.dtype);"string"==typeof u||"number"==typeof u?f.values.fill(u):"boolean"==typeof u&&f.values.fill(+u);for(let e=0;e<a;e++){const r=[];let a=0;for(let t=0;t<o;t++){const n=d[e*o+t];r.push(n),a+=n*l[t]}if(a<0||a>=s/i)throw new Error(`Invalid indices: ${r} does not index into ${n}`);for(let n=0;n<i;n++)c?f.values[a*i+n]+=p[e*i+n]:f.values[a*i+n]=0===t.rank?p[0]:p[e*i+n]}return f}},40108:(e,t,n)=>{"use strict";n.d(t,{VY:()=>a});var r=n(6639),s=n(18029),i=n(76738);const a=(0,s.a)((e=>1/(1+Math.exp(-e))));(0,i.A)(r.a5O,(e=>1/(1+Math.exp(-e)))),r.a5O},82578:(e,t,n)=>{"use strict";n.d(t,{rT:()=>s});var r=n(6639);function s(e,t,n,s,i){const a=r.kuN.isSliceContinous(s,t,n),o=r.D5U.sizeFromShape(n),l=r.D5U.computeStrides(s);if(a){const n=r.kuN.computeFlatOffset(t,l);return"string"===i?e.slice(n,n+o):e.subarray(n,n+o)}const u="string"===i?r.backend_util.fromUint8ToStringArray(e):e,c=(0,r.f3b)(s,i,u),h=(0,r.f3b)(n,i);for(let e=0;e<h.size;++e){const n=h.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));h.set(c.get(...r),...n)}return"string"===i?r.backend_util.fromStringArrayToUint8(h.values):h.values}n(18166),r.p2w},42123:(e,t,n)=>{"use strict";n.d(t,{c:()=>s});var r=n(6639);function s(e,t,n,s,i,a,o){const l=t[0],u=a[0],c=new Array(u),h=new Array(l),d=t[1];if(0===u){if(0!==l)throw new Error(r.backend_util.getSparseFillEmptyRowsIndicesDenseShapeMismatch(l));return[r.D5U.getArrayFromDType(n,0),[0,d],r.D5U.getArrayFromDType(i,0),c,h]}let p=!0,f=0;const m=new Array(u).fill(0);for(let t=0;t<l;++t){const n=e[t*d];if(n<0)throw new Error(r.backend_util.getSparseFillEmptyRowsNegativeIndexErrorMessage(t,n));if(n>=u)throw new Error(r.backend_util.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(t,n,u));++m[n],p=p&&n>=f,f=n}let g=!0;for(let e=0;e<u;++e){const t=0===m[e];c[e]=t,g=g&&!t,m[e]=Math.max(m[e],1),e>0&&(m[e]+=m[e-1])}if(g&&p){const t=e,n=s;for(let e=0;e<l;++e)h[e]=e;return[t,[l,d],n,c,h]}{const t=m[u-1],a=r.D5U.getArrayFromDType(n,t*d),p=r.D5U.getArrayFromDType(i,t),f=new Array(u).fill(0);for(let t=0;t<l;++t){const n=e[t*d],r=f[n],i=(0===n?0:m[n-1])+r;f[n]++;for(let n=0;n<d;++n)a[i*d+n]=e[t*d+n];p[i]=s[t],h[t]=i}for(let e=0;e<u;++e)if(0===f[e]){const t=0===e?0:m[e-1];a[t*d+0]=e;for(let e=1;e<d;++e)a[t*d+e]=0;p[t]=o}return[a,[t,d],p,c,h]}}},3849:(e,t,n)=>{"use strict";n.d(t,{U:()=>s});var r=n(6639);function s(e,t,n,s,i){const a=r.D5U.sizeFromShape(s),o=t[0],l=i.length,u=[];let c=1,h=-1;for(let e=0;e<l;++e){const t=i[e];if(-1===t){if(-1!==h)throw new Error(r.backend_util.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(h,e));h=e,u.push(1)}else{if(t<0)throw new Error(r.backend_util.getSparseReshapeNegativeOutputDimErrorMessage(e,t));c*=t,u.push(t)}}if(-1!==h){if(c<=0)throw new Error(r.backend_util.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const e=Math.trunc(a/c);if(c*e!==a)throw new Error(r.backend_util.getSparseReshapeInputOutputMultipleErrorMessage(s,u));u[h]=e}if(r.D5U.sizeFromShape(u)!==a)throw new Error(r.backend_util.getSparseReshapeInputOutputMismatchErrorMessage(s,u));const d=s.length,p=[];if(d>0){p[d-1]=1;for(let e=d-2;e>=0;--e)p[e]=p[e+1]*s[e+1]}const f=[];if(l>0){f[l-1]=1;for(let e=l-2;e>=0;--e)f[e]=f[e+1]*u[e+1]}const m=r.D5U.getArrayFromDType(n,o*l);for(let t=0;t<o;++t){let n=0;for(let r=0;r<d;++r)n+=e[t*d+r]*p[r];for(let e=0;e<l;++e)m[t*l+e]=Math.trunc(n/f[e]),n%=f[e]}return[m,[o,l],u]}},13989:(e,t,n)=>{"use strict";n.d(t,{V:()=>s});var r=n(6639);function s(e,t,n,s,i,a=!1,o=0){const l=s.length,u=[t[0],e.length/t[0]],c=u[1],h=l>0?i[l-1]+1:0;if(h<0)throw new Error(r.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const d=t.slice();d[0]=h;const p=d.reduce(((e,t)=>e*t),1),f=r.D5U.getArrayFromDType(n,p);if(0===l)return h>0&&f.fill(o),[f,d];if(h<=0)throw new Error(r.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,g=1,y=0,x=i[m];for(;;){let t=0;if(g<l){if(t=i[g],x===t){++g;continue}if(x>=t)throw new Error(r.backend_util.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(x<0||x>=h)throw new Error(r.backend_util.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x,h));x>y&&f.fill(o,y*c,x*c);for(let t=m;t<g;++t){const n=s[t];if(n<0||n>=u[0])throw new Error(r.backend_util.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(t,s[t],u[0]));for(let t=0;t<c;t++)f[x*c+t]+=e[n*c+t]}if(a)for(let e=0;e<c;e++)f[x*c+e]/=g-m;if(m=g,++g,y=x+1,x=t,g>l)break}return y<h&&f.fill(o,y*c,h*c),[f,d]}},10440:(e,t,n)=>{"use strict";n.d(t,{zT:()=>a});var r=n(6639),s=n(18029),i=n(76738);const a=(0,s.a)((e=>Math.sqrt(e)));(0,i.A)(r.FKq,(e=>Math.sqrt(e))),r.FKq},62210:(e,t,n)=>{"use strict";n.d(t,{t:()=>s});var r=n(6639);function s(e,t,n,s){const i=(0,r.f3b)(e,t.dtype);for(let e=0;e<i.size;e++){const r=i.indexToLoc(e),a=new Array(r.length);for(let e=0;e<a.length;e++)a[e]=r[e]*n[e]+s[e];i.set(t.get(...a),...r)}return i}},66841:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var r=n(6639);class s{constructor(e,t,n,s,i,a){this.separator=r.D5U.encodeString(e),this.nGramWidths=t,this.leftPad=r.D5U.encodeString(n),this.rightPad=r.D5U.encodeString(s),this.padWidth=i,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,s,i){for(let a=0;a<s;++a){const o=this.getPadWidth(i),l=Math.max(0,o-a),u=Math.max(0,o-(s-(a+1))),c=i-(l+u),h=t+(l>0?0:a-o);let d=0;d+=l*this.leftPad.length;for(let t=0;t<c;++t)d+=e[h+t].length;d+=u*this.rightPad.length,d+=(l+u+c-1)*this.separator.length,n[r+a]=new Uint8Array(d);const p=n[r+a];let f=0;const m=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,s=t.length;if(s>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let r=1;r<s;++r){let s=t[r]>=e;if(s=s&&t[r]<=n,!s)throw new Error(`Invalid split value ${t[r]}, must be in [${e}, ${n}]`);e=t[r]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const i=s-1,a=r.D5U.getArrayFromDType("int32",s);if(0===n||0===s){const e=new Array(n);for(let e=0;e<=i;++e)a[e]=0;return[e,a]}a[0]=0;for(let e=1;e<=i;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),a[e]=a[e-1]+r}const o=new Array(a[i]);for(let n=0;n<i;++n){const r=t[n];let s=a[n];if(this.nGramWidths.forEach((i=>{const a=t[n+1]-t[n],l=this.getNumNGrams(a,i);this.createNGrams(e,r,o,s,l,i),s+=l})),this.preserveShort&&s===a[n]){const i=t[n+1]-t[n];if(0===i)continue;const a=i+2*this.padWidth,l=1;this.createNGrams(e,r,o,s,l,a)}}return[o,a]}}function i(e,t,n,r,i,a,o,l){return new s(n,r,i,a,o,l).compute(e,t)}},38639:(e,t,n)=>{"use strict";n.d(t,{Q:()=>i});var r=n(6639);function s(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const s=t[0];let i=e.indexOf(s);for(;-1!==i;){const t=e.subarray(0,i);n&&0===t.length||r.push(t),i=(e=e.subarray(i+1)).indexOf(s)}return void(n&&0===e.length||r.push(e))}let s=0;for(let i=0;i<e.length+1;i++)if(i===e.length||-1!==t.indexOf(e[i])){const t=e.subarray(s,i);n&&0===t.length||r.push(t),s=i+1}}function i(e,t,n){const i=e.length,a=[];let o=0,l=0;const u=new Array(i);for(let r=0;r<i;++r){const i=a.length;s(e[r],t,n,a);const c=a.length-i;u[r]=c,o+=c,l=Math.max(l,c)}const c=r.D5U.getArrayFromDType("int32",2*o),h=new Array(o),d=[i,l];let p=0;for(let e=0;e<i;++e)for(let t=0;t<u[e];++t)c[2*p]=e,c[2*p+1]=t,h[p]=a[p],++p;return[c,h,d]}},26626:(e,t,n)=>{"use strict";n.d(t,{h:()=>s});var r=n(6639);function s(e,t){const n=r.D5U.getArrayFromDType("int32",e.length);for(let s=0;s<e.length;++s)n[s]=r.D5U.fingerPrint64(e[s]).modulo(t).getLowBitsUnsigned();return n}},71649:(e,t,n)=>{"use strict";n.d(t,{VY:()=>a});var r=n(6639),s=n(33533),i=n(46205);const a=(0,s.b)(((e,t)=>e-t)),o=(0,i.H)(((e,t,n,r)=>({real:e-n,imag:t-r})));(0,i.j)(r.Tr8,a,o),r.Tr8},27723:(e,t,n)=>{"use strict";n.d(t,{R:()=>s});var r=n(6639);function s(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const s=(0,r.f3b)(n,e.dtype);for(let t=0;t<s.values.length;++t){const n=s.indexToLoc(t),r=new Array(e.rank);for(let t=0;t<r.length;t++)r[t]=n[t]%e.shape[t];const i=e.locToIndex(r);s.values[t]=e.values[i]}return s}},69556:(e,t,n)=>{"use strict";n.d(t,{W:()=>a});var r=n(6639);const s=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function i(e,t,n=0,a=e.length-1){for(;a>n;){if(a-n>600){const r=a-n+1,s=t-n+1,o=Math.log(r),l=.5*Math.exp(2*o/3),u=.5*Math.sqrt(o*l*(r-l)/r)*Math.sign(s-r/2);i(e,t,Math.max(n,Math.floor(t-s*l/r+u)),Math.min(a,Math.floor(t+(r-s)*l/r+u)))}const o=e[t];let l=n,u=a;for(r.D5U.swap(e,n,t),s(e[a],o)>0&&r.D5U.swap(e,n,a);l<u;){for(r.D5U.swap(e,l,u),l++,u--;s(e[l],o)<0;)l+=1;for(;s(e[u],o)>0;)u-=1}0===s(e[n],o)?r.D5U.swap(e,n,u):(u+=1,r.D5U.swap(e,u,a)),u<=t&&(n=u+1),t<=u&&(a=u-1)}}function a(e,t,n,a,o){const l=t[t.length-1],[u,c]=[e.length/l,l],h=r.D5U.getTypedArrayFromDType(n,u*a),d=r.D5U.getTypedArrayFromDType("int32",u*a);for(let t=0;t<u;t++){const n=t*c,r=e.subarray(n,n+c);let l=new Array(r.length);r.forEach(((e,t)=>l[t]={value:e,index:t})),a<l.length&&(i(l,a),l=l.slice(0,a)),o&&l.sort(s);const u=t*a,p=h.subarray(u,u+a),f=d.subarray(u,u+a);for(let e=0;e<a;e++)p[e]=l[e].value,f[e]=l[e].index}const p=t.slice();return p[p.length-1]=a,[(0,r.f3b)(p,n,h),(0,r.f3b)(p,"int32",d)]}},44802:(e,t,n)=>{"use strict";n.d(t,{p:()=>a});var r=n(6639),s=n(18166),i=n(77107);function a(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:o}=n;(0,s.H)(a,"transpose");const l=a.shape.length,u=new Array(l);for(let e=0;e<u.length;e++)u[e]=a.shape[o[e]];const c=r.data.get(a.dataId).values,h=(0,i.H)(c,a.shape,a.dtype,o,u);return{dataId:r.write(h,u,a.dtype),shape:u,dtype:a.dtype}}r.G3Y},77107:(e,t,n)=>{"use strict";n.d(t,{H:()=>s});var r=n(6639);function s(e,t,n,s,i){const a=t.length,o=r.D5U.sizeFromShape(t),l=r.D5U.computeStrides(t),u=r.D5U.computeStrides(i),c=r.D5U.getTypedArrayFromDType(n,r.D5U.sizeFromShape(i));for(let t=0;t<o;++t){const n=r.D5U.indexToLoc(t,a,l),i=new Array(n.length);for(let e=0;e<i.length;e++)i[e]=n[s[e]];c[r.D5U.locToIndex(i,a,u)]=e[t]}return c}},75638:(e,t,n)=>{"use strict";n.d(t,{S:()=>s});var r=n(6639);function s(e,t,n,s){const i=r.D5U.parseAxisParam(t,n)[0],a=[1,n[0],1];for(let e=0;e<i;e++)a[0]*=n[e];a[1]=n[i];for(let e=i+1;e<n.length;e++)a[2]*=n[e];const o={},l=new Int32Array(n[i]),u=new r.YDk(a,s,e),c=[],h=1===a[0]&&1===a[2];for(let t=0;t<n[i];t++){let n;if(h)n=e[t].toString();else{const e=[];for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)e.push(u.get(n,t,r));n=e.join(",")}if(void 0!==o[n])l[t]=o[n];else{const e=Object.keys(o).length;o[n]=e,l[t]=e,c.push(t)}}const d=a.slice();d[1]=Object.keys(o).length;const p=new r.YDk(d,s);c.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)p.set(u.get(n,e,r),n,t,r)}));const f=n.slice();return f[i]=d[1],{outputValues:p.values,outputShape:f,indices:l}}},45226:(e,t,n)=>{"use strict";n.d(t,{addImpl:()=>s.EH,bincountImpl:()=>i.W,bincountReduceImpl:()=>i.i,castImpl:()=>a.sJ,ceilImpl:()=>o.__,concatImpl:()=>l.j,equalImpl:()=>u.tW,expImpl:()=>c.Ro,expm1Impl:()=>h.OF,floorImpl:()=>d.r6,gatherNdImpl:()=>p.m,gatherV2Impl:()=>f.i,greaterEqualImpl:()=>g.HL,greaterImpl:()=>m.o,lessEqualImpl:()=>x.lx,lessImpl:()=>y.rO,linSpaceImpl:()=>v.b,logImpl:()=>b.vX,maxImpl:()=>w.B,maximumImpl:()=>_.wS,minimumImpl:()=>S.vP,multiplyImpl:()=>T.$3,negImpl:()=>E.uC,notEqualImpl:()=>M.Gj,prodImpl:()=>C.Qg,raggedGatherImpl:()=>A.c,raggedTensorToTensorImpl:()=>I.p,rangeImpl:()=>R.b,rsqrtImpl:()=>k.zd,scatterImpl:()=>N.N,sigmoidImpl:()=>L.VY,simpleAbsImpl:()=>r.bk,sliceImpl:()=>D.rT,sparseFillEmptyRowsImpl:()=>O.c,sparseReshapeImpl:()=>P.U,sparseSegmentReductionImpl:()=>F.V,sqrtImpl:()=>$.zT,stridedSliceImpl:()=>B.t,stringNGramsImpl:()=>U.A,stringSplitImpl:()=>z.Q,stringToHashBucketFastImpl:()=>V.h,subImpl:()=>G.VY,tileImpl:()=>W.R,topKImpl:()=>H.W,transposeImpl:()=>j.H,uniqueImpl:()=>X.S});var r=n(60224),s=n(32779),i=n(58607),a=n(29258),o=n(34769),l=n(48926),u=n(7679),c=n(31211),h=n(30969),d=n(76574),p=n(31820),f=n(54468),m=n(36272),g=n(26259),y=n(88405),x=n(40635),v=n(61325),b=n(55223),w=n(55126),_=n(71717),S=n(612),T=n(1917),E=n(70854),M=n(98584),C=n(29560),A=n(59885),I=n(8306),R=n(99230),k=n(7742),N=n(60001),L=n(40108),D=n(82578),O=n(42123),P=n(3849),F=n(13989),$=n(10440),B=n(62210),U=n(66841),z=n(38639),V=n(26626),G=n(71649),W=n(27723),H=n(69556),j=n(77107),X=n(75638)},33533:(e,t,n)=>{"use strict";n.d(t,{b:()=>s});var r=n(6639);function s(e){return(t,n,s,i,a)=>{const o=r.backend_util.assertAndGetBroadcastShape(t,n),l=o.length,u=r.D5U.computeStrides(o),c=r.D5U.sizeFromShape(o),h=r.D5U.getTypedArrayFromDType(a,c),d=t.length,p=n.length,f=r.D5U.computeStrides(t),m=r.D5U.computeStrides(n),g=r.backend_util.getBroadcastDims(t,o),y=r.backend_util.getBroadcastDims(n,o);if(g.length+y.length===0)for(let t=0;t<h.length;++t)h[t]=e(s[t%s.length],i[t%i.length]);else for(let t=0;t<h.length;++t){const n=r.D5U.indexToLoc(t,l,u),a=n.slice(-d);g.forEach((e=>a[e]=0));const o=r.D5U.locToIndex(a,d,f),c=n.slice(-p);y.forEach((e=>c[e]=0));const x=r.D5U.locToIndex(c,p,m);h[t]=e(s[o],i[x])}return[h,o]}}},46205:(e,t,n)=>{"use strict";n.d(t,{H:()=>l,j:()=>o});var r=n(6639),s=n(18166),i=n(29258),a=n(26961);function o(e,t,n,o){return null==n?({inputs:n,backend:i})=>{const{a,b:l}=n,u=i;(0,s.H)([a,l],e);const c=u.data.get(a.dataId).values,h=u.data.get(l.dataId).values,d="string"===a.dtype?r.backend_util.fromUint8ToStringArray(c):c,p="string"===a.dtype?r.backend_util.fromUint8ToStringArray(h):h,f=o||a.dtype,[m,g]=t(a.shape,l.shape,d,p,f);return u.makeTensorInfo(g,f,m)}:({inputs:e,backend:r})=>{const{a:s,b:l}=e,u=r;if("complex64"===s.dtype||"complex64"===l.dtype){const e=(0,i.pj)({inputs:{x:s},backend:u,attrs:{dtype:"complex64"}}),t=u.data.get(e.dataId),r=t.complexTensorInfos.real,o=t.complexTensorInfos.imag,c=u.data.get(r.dataId).values,h=u.data.get(o.dataId).values,d=(0,i.pj)({inputs:{x:l},backend:u,attrs:{dtype:"complex64"}}),p=u.data.get(d.dataId),f=p.complexTensorInfos.real,m=p.complexTensorInfos.imag,g=u.data.get(f.dataId).values,y=u.data.get(m.dataId).values,[x,v,b]=n(s.shape,l.shape,c,h,g,y),w=u.makeTensorInfo(b,"float32",x),_=u.makeTensorInfo(b,"float32",v),S=(0,a.P)({inputs:{real:w,imag:_},backend:u});return u.disposeIntermediateTensorInfo(e),u.disposeIntermediateTensorInfo(d),u.disposeIntermediateTensorInfo(w),u.disposeIntermediateTensorInfo(_),S}{const e=u.data.get(s.dataId).values,n=u.data.get(l.dataId).values,r=o||s.dtype,[i,a]=t(s.shape,l.shape,e,n,r);return u.makeTensorInfo(a,r,i)}}}function l(e){return(t,n,s,i,a,o)=>{const l=r.backend_util.assertAndGetBroadcastShape(t,n),u=r.D5U.sizeFromShape(l),c=l.length,h=r.D5U.computeStrides(l),d=r.D5U.getTypedArrayFromDType("float32",u),p=r.D5U.getTypedArrayFromDType("float32",u),f=r.backend_util.getBroadcastDims(t,l),m=r.backend_util.getBroadcastDims(n,l),g=r.backend_util.mergeRealAndImagArrays(s,i),y=r.backend_util.mergeRealAndImagArrays(a,o),x=t.length,v=r.D5U.computeStrides(t),b=n.length,w=r.D5U.computeStrides(n);if(f.length+m.length===0)for(let t=0;t<d.length;t++){const n=t%g.length,r=t%y.length,s=e(g[2*n],g[2*n+1],y[2*r],y[2*r+1]);d[t]=s.real,p[t]=s.imag}else for(let t=0;t<d.length;t++){const n=r.D5U.indexToLoc(t,c,h),s=n.slice(-x);f.forEach((e=>s[e]=0));const i=r.D5U.locToIndex(s,x,v),a=n.slice(-b);m.forEach((e=>a[e]=0));const o=r.D5U.locToIndex(a,b,w),l=e(g[2*i],g[2*i+1],y[2*o],y[2*o+1]);d[t]=l.real,p[t]=l.imag}return[d,p,l]}}},18029:(e,t,n)=>{"use strict";n.d(t,{a:()=>s});var r=n(6639);function s(e){return(t,n,s)=>{const i=r.D5U.getTypedArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)i[n]=e(t[n],s);return i}}},76738:(e,t,n)=>{"use strict";n.d(t,{A:()=>i,O:()=>a});var r=n(6639),s=n(18166);function i(e,t,n){return({inputs:i,attrs:a,backend:o})=>{const{x:l}=i;if((0,s.H)(l,e),"string"===l.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const u=o,c=u.data.get(l.dataId).values,h=r.D5U.sizeFromShape(l.shape),d=n||l.dtype,p=r.D5U.getArrayFromDType(d,h);for(let e=0;e<h;++e)p[e]=t(c[e],a);return u.makeTensorInfo(l.shape,d,p)}}function a(e,t,n){return({inputs:r,attrs:i,backend:a})=>{const{x:o}=r;if((0,s.H)(o,e),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const l=a,u=l.data.get(o.dataId).values,c=n||o.dtype,h=t(u,c,i);return l.makeTensorInfo(o.shape,c,h)}}},24391:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var r=n(6639),s=n(26961);function i(e,t,n="float32"){if("complex64"===n){const n=i(e,t,"float32"),r=i(e,t,"float32");return(0,s.P)({inputs:{real:n,imag:r},backend:e})}const a=r.D5U.makeZerosTypedArray(r.D5U.sizeFromShape(t),n);return e.makeTensorInfo(t,n,a)}},56392:(e,t,n)=>{"use strict";n.d(t,{p:()=>r});class r{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}},47340:(e,t,n)=>{"use strict";n.d(t,{a:()=>r});class r{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}},48009:(e,t,n)=>{"use strict";n.d(t,{d:()=>r});class r{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:i}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,i];const a="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${a} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}},40673:(e,t,n)=>{"use strict";n.d(t,{t:()=>a});var r=n(6639),s=n(21034),i=n(55156);class a{constructor(e,t,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,r.D5U.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const o=e[e.length-1],l=Math.ceil(o/t);this.outputShape=e.slice(0,-1),l>1&&this.outputShape.push(l),a||this.variableNames.push("bestIndicesA");const u=this.outputShape,c=u.length,h=(0,i.kW)(c),d=(0,s.Ky)("coords",c);let p,f;if(1===l){f=c+1;const e=(0,i.kW)(f);p=`\n        ${e} sourceLocR = ${e}(${d.join()}, 0);\n        ++${d[c-1]};\n        ${e} sourceLocG = ${e}(${d.join()}, 0);\n        ++${d[c-2]};\n        ${e} sourceLocA = ${e}(${d.join()}, 0);\n        --${d[c-1]};\n        ${e} sourceLocB = ${e}(${d.join()}, 0);\n        --${d[c-2]};`}else f=c,p=`\n        ${h} sourceLocR = coords;\n        ++${d[c-1]};\n        ${h} sourceLocG = coords;\n        ++${d[c-2]};\n        ${h} sourceLocA = coords;\n        --${d[c-1]};\n        ${h} sourceLocB = coords;\n        --${d[c-2]};`;const m=["x","y","z","w","u","v"].slice(0,f),g="."+m[f-1],y=m.map((e=>"int "+e)),x=(0,s.Ky)("sourceLocR",f-1).concat("inIdx.r"),v=(0,s.Ky)("sourceLocG",f-1).concat("inIdx.g"),b=(0,s.Ky)("sourceLocB",f-1).concat("inIdx.b"),w=(0,s.Ky)("sourceLocA",f-1).concat("inIdx.a"),_="max"===n?"greaterThan":"lessThan",S=a?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${x.join()}),\n                             getBestIndicesAChannel(${v.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${w.join()})));`,T=`vec4(\n            getAChannel(${x.join()}),\n            hasNextCol ? getAChannel(${v.join()}) : 0.,\n            hasNextRow ? getAChannel(${b.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${w.join()}) : 0.)`,E=a?"":`\n      float getBestIndicesAChannel(${y.join()}) {\n        return getChannel(getBestIndicesA(${m.join()}),\n                                          vec2(${m.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${y.join()}) {\n        return getChannel(getA(${m.join()}),\n                               vec2(${m.slice(-2).join()}));\n      }\n      ${E}\n      void main() {\n        ${h} coords = getOutputCoords();\n        bool hasNextCol = ${d[c-1]} < ${u[c-1]-1};\n        bool hasNextRow = ${d[c-2]} < ${u[c-2]-1};\n        ${p}\n        ivec4 srcIdx = ivec4(sourceLocR${g}, sourceLocG${g},\n          sourceLocB${g}, sourceLocA${g}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${T};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${S}\n          vec4 candidate = ${T};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${_}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}},692:(e,t,n)=>{"use strict";n.d(t,{o:()=>r,z:()=>s});class r{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,i=e.dilationHeight,a=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${i}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${a}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class s{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,i=e.strideHeight,a=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}},94739:(e,t,n)=>{"use strict";n.d(t,{QC:()=>E}),n(93381);var r=n(6639),s=n(90740),i=n(92860),a=n(23207),o=n(4443),l=n(14230),u=n(1888),c=n(89105),h=n(95489),d=n(16697),p=n(64272),f=n(55667),m=n(28831),g=n(18378),y=n(42490),x=n(84518),v=n(29365),b=n(84595),w=n(91906);const _=r.GDt.whereImpl,S={},T=(0,r.OBj)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class E extends r.Zuw{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!(0,r.OBj)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof h.A)t=e;else{const n=(0,s.jl)((0,r.OBj)().getNumber("WEBGL_VERSION"),e);t=new h.A(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=(0,s.jl)((0,r.OBj)().getNumber("WEBGL_VERSION"));t=new h.A(e),this.binaryCache=((n=(0,r.OBj)().getNumber("WEBGL_VERSION"))in S||(S[n]={}),S[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new y.I(this.gpgpu),this.numMBBeforeWarning=null==(0,r.OBj)().global.screen?1024:(0,r.OBj)().global.screen.height*(0,r.OBj)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new r.JLz(this,(0,r.SRH)())}nextDataId(){return E.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if(((0,r.OBj)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,r.OBj)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:n,values:e,usage:g.v2.UPLOAD,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,s,i){if((0,r.OBj)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===s)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:s,values:t,usage:g.v2.UPLOAD,refCount:i})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:s,complexTensorInfos:i,slice:a,shape:o,isPacked:l}=t;if(null!=a){let t;t=l?new v.cc(o,x.bl):new x.l(o,x.bl);const n=this.runWebGLProgram(t,[{dataId:e,shape:o,dtype:s}],s),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===s)return n;const u=null!=this.activeTimers;let c,h;if(u&&(c=r.D5U.now()),"complex64"===s){const e=this.readSync(i.real.dataId),t=this.readSync(i.imag.dataId);h=r.backend_util.mergeRealAndImagArrays(e,t)}else h=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=r.D5U.now()-c),this.convertAndCacheOnCPU(e,h)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:s,slice:i,dtype:a,complexTensorInfos:o,isPacked:l}=t;if(null!=i){let t;t=l?new v.cc(s,x.bl):new x.l(s,x.bl);const n=this.runWebGLProgram(t,[{dataId:e,shape:s,dtype:a}],a),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if((0,r.OBj)().getBool("DEBUG")&&!(0,r.OBj)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,r.OBj)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,c,h=null;if("complex64"!==a&&(0,r.OBj)().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);h=this.gpgpu.createBufferFromTexture(t.texture.texture,...g.Yz(s))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),t=e[0],n=e[1];c=r.backend_util.mergeRealAndImagArrays(t,n)}else if(null==h)c=this.getValuesFromTexture(e);else{const e=r.D5U.sizeFromShape(s);c=this.gpgpu.downloadFloat32MatrixFromBuffer(h,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=h){const e=this.gpgpu.gl;w.callAndCheck(e,(()=>e.deleteBuffer(h)))}const d=this.convertAndCacheOnCPU(e,c),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach((e=>e(d))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&(0,r.SRH)().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,t={}){const n=this.texData.get(e),{values:s,shape:i,slice:a,dtype:o,isPacked:l,texture:u}=n;if("complex64"===o)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=a){let n;n=l?new v.cc(i,x.bl):new x.l(i,x.bl);const r=this.runWebGLProgram(n,[{dataId:e,shape:i,dtype:o}],o),s=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),s}if(null==u)throw null!=s?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const c=this.decode(e,t.customTexShape),h=(0,r.SRH)().makeTensorFromTensorInfo(c),d=this.texData.get(c.dataId);return Object.assign({tensorRef:h},d.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>r.D5U.decodeString(e)));return(0,r.f3b)(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,r.f3b)(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!w.canBeRepresented(n)){if((0,r.OBj)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:s}=this.texData.get(e),i=r.D5U.sizeFromShape(t);if((0,r.OBj)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...g.Yz(t)).subarray(0,i);return this.disposeIntermediateTensorInfo(n),s}const a=(0,r.OBj)().getBool("WEBGL_PACK")&&!0===s,u=a?w.getShapeAs3D(t):t,c=a?new l.d(u):new o.q(u),h=this.runWebGLProgram(c,[{shape:u,dtype:n,dataId:e}],"float32"),d=this.texData.get(h.dataId),p=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(d.texture.texture,d.texShape[0],d.texShape[1]).subarray(0,i);return this.disposeIntermediateTensorInfo(h),p}timerAvailable(){return(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let s=!1;null==this.programTimersStack?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();const i=r.D5U.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=r.D5U.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,s&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if((0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(i);o.kernelMs=r.D5U.sum(e),o.getExtraProfileInfo=()=>e.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:r.D5U.now(),endMs:null}}endTimer(e){return(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=r.D5U.now(),e)}async getQueryTime(e){if((0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:s,isPacked:i,slice:a}=this.texData.get(e),o=a&&a.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,i)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=T){return(0,r.OBj)().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&r.D5U.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){r.backend_util.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return _(e.shape,t)}packedUnaryOp(e,t,n){const s=new v.cc(e.shape,t),i=this.compileAndRun(s,[e],n);return(0,r.SRH)().makeTensorFromTensorInfo(i)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=(0,p.CJ)(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if((0,r.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,x.Et,e.dtype);const t=new x.l(e.shape,x.Et),n=this.compileAndRun(t,[e]);return(0,r.SRH)().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&r.D5U.isString(n[0])){const i=n.map((e=>r.D5U.encodeString(e)));s=this.write(i,e,t)}else s=this.write(n,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,n){return(0,r.SRH)().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new b.W(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new f.U(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[w.getBatchDim(e.shape),...w.getRowsCols(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[w.getBatchDim(t),...w.getRowsCols(t)],i=new m.v(s,n),a=[n],o=this.runWebGLProgram(i,[r],e.dtype,a,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:s,shape:o,dtype:l}=n;if(null!=t){const e=r.D5U.sizeFromShape(o),n=t[0]*t[1]*4;r.D5U.assert(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const u=w.getShapeAs3D(o);let c;c=s?new a.G(u):new i._(u);const h=[null!=t?t:g.Yz(u)];return{dtype:l,shape:o,dataId:this.runWebGLProgram(c,[{shape:u,dtype:l,dataId:e}],l,h,!0,t).dataId}}runWebGLProgram(e,t,n,s,i=!1,a){const o=this.makeTensorInfo(e.outputShape,n),l=this.texData.get(o.dataId);if(e.packedOutput&&(l.isPacked=!0),e.outPackingScheme===g.m1.DENSE){const t=null!=a?a:g.Yz(e.outputShape);l.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(l.usage=e.outTexUsage),0===r.D5U.sizeFromShape(o.shape))return l.values=r.D5U.getTypedArrayFromDType(o.dtype,0),o;const u=[],c=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&r.D5U.sizeFromShape(t.shape)<=(0,r.OBj)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!w.isReshapeFree(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),u.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(o.dataId);const h={shape:o.shape,texData:l,isUniform:!1},p=d.mi(e,c,h),f=this.getAndSaveBinary(p,(()=>d.IJ(this.gpgpu,e,c,h))),m=null!=this.activeTimers;let y;m&&(y=this.startTimer()),(0,r.OBj)().get("ENGINE_COMPILE_ONLY")||d._s(this.gpgpu,f,c,h,s),u.forEach((e=>this.disposeIntermediateTensorInfo(e))),m&&(y=this.endTimer(y),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(y)}));const x=(0,r.OBj)().get("WEBGL_FLUSH_THRESHOLD");if(x>0){const e=r.D5U.now();e-this.lastGlFlushTime>x&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!(0,r.OBj)().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&!1===i){const e=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),e}return o}compileAndRun(e,t,n,r,s=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||((0,r.OBj)().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,r.lub)((()=>{if(!(0,r.OBj)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=(0,r.OBj)().getBool("DEBUG");(0,r.OBj)().set("DEBUG",!1);const t=this.abs((0,r.iD$)(1e-8)).dataSync()[0];if((0,r.OBj)().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:s,values:i,texture:a,usage:o,isPacked:l}=t;if(null!=a)return;const h=null!=this.activeTimers;let d;h&&(d=r.D5U.now());let p=t.texShape;if(null==p&&(p=w.getTextureShapeFromLogicalShape(n,l),t.texShape=p),null!=i){const e=w.getShapeAs3D(n);let a,o=p[1],f=p[0];const m=i instanceof Uint8Array||i instanceof Uint8ClampedArray;!l&&m||([o,f]=g.qe(p[0],p[1])),a=l?new c.Z(e,m):new u.F(e,m);const y=m?[f,o]:p,x=this.makeTensorInfo(y,s),v=this.texData.get(x.dataId);v.usage=m?g.v2.PIXELS:g.v2.UPLOAD,v.texShape=y,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(x.dataId),o,f,i);const b=[[f,o]],_=!0,S=this.runWebGLProgram(a,[x],s,b,_),T=this.texData.get(S.dataId);t.texShape=T.texShape,t.isPacked=T.isPacked,t.usage=T.usage,(0,r.OBj)().get("ENGINE_COMPILE_ONLY")?this.disposeData(S.dataId):(t.texture=T.texture,t.values=null,this.texData.delete(S.dataId)),this.disposeIntermediateTensorInfo(x),h&&(this.uploadWaitMs+=r.D5U.now()-d)}else{const e=this.acquireTexture(p,o,s,l);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*r.D5U.bytesPerElement(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await(0,r.glt)(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw w.logShaderSourceAndInfoLog(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const[,e]of Object.entries(this.binaryCache)){const{uniformLocations:t,customUniformLocations:n,infLoc:r,nanLoc:s,inShapesLocations:i,inTexShapesLocations:a,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:u}=(0,d.Yv)(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=s,e.inShapesLocations=i,e.inTexShapesLocations=a,e.outShapeLocation=o,e.outShapeStridesLocation=l,e.outTexShapeLocation=u}}}E.nextDataId=0},43078:(e,t,n)=>{"use strict";n.d(t,{Af:()=>a.Af,QC:()=>a.QC,fZ:()=>a.fZ,ic:()=>i.i,kS:()=>a.kS,lz:()=>a.lz,nd:()=>a.nd,yO:()=>o});var r=n(6639),s=n(94739),i=n(91075),a=n(25522);r.C2$.isBrowser()&&(0,r.jqO)("webgl",(()=>new s.QC),2);const o={forceHalfFloat:a.kS}},29476:(e,t,n)=>{"use strict";n.d(t,{w:()=>s});var r=n(6639);class s{constructor(e,t,n,s,i,a){this.outputShape=[],this.variableNames=["x","mean","variance"],r.backend_util.assertAndGetBroadcastShape(e,t),r.backend_util.assertAndGetBroadcastShape(e,n);let o="0.0";null!=s&&(r.backend_util.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let l="1.0";null!=i&&(r.backend_util.assertAndGetBroadcastShape(e,i),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${o};\n        float scale = ${l};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}},87373:(e,t,n)=>{"use strict";n.d(t,{x:()=>s});var r=n(6639);class s{constructor(e,t,n,s,i,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],r.backend_util.assertAndGetBroadcastShape(e,t),r.backend_util.assertAndGetBroadcastShape(e,n);let o="vec4(0.0)";null!=s&&(r.backend_util.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let l="vec4(1.0)";null!=i&&(r.backend_util.assertAndGetBroadcastShape(e,i),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${o};\n        vec4 scale = ${l};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}},21480:(e,t,n)=>{"use strict";n.d(t,{S:()=>i,x:()=>s});var r=n(6639);const s={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class i{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=r.backend_util.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}},84039:(e,t,n)=>{"use strict";n.d(t,{D1:()=>i,t6:()=>a});var r=n(6639),s=n(16697);const i="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class a{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=r.backend_util.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=(0,s.C9)(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}},14488:(e,t,n)=>{"use strict";n.d(t,{E2:()=>l,my:()=>o});var r=n(6639),s=n(16697),i=n(21034),a=n(55156);const o="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class l{constructor(e,t,n,o=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r.backend_util.assertAndGetBroadcastShape(t,n);const l=this.outputShape.length;this.enableShapeUniforms=(0,s.C9)(l);let u="";if(o)if(0===l||1===r.D5U.sizeFromShape(this.outputShape))u="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(u=`\n          ${(0,a.kW)(l)} coords = getOutputCoords();\n        `,1===l)this.enableShapeUniforms?u+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":u+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=(0,i.Ky)("coords",l);this.enableShapeUniforms?u+=`\n            bool nextRowOutOfBounds =\n              (${e[l-2]} + 1) >= outShape[${l} - 2];\n            bool nextColOutOfBounds =\n              (${e[l-1]} + 1) >= outShape[${l} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:u+=`\n            bool nextRowOutOfBounds =\n              (${e[l-2]} + 1) >= ${this.outputShape[l-2]};\n            bool nextColOutOfBounds =\n              (${e[l-1]} + 1) >= ${this.outputShape[l-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${u}\n\n        setOutput(result);\n      }\n    `}}},90740:(e,t,n)=>{"use strict";n.d(t,{jl:()=>o,nd:()=>a});var r=n(6639);const s={},i={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function a(e,t){s[e]=t}function o(e,t){if(!(e in s)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete s[e]}),!1),(0,r.OBj)().getBool("SOFTWARE_WEBGL_ENABLED")&&(i.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",i)||n.getContext("experimental-webgl",i):n.getContext("webgl2",i)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;s[e]=n}const n=s[e];return null==n||n.isContextLost()?(delete s[e],o(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),s[e])}},90150:(e,t,n)=>{"use strict";n.d(t,{v:()=>r});class r{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}},96521:(e,t,n)=>{"use strict";n.d(t,{V:()=>r});class r{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}},82314:(e,t,n)=>{"use strict";n.d(t,{V:()=>r});class r{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}},47494:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(6639);class s{constructor(e){this.outputShape=[],this.outputShape=r.backend_util.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const s=t.length,i=t[t.length-1];n.push(`else setOutput(getT${s}(yR, yC-${i}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}},47625:(e,t,n)=>{"use strict";n.d(t,{R:()=>a});var r=n(6639),s=n(21034),i=n(55156);class a{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=r.backend_util.computeOutShape(e,t);const n=this.outputShape,a=n.length,l=(0,i.kW)(a),u=(0,s.Ky)("coords",a),c=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map(((e,t)=>`T${t}`));const h=new Array(e.length-1);h[0]=e[0][t];for(let n=1;n<h.length;n++)h[n]=h[n-1]+e[n][t];const d=c[t],p=c.slice(-2),f=c.join();let m=`if (${d} < ${h[0]}) {\n        return getChannel(\n            getT0(${f}), vec2(${p.join()}));\n        }`;for(let e=1;e<h.length;e++){const t=h[e-1];m+=`\n        if (${d} < ${h[e]}  && ${d} >= ${h[e-1]}) {\n          return getChannel(\n            getT${e}(${o(c,d,t)}),\n            vec2(${o(p,d,t)}));\n        }`}const g=h.length,y=h[h.length-1];m+=`\n        return getChannel(\n          getT${g}(${o(c,d,y)}),\n          vec2(${o(p,d,y)}));`,this.userCode=`\n      float getValue(${c.map((e=>"int "+e))}) {\n        ${m}\n      }\n\n      void main() {\n        ${l} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${u}), 0., 0., 0.);\n\n        ${u[a-1]} = ${u[a-1]} + 1;\n        if (${u[a-1]} < ${n[a-1]}) {\n          result.g = getValue(${u});\n        }\n\n        ${u[a-2]} = ${u[a-2]} + 1;\n        if (${u[a-2]} < ${n[a-2]}) {\n          result.a = getValue(${u});\n        }\n\n        ${u[a-1]} = ${u[a-1]} - 1;\n        if (${u[a-2]} < ${n[a-2]} &&\n            ${u[a-1]} < ${n[a-1]}) {\n          result.b = getValue(${u});\n        }\n        setOutput(result);\n      }\n    `}}function o(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}},90301:(e,t,n)=>{"use strict";n.d(t,{FF:()=>i,Ng:()=>r,P2:()=>s,cc:()=>a});class r{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,i="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${i}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class s{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,i="channelsLast"===e.dataFormat,a=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=i?1:2,u=i?2:3,c=i?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${i}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class i{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.padInfo.front,i=e.padInfo.top,a=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${s};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${i};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${a};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class a{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,i=e.strideHeight,a=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}},37428:(e,t,n)=>{"use strict";n.d(t,{g:()=>s,u:()=>r});class r{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${i} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class s{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,i=t-1-e.padInfo.top,a=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}},18954:(e,t,n)=>{"use strict";n.d(t,{I:()=>r,S:()=>s});class r{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const i=e.padInfo.top,a=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,x=m?3:1;let v="",b="";n&&(v=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,b="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${v}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${i}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${x}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${b}\n        setOutput(result);\n      }\n    `}}class s{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,i=e.strideHeight,a=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${i}, ${a});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}},64364:(e,t,n)=>{"use strict";n.d(t,{J:()=>s});var r=n(16697);class s{constructor(e,t=!1,n=null,s=!1,i=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=(0,r.C9)(this.outputShape.length);const a=e.filterHeight,o=e.filterWidth,l=e.outChannels/e.inChannels;let u="",c="";n&&(u=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:i?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,c="result = activation(result);");const h=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${l};\n        int q = d2 - d1 * ${l};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${a}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${o}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${h}\n        ${c}\n        setOutput(result);\n      }\n    `}}},92734:(e,t,n)=>{"use strict";n.d(t,{i:()=>i});var r=n(6639),s=n(16697);class i{constructor(e,t=!1,n=null,i=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=(0,s.C9)(this.outputShape.length);const o=e.padInfo.left,l=e.strideWidth,u=e.dilationWidth,c=e.filterHeight,h=e.filterWidth,d=h;let p="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<h;e++)p+=`\n           vec4 xTexelC${2*e};\n           int xTexelC${2*e}Ready;\n           vec4 xTexelC${2*e+1};\n           int xTexelC${2*e+1}Ready;\n           vec4 xC${e};`;p+=`\n     for (int r = 0; r < ${c}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let e=0;e<h;e++)p+=`\n           xTexelC${2*e} = vec4(0.0);\n           xTexelC${2*e}Ready = 0;\n           xTexelC${2*e+1} = vec4(0.0);\n           xTexelC${2*e+1}Ready = 0;\n           xC${e} = vec4(0.0);`;p+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let t=0;t<(d+1)/2;t++){const n=2*t;if(p+=`\n           xC = xCCorner + ${n*u};\n           `,1===l){if(n<h&&(o%2==1?(p+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n               `,p+=1===u&&n>0?`\n                 xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                   } else {\n                     xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                   }\n                   `):p+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xC${n} = xTexelC${n};\n                 `,n+1<h)){const e=o%2==0?r.D5U.nearestLargerEven(u):u;u%2==0&&o%2==1||u%2!=0&&o%2!=1?(p+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                     xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${n+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${n+1}Ready = 1;\n                   }\n                   `,p+=u>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${n+1} = vec4(previous.zw, xTexelC${n+1}.xy);\n                     } else {\n                      xC${n+1} = vec4(0.0, 0.0, xTexelC${n+1}.xy);\n                     }\n                     `:`\n                     xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                     `):p+=1===e?`\n                     xC${n+1} = xTexelC${n};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                       xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${n+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${n+1}Ready = 1;\n                     }\n\n                     xC${n+1} = xTexelC${n+1};\n                     `}}else n<h&&(o%2==1?(p+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n               `,n+1<h&&(p+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                 `)):(p+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(\n                   xTexelC${n}.xy, xTexelC${n+1}.xy);\n               `,n+1<h&&(p+=`\n                   xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                 `)));n<h&&(p+=`\n             wTexel = getW(r, ${n}, d1, d2);\n             dotProd += xC${n}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${n}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,n+1<h&&(p+=`\n               wTexel = getW(r, ${n+1}, d1, d2);\n               dotProd += xC${n+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${n+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}p+="\n     }\n   ",p+="\n     }\n   ",p+="\n     }\n   ";let f="",m="";n&&(f=i?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:a?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,m="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${f}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${p}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${g}\n         ${m}\n         setOutput(result);\n       }\n     `}}},31177:(e,t,n)=>{"use strict";n.d(t,{f:()=>i});var r=n(6639),s=n(16697);class i{constructor(e,t=!1,n=null,i=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=(0,s.C9)(this.outputShape.length);const o=e.outChannels/e.inChannels,l=e.padInfo.left,u=e.strideWidth,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=d;let f="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<d;e++)f+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;f+=`\n    for (int r = 0; r < ${h}; r++) {\n      `;for(let e=0;e<d;e++)f+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;f+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(p+1)/2;e++){const t=2*e;if(f+=`\n          xC = xCCorner + ${t*c};\n          `,1===u){if(t<d&&(l%2==1?(f+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,f+=1===c&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):f+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<d)){const e=l%2==0?r.D5U.nearestLargerEven(c):c;c%2==0&&l%2==1||c%2!=0&&l%2!=1?(f+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,f+=c>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                    } else {\n                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                    }\n                    `:`\n                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                    `):f+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<d&&(l%2==1?(f+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<d&&(f+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(f+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<d&&(f+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<d&&(f+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<d&&(f+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}f+="\n    }\n  ",f+="\n      }\n    ";let m="",g="";n&&(m=i?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,g="result = activation(result);");const y=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${m}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${f}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${y}\n        ${g}\n        setOutput(result);\n      }\n    `}}},65120:(e,t,n)=>{"use strict";n.d(t,{A:()=>r});class r{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,a,o,l]=e,[u]=t,[c,h]=n;this.outputShape=[u,c,h,l];const d="bilinear"===r?1:0,[p,f]=[a-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(a-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[x,v,b]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${x});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${i}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${v};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${b};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}},30330:(e,t,n)=>{"use strict";n.d(t,{Q:()=>r,Z:()=>i});var r,s=n(55156);!function(e){e.Prod="*",e.Sum="+"}(r||(r={}));class i{constructor(e,t,n,i){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const l=this.outputShape.length,u=this.op===r.Prod?"1.0":"0.0",c=n?u:`getX(${a(l,"coords",this.op)})`,h=this.outputShape[this.outputShape.length-1];let d="",p="";n?(d=i?"end != "+(h-1):"end != 0",p=i?"end + 1":"end - 1"):(d=i?`end + pow2 < ${h}`:"end >= pow2",p=i?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${(0,s.kW)(l)} coords = getOutputCoords();\n        int end = ${o(l,"coords",this.op)};\n        float val = ${c};\n        int pow2 = int(pow(2.0, index));\n        if (${d}) {\n          int idx = ${p};\n          ${o(l,"coords",this.op)} = idx;\n          val ${this.op}= getX(${a(l,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function a(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function o(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}},92860:(e,t,n)=>{"use strict";n.d(t,{_:()=>o});var r=n(29610),s=n(16697),i=n(38110),a=n(18378);class o{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=a.m1.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=(0,r.A)();this.outputShape=e,this.enableShapeUniforms=(0,s.C9)(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?i.Kn(["r","c","d"],e):i.RW(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}},23207:(e,t,n)=>{"use strict";n.d(t,{G:()=>o});var r=n(29610),s=n(16697),i=n(38110),a=n(18378);class o{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=a.m1.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=(0,r.A)();this.outputShape=e,this.enableShapeUniforms=(0,s.C9)(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?i.Kn(["r","c","d"],e):i.RW(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}},87033:(e,t,n)=>{"use strict";n.d(t,{h:()=>r});class r{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}},76473:(e,t,n)=>{"use strict";n.d(t,{L:()=>r});class r{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}},93008:(e,t,n)=>{"use strict";n.d(t,{H:()=>r});class r{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:i,filterHeight:a,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${i});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${a}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}},4443:(e,t,n)=>{"use strict";n.d(t,{q:()=>a});var r=n(29610),s=n(38110),i=n(18378);class a{constructor(e){this.variableNames=["A"],this.outTexUsage=i.v2.DOWNLOAD;const t=(0,r.A)();this.outputShape=e,this.userCode=`\n      ${s.ye}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}},14230:(e,t,n)=>{"use strict";n.d(t,{d:()=>a});var r=n(29610),s=n(38110),i=n(18378);class a{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=i.v2.DOWNLOAD;const t=(0,r.A)();this.outputShape=e,this.userCode=`\n      ${s.ye}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}},1888:(e,t,n)=>{"use strict";n.d(t,{F:()=>a});var r=n(29610),s=n(16697),i=n(38110);class a{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=(0,r.A)();this.outputShape=e,this.enableShapeUniforms=(0,s.C9)(this.outputShape.length);let a="result";t&&(a="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?i.nc():i.ku(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${a}, 0., 0., 0.);\n      }\n    `}}},89105:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var r=n(29610),s=n(16697),i=n(38110);class a{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=(0,r.A)();this.outputShape=e,this.enableShapeUniforms=(0,s.C9)(this.outputShape.length);let a="",o="result";t&&(o="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let r=0;r<=1;r++){const s=2*t+r;a+=`\n          localCoords = coords;\n          if(localCoords[2] + ${r} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${r};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?i.nc():i.ku(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${a}\n\n          ${n.output} = ${o};\n        }\n    `}}},90615:(e,t,n)=>{"use strict";n.d(t,{O:()=>r});class r{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${r}.0`:"1.0";let a;if("real"===e)a="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);a="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${a}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}},67137:(e,t,n)=>{"use strict";n.d(t,{o:()=>r});class r{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}},93381:(e,t,n)=>{"use strict";var r=n(6639),s=n(91906);const i=(0,r.OBj)();i.registerFlag("HAS_WEBGL",(()=>i.getNumber("WEBGL_VERSION")>0)),i.registerFlag("WEBGL_VERSION",(()=>(0,s.isWebGLVersionEnabled)(2)?2:(0,s.isWebGLVersionEnabled)(1)?1:0)),i.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),i.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===i.get("WEBGL_VERSION"))),i.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),i.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),i.registerFlag("WEBGL_PACK",(()=>i.getBool("HAS_WEBGL"))),i.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>i.getBool("WEBGL_PACK"))),i.registerFlag("WEBGL_PACK_CLIP",(()=>i.getBool("WEBGL_PACK"))),i.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>i.getBool("WEBGL_PACK"))),i.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>i.getBool("WEBGL_PACK"))),i.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>i.getBool("WEBGL_PACK"))),i.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>i.getBool("WEBGL_PACK"))),i.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>i.getBool("WEBGL_PACK"))),i.registerFlag("WEBGL_PACK_REDUCE",(()=>i.getBool("WEBGL_PACK"))),i.registerFlag("WEBGL_LAZILY_UNPACK",(()=>i.getBool("WEBGL_PACK"))),i.registerFlag("WEBGL_CONV_IM2COL",(()=>i.getBool("WEBGL_PACK"))),i.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>(0,s.getWebGLMaxTextureSize)(i.getNumber("WEBGL_VERSION")))),i.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>(0,s.getMaxTexturesInShader)(i.getNumber("WEBGL_VERSION")))),i.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=i.getNumber("WEBGL_VERSION");return 0===e?0:(0,s.getWebGLDisjointQueryTimerVersion)(e)})),i.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>i.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!r.C2$.isMobile())),i.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>(0,s.isCapableOfRenderingToFloatTexture)(i.getNumber("WEBGL_VERSION")))),i.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!i.getBool("WEBGL_FORCE_F16_TEXTURES")&&i.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),i.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>(0,s.isDownloadFloatTextureEnabled)(i.getNumber("WEBGL_VERSION")))),i.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>(0,s.isWebGLFenceEnabled)(i.getNumber("WEBGL_VERSION")))),i.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>i.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),i.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),i.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>r.C2$.isMobile()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),i.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),i.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),i.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),i.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),i.registerFlag("WEBGL_EXP_CONV",(()=>!1)),i.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>i.getBool("IS_TEST"))),i.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),i.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),i.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1))},67079:(e,t,n)=>{"use strict";n.d(t,{i:()=>r});class r{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}},55795:(e,t,n)=>{"use strict";n.d(t,{S:()=>s});var r=n(55156);class s{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=(0,r.kW)(this.rank),s=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("index"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${s}));\n      }\n    `}}},78428:(e,t,n)=>{"use strict";n.d(t,{i:()=>s});var r=n(55156);class s{constructor(e,t,n,s){this.sliceDim=e,this.strides=t,this.paramsShape=s,this.variableNames=["x","indices"],this.outputShape=n;const i=(0,r.kW)(n.length);let a="\n    int index;";for(let e=0;e<this.sliceDim;e++)a+=`\n          index = round(getIndices(coords[0], ${e}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[e]};\n          flattenIndex += index * ${this.strides[e]};`;this.userCode=`\n         void main() {\n          ${i} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${a}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}},29610:(e,t,n)=>{"use strict";n.d(t,{A:()=>s});var r=n(6639);function s(){let e,t,n,s,i,a,o,l,u,c;return 2===(0,r.OBj)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",s="in",i="texture",a="outputColor",o="out vec4 outputColor;",l=(0,r.OBj)().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",u="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",s="varying",i="texture2D",a="gl_FragColor",o="",l="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:i,output:a,defineOutput:o,defineSpecialNaN:l,defineSpecialInf:u,defineRound:c}}},95489:(e,t,n)=>{"use strict";n.d(t,{A:()=>l});var r=n(6639),s=n(90740),i=n(4328),a=n(18378),o=n(91906);class l{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=(0,r.OBj)().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,(0,s.nd)(t,e)):this.gl=(0,s.jl)(t);let n="WEBGL_color_buffer_float";const l="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===(0,r.OBj)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=o.getExtensionOrThrow(this.gl,e),o.hasExtension(this.gl,t))this.textureHalfFloatExtension=o.getExtensionOrThrow(this.gl,t);else if((0,r.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),o.hasExtension(this.gl,l))this.colorBufferHalfFloatExtension=o.getExtensionOrThrow(this.gl,l);else if((0,r.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",o.hasExtension(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!o.hasExtension(this.gl,l))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(l)}this.vertexBuffer=i.createVertexBuffer(this.gl),this.indexBuffer=i.createIndexBuffer(this.gl),this.framebuffer=o.createFramebuffer(this.gl),this.textureConfig=a.Sq(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,r.OBj)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;o.callAndCheck(e,(()=>e.finish())),o.callAndCheck(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),o.callAndCheck(e,(()=>e.deleteFramebuffer(this.framebuffer))),o.callAndCheck(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),o.callAndCheck(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),o.callAndCheck(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),i.createFloat32MatrixTexture(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),i.createFloat16MatrixTexture(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),i.createUnsignedBytesMatrixTexture(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),i.uploadPixelDataToTexture(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),i.uploadDenseMatrixToTexture(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),i.createFloat16PackedMatrixTexture(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),i.createPackedMatrixTexture(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(o.unbindColorTextureFromFramebuffer(this.gl,this.framebuffer),this.outputTexture=null),o.callAndCheck(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>i.downloadByteEncodedFloatMatrixFromOutputTexture(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,s,a){return i.downloadPackedMatrixFromBuffer(this.gl,e,t,n,r,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return i.downloadFloat32MatrixFromBuffer(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=i.createBufferFromOutputTexture(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if((0,r.OBj)().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>i.downloadMatrixFromPackedOutputTexture(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=i.createVertexShader(t));const n=o.createProgram(t);return o.callAndCheck(t,(()=>t.attachShader(n,this.vertexShader))),o.callAndCheck(t,(()=>t.attachShader(n,e))),o.linkProgram(t,n),this.debug&&o.validateProgram(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=i.bindVertexProgramAttributeStreams(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&o.callAndCheck(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&o.validateProgram(this.gl,this.program),o.callAndCheck(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?o.getProgramUniformLocationOrThrow(this.gl,e,t):o.getProgramUniformLocation(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),o.callAndCheck(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),o.bindTextureToProgramUniformSampler(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=a.qe(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&o.validateProgram(this.gl,this.program),o.validateFramebuffer(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),o.callAndCheck(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),o.callAndCheck(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=o.getExtensionOrThrow(this.gl,2===(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await r.D5U.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in(0,r.OBj)().platform&&(n=(0,r.OBj)().platform.setTimeoutCustom.bind((0,r.OBj)().platform)),r.D5U.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),o.bindColorTextureToFramebuffer(this.gl,e,this.framebuffer),this.debug&&o.validateFramebuffer(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(o.bindColorTextureToFramebuffer(this.gl,this.outputTexture,this.framebuffer),this.debug&&o.validateFramebuffer(this.gl)):o.unbindColorTextureFromFramebuffer(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;o.bindColorTextureToFramebuffer(r,e,this.framebuffer),this.debug&&o.validateFramebuffer(r),this.outputTexture=e,o.callAndCheck(r,(()=>r.viewport(0,0,t,n))),o.callAndCheck(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),o.callAndCheck(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}},16697:(e,t,n)=>{"use strict";n.d(t,{C9:()=>h,IJ:()=>a,Yv:()=>o,_s:()=>u,mi:()=>c});var r=n(6639),s=n(55156),i=n(91906);function a(e,t,n,a){const l=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),u=l.map((e=>e.shapeInfo)),c={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},h=s.Vm(l,c,t),d=(0,i.createFragmentShader)(e.gl,h),p=e.createProgram(d);return(0,r.OBj)().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:d,source:h,webGLProgram:p,inShapeInfos:u,outShapeInfo:c,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:d,source:h,webGLProgram:p,inShapeInfos:u,outShapeInfo:c},o(e,t,p))}function o(e,t,n){const s={},i={},a={},o=[];let l,u,c,h=null,d=null;d=e.getUniformLocation(n,"NAN",!1),1===(0,r.OBj)().getNumber("WEBGL_VERSION")&&(h=e.getUniformLocation(n,"INFINITY",!1));const p=!1;for(let r=0;r<t.variableNames.length;r++){const o=t.variableNames[r];s[o]=e.getUniformLocation(n,o,p),s[`offset${o}`]=e.getUniformLocation(n,`offset${o}`,p),t.enableShapeUniforms&&(i[`${o}Shape`]=e.getUniformLocation(n,`${o}Shape`,p),a[`${o}TexShape`]=e.getUniformLocation(n,`${o}TexShape`,p))}return t.enableShapeUniforms&&(l=e.getUniformLocation(n,"outShape",p),c=e.getUniformLocation(n,"outShapeStrides",p),u=e.getUniformLocation(n,"outTexShape",p)),t.customUniforms&&t.customUniforms.forEach(((t,r)=>{o[r]=e.getUniformLocation(n,t.name,p)})),{uniformLocations:s,customUniformLocations:o,infLoc:h,nanLoc:d,inShapesLocations:i,inTexShapesLocations:a,outShapeLocation:l,outShapeStridesLocation:c,outTexShapeLocation:u}}function l(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const s=e.logicalShape,i=t[n],a=i.shape;if(!r.D5U.arraysEqual(s,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${a} must match`);if(e.isUniform&&i.isUniform)return;const o=e.texShape,l=i.isUniform?null:i.texData.texShape;if(!r.D5U.arraysEqual(o,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${l} must match`)}))}function u(e,t,n,i,a){t.program.enableShapeUniforms||(l(t.inShapeInfos,n),l([t.outShapeInfo],[i]));const o=i.texData.texture,u=i.texData.texShape;i.texData.isPacked?e.setOutputPackedMatrixTexture(o.texture,u[0],u[1]):e.setOutputMatrixTexture(o.texture,u[0],u[1]),e.setProgram(t.webGLProgram),1===(0,r.OBj)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,i)=>{const a=t.program.variableNames[i],o=t.uniformLocations[a],l=t.uniformLocations[`offset${a}`],u=t.inShapesLocations[`${a}Shape`],c=t.inTexShapesLocations[`${a}TexShape`];if(u){const{uniformShape:r}=s.Tt(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(u,new Int32Array(r));break;case 2:e.gl.uniform2iv(u,new Int32Array(r));break;case 3:e.gl.uniform3iv(u,new Int32Array(r));break;case 4:e.gl.uniform4iv(u,new Int32Array(r))}}if(c&&e.gl.uniform2i(c,n.texData.texShape[0],n.texData.texShape[1]),null!=o)if(n.isUniform)if(r.D5U.sizeFromShape(n.shape)<2)e.gl.uniform1f(o,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(o,t)}else null!=n.texData.slice&&null!=l&&e.gl.uniform1i(l,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,o,i)}));const c=t.outShapeLocation;if(c)switch(i.shape.length){case 1:e.gl.uniform1iv(c,new Int32Array(i.shape));break;case 2:e.gl.uniform2iv(c,new Int32Array(i.shape));break;case 3:e.gl.uniform3iv(c,new Int32Array(i.shape));break;case 4:e.gl.uniform4iv(c,new Int32Array(i.shape))}if(t.outShapeStridesLocation){const n=r.D5U.computeStrides(i.shape);switch(i.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,i.texData.texShape[0],i.texData.texShape[1]),t.program.customUniforms&&a&&t.program.customUniforms.forEach(((n,r)=>{const s=t.customUniformLocations[r],i=a[r];if("float"===n.type)e.gl.uniform1fv(s,i);else if("vec2"===n.type)e.gl.uniform2fv(s,i);else if("vec3"===n.type)e.gl.uniform3fv(s,i);else if("vec4"===n.type)e.gl.uniform4fv(s,i);else if("int"===n.type)e.gl.uniform1iv(s,i);else if("ivec2"===n.type)e.gl.uniform2iv(s,i);else if("ivec3"===n.type)e.gl.uniform3iv(s,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(s,i)}})),e.executeProgram()}function c(e,t,n){let i="";t.concat(n).forEach((t=>{const a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const o=t.texData.texShape,{useSqueezeShape:l,uniformShape:u,keptDims:c}=s.Tt(e.packedInputs,t.shape,o);let h="",d="",p="";if(1===u.length&&e.packedInputs){const e=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];h=`${e[0]>1}_${e[1]>1}`}else if(2!==u.length||e.packedInputs){if(u.length>2&&!e.packedInputs){const e=r.D5U.computeStrides(u);p=`${e[0]===o[1]}_${e[e.length-1]===o[1]}`}}else d=`${u[0]>1}_${u[1]>1}`;const f=t.shape.length,m=2===u.length&&r.D5U.arraysEqual(t.shape,o),g=1===r.D5U.sizeFromShape(t.shape),y=r.backend_util.getBroadcastDims(t.shape,n.shape),x=!e.packedInputs&&f===n.shape.length&&r.D5U.arraysEqual(o,n.texData.texShape),v=e.packedInputs||u.length>2?"":`${o[0]>1}_${o[1]>1}`;i+=`${f}_${x}_${l?c:""}_${u.length}_${g}_${y}_${m}_${h}_${d}_${p}_${v}_${a}`}else{const e=t.isUniform?"uniform":t.texData.texShape;i+=`${t.shape}_${e}_${a}`}}));const a=e.userCode;let o=e.constructor.name;return o+="_"+i+"_"+a+`${(0,r.OBj)().getNumber("WEBGL_VERSION")}`,o}function h(e){return(0,r.OBj)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}},4328:(e,t,n)=>{"use strict";n.r(t),n.d(t,{bindVertexProgramAttributeStreams:()=>w,createBufferFromOutputTexture:()=>T,createFloat16MatrixTexture:()=>f,createFloat16PackedMatrixTexture:()=>b,createFloat32MatrixTexture:()=>d,createIndexBuffer:()=>u,createPackedMatrixTexture:()=>x,createUnsignedBytesMatrixTexture:()=>g,createVertexBuffer:()=>l,createVertexShader:()=>o,downloadByteEncodedFloatMatrixFromOutputTexture:()=>M,downloadFloat32MatrixFromBuffer:()=>E,downloadMatrixFromPackedOutputTexture:()=>A,downloadPackedMatrixFromBuffer:()=>C,getInternalFormatForFloat16MatrixTexture:()=>p,getInternalFormatForFloat16PackedMatrixTexture:()=>v,getInternalFormatForFloat32MatrixTexture:()=>h,getInternalFormatForPackedMatrixTexture:()=>y,getInternalFormatForUnsignedBytesMatrixTexture:()=>m,uploadDenseMatrixToTexture:()=>_,uploadPixelDataToTexture:()=>S});var r=n(6639),s=n(29610),i=n(18378),a=n(91906);function o(e){const t=(0,s.A)(),n=`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`;return a.createVertexShader(e,n)}function l(e){const t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return a.createStaticVertexBuffer(e,t)}function u(e){const t=new Uint16Array([0,1,2,2,1,3]);return a.createStaticIndexBuffer(e,t)}function c(e,t,n,s,i,o){a.validateTextureSize(t,n);const l=a.createTexture(e),u=e.TEXTURE_2D;return a.callAndCheck(e,(()=>e.bindTexture(u,l))),a.callAndCheck(e,(()=>e.texParameteri(u,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),a.callAndCheck(e,(()=>e.texParameteri(u,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),a.callAndCheck(e,(()=>e.texParameteri(u,e.TEXTURE_MIN_FILTER,e.NEAREST))),a.callAndCheck(e,(()=>e.texParameteri(u,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===(0,r.OBj)().getNumber("WEBGL_VERSION")?a.callAndCheck(e,(()=>e.texImage2D(u,0,s,t,n,0,i,o,null))):a.callAndCheck(e,(()=>e.texStorage2D(u,1,s,t,n))),a.callAndCheck(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:l,texShape:[n,t]}}function h(e){return e.internalFormatFloat}function d(e,t,n,r){const[s,a]=i.kk(t,n);return c(e,s,a,h(r),r.textureFormatFloat,e.FLOAT)}function p(e){return e.internalFormatHalfFloat}function f(e,t,n,r){const[s,a]=i.kk(t,n);return c(e,s,a,p(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function m(e){return e.downloadTextureFormat}function g(e,t,n,r){const[s,a]=i.kk(t,n);return c(e,s,a,m(r),e.RGBA,e.UNSIGNED_BYTE)}function y(e){return e.internalFormatPackedFloat}function x(e,t,n,r){const[s,a]=i.qe(t,n);return c(e,s,a,y(r),e.RGBA,e.FLOAT)}function v(e){return e.internalFormatPackedHalfFloat}function b(e,t,n,r){const[s,a]=i.qe(t,n);return c(e,s,a,v(r),e.RGBA,r.textureTypeHalfFloat)}function w(e,t,n){return a.callAndCheck(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),a.bindVertexBufferToProgramAttribute(e,t,"clipSpacePos",n,3,20,0)&&a.bindVertexBufferToProgramAttribute(e,t,"uv",n,2,20,12)}function _(e,t,n,s,i,o){let l,u,c;a.callAndCheck(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),i instanceof Uint8Array?(l=new Uint8Array(n*s*4),u=e.UNSIGNED_BYTE,c=e.RGBA):(l=new Float32Array(n*s*4),u=e.FLOAT,c=o.internalFormatPackedFloat),l.set(i),2===(0,r.OBj)().getNumber("WEBGL_VERSION")?a.callAndCheck(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,s,e.RGBA,u,l))):a.callAndCheck(e,(()=>e.texImage2D(e.TEXTURE_2D,0,c,n,s,0,e.RGBA,u,l))),a.callAndCheck(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function S(e,t,n){a.callAndCheck(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===(0,r.OBj)().getNumber("WEBGL_VERSION")?a.callAndCheck(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):a.callAndCheck(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===(0,r.OBj)().getNumber("WEBGL_VERSION")?a.callAndCheck(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):a.callAndCheck(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),a.callAndCheck(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function T(e,t,n,r){const s=e.createBuffer();a.callAndCheck(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s)));const i=16*t*n;return a.callAndCheck(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,i,e.STREAM_READ))),a.callAndCheck(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),a.callAndCheck(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),s}function E(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}function M(e,t,n,r){const[s,o]=i.kk(t,n),l=new Uint8Array(i.yb(t*n,4));return a.callAndCheck(e,(()=>e.readPixels(0,0,s,o,r.downloadTextureFormat,e.UNSIGNED_BYTE,l))),new Float32Array(l.buffer)}function C(e,t,n,r,s,a,o,l){const u=e,c=new Float32Array(i.Se(a,o));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,c),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),c}function A(e,t,n){const r=new Float32Array(t*n*4);return a.callAndCheck(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}},77129:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var r=n(29610),s=n(16697);class i{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=(0,s.C9)(this.outputShape.length);const{dataFormat:n}=t,i=(0,r.A)(),a="channelsLast"===n,o=a?1:2,l=a?2:3,u=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let c="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)c+=`\n          blockIndex = rc.z + ${t};\n          pos = rc.y + ${e};\n\n          ${u}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${o}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${l}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${c}\n\n        ${i.output} = result;\n      }\n    `}}},7737:(e,t,n)=>{"use strict";n.r(t),n.d(t,{GPGPUContext:()=>r.Af,MathBackendWebGL:()=>r.QC,forceHalfFloat:()=>r.kS,gpgpu_util:()=>r.lz,setWebGLContext:()=>r.nd,version_webgl:()=>r.ic,webgl:()=>r.yO,webgl_util:()=>r.fZ});var r=n(43078);n(70824)},56781:(e,t,n)=>{"use strict";n.d(t,{J:()=>u});var r=n(6639),s=n(48009),i=n(40673),a=n(24622);function o(e,t,n,i=null){let a=t.shape[0],l=t.shape[1];null!=i&&(a=i.shape[0],l=i.shape[1]);const u=r.backend_util.computeOptimalWindowSize(l),c={windowSize:u,inSize:l,batchSize:a,outSize:Math.ceil(l/u)},h=new s.d(c,n,null==i),d=[t];null!=i&&d.push(i);const p=e.runWebGLProgram(h,d,"int32");if(1===p.shape[1])return p;const f=o(e,t,n,p);return e.disposeIntermediateTensorInfo(p),f}function l(e,t,n,s=null){const a=null!=s?s.shape:t.shape,o=a[a.length-1],u=r.backend_util.computeOptimalWindowSize(o),c=new i.t(a,u,n,null==s),h=null==s?[t]:[t,s],d=e.runWebGLProgram(c,h,"int32");if(d.shape.length===t.shape.length){const r=l(e,t,n,d);return e.disposeIntermediateTensorInfo(d),r}return d}function u(e,t,n,s){const i=[n];if(r.backend_util.assertAxesAreInnerMostDims("arg"+s.charAt(0).toUpperCase()+s.slice(1),i,t.shape.length),!(0,r.OBj)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],l=e.texData.get(t.dataId);let u=t;null!==l&&l.isPacked&&(u=e.unpackTensor(t),n.push(u));const[c,h]=r.backend_util.computeOutAndReduceShapes(u.shape,i),d=r.D5U.sizeFromShape(h),p=(0,a.X)({inputs:{x:u},backend:e,attrs:{shape:[-1,d]}});n.push(p);const f=o(e,p,s);n.push(f);const m=(0,a.X)({inputs:{x:f},backend:e,attrs:{shape:c}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),m}return l(e,t,s)}},22842:(e,t,n)=>{"use strict";n.d(t,{e:()=>i});var r=n(84518);const s="return float(int(x));";function i(e,t){const n=new r.l(e.shape,s),i=t.runWebGLProgram(n,[e],"int32");return{dataId:i.dataId,shape:i.shape,dtype:i.dtype}}},15367:(e,t,n)=>{"use strict";n.d(t,{AJ:()=>d,E6:()=>h,g8:()=>f,js:()=>p});var r=n(6639),s=n(84039),i=n(14488),a=n(56515),o=n(1736),l=n(73525),u=n(84518),c=n(29365);const h="if (isnan(x)) return x;";function d({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:s}){return({inputs:i,backend:a})=>{const{x:o}=i,l=a,h=s||o.dtype;if(l.shouldExecuteOnCPU([o])&&null!=n){const e=l.texData.get(o.dataId),t=n(e.values,h);return l.makeTensorInfo(o.shape,h,t)}let d;return d=(0,r.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new c.cc(o.shape,t):new u.l(o.shape,e),l.runWebGLProgram(d,[o],h)}}function p({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:o=!1,cpuKernelImpl:l,dtype:u}){return({inputs:c,backend:h})=>{const{a:d,b:p}=c,f=h;if(o&&"complex64"===d.dtype){const t=f.texData.get(d.dataId),n=f.texData.get(p.dataId),[i,o]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,i]=t,a={dataId:n.dataId,dtype:n.dtype,shape:d.shape},o={dataId:i.dataId,dtype:i.dtype,shape:p.shape},l=new s.t6(e,d.shape,p.shape);return f.runWebGLProgram(l,[a,o],(0,r.x8V)(n.dtype,i.dtype))})),l=(0,a.P)({inputs:{real:i,imag:o},backend:f});return f.disposeIntermediateTensorInfo(i),f.disposeIntermediateTensorInfo(o),l}const m=u||(0,r.x8V)(d.dtype,p.dtype);if(("string"===d.dtype||"string"===p.dtype||f.shouldExecuteOnCPU([d,p]))&&null!=l){const e=f.texData.get(d.dataId).values,t=f.texData.get(p.dataId).values,n="string"===d.dtype?r.backend_util.fromUint8ToStringArray(e):e,s="string"===d.dtype?r.backend_util.fromUint8ToStringArray(t):t,[i,a]=l(d.shape,p.shape,n,s,m),o=f.makeTensorInfo(a,m);return f.texData.get(o.dataId).values=i,o}let g;return g=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new i.E2(t,d.shape,p.shape,n):new s.t6(e,d.shape,p.shape),f.runWebGLProgram(g,[d,p],m)}}function f(e,t=!1){if("linear"===e)return t?c.t$:u.t$;if("relu"===e)return t?c.RX:u.RX;if("elu"===e)return t?c.Cv:u.Cv;if("relu6"===e)return t?c.eW:u.eW;if("prelu"===e)return t?l.VO:l.pU;if("leakyrelu"===e)return t?o.s4:o.oA;if("sigmoid"===e)return t?c.Tq:u.Tq;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}},98259:(e,t,n)=>{"use strict";n.d(t,{u:()=>a});var r=n(6639),s=n(13315),i=n(24196);function a(e,t,n,a){const o=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],s=r.backend_util.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return t}(e.shape);let l=e;for(let r=0;r<o.length;r++){const{inSize:u,windowSize:c,outSize:h}=o[r];let d,p;d="mean"===n?0===r?new s.h({windowSize:c,inSize:u,batchSize:e.shape[0],outSize:h},u):new s.h({windowSize:c,inSize:u,batchSize:e.shape[0],outSize:h}):new i.f({windowSize:c,inSize:u,batchSize:e.shape[0],outSize:h},n),p=l,l=a.runWebGLProgram(d,[l],t),p.dataId!==e.dataId&&a.disposeIntermediateTensorInfo(p)}return l}},5314:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var r=n(28831),s=n(91906);function i(e,t,n){const i=[(0,s.getBatchDim)(e.shape),...(0,s.getRowsCols)(e.shape)],a={dtype:e.dtype,shape:i,dataId:e.dataId},o=[(0,s.getBatchDim)(t),...(0,s.getRowsCols)(t)],l=new r.v(o,i),u=[i],c=n.runWebGLProgram(l,[a],e.dtype,u,!0);return{dataId:c.dataId,shape:t,dtype:c.dtype}}},64272:(e,t,n)=>{"use strict";n.d(t,{$O:()=>_,$j:()=>V,$u:()=>z,A0:()=>G,AR:()=>B,B_:()=>g,Bk:()=>U,Bo:()=>M,CJ:()=>O,CV:()=>K,Fv:()=>q,KX:()=>j,LS:()=>$,MZ:()=>p,PQ:()=>b,Qs:()=>I,Rn:()=>v,Sd:()=>w,St:()=>N,TD:()=>f,Tg:()=>A,Th:()=>E,UN:()=>D,X8:()=>F,Y1:()=>L,_9:()=>W,aX:()=>h,cK:()=>s,cZ:()=>C,cm:()=>o,cx:()=>a,fy:()=>R,gv:()=>c,hO:()=>k,ji:()=>y,kI:()=>H,kY:()=>x,m$:()=>m,n7:()=>u,nL:()=>S,nT:()=>P,oC:()=>X,pk:()=>l,qO:()=>i,r:()=>T,tx:()=>d});var r=n(45226);const{addImpl:s,bincountImpl:i,bincountReduceImpl:a,castImpl:o,ceilImpl:l,concatImpl:u,equalImpl:c,expImpl:h,expm1Impl:d,floorImpl:p,gatherNdImpl:f,gatherV2Impl:m,greaterImpl:g,greaterEqualImpl:y,lessImpl:x,lessEqualImpl:v,linSpaceImpl:b,logImpl:w,maxImpl:_,maximumImpl:S,minimumImpl:T,multiplyImpl:E,negImpl:M,notEqualImpl:C,prodImpl:A,raggedGatherImpl:I,raggedTensorToTensorImpl:R,rangeImpl:k,rsqrtImpl:N,scatterImpl:L,sigmoidImpl:D,simpleAbsImpl:O,sliceImpl:P,sparseFillEmptyRowsImpl:F,sparseReshapeImpl:$,sparseSegmentReductionImpl:B,sqrtImpl:U,stridedSliceImpl:z,stringNGramsImpl:V,stringSplitImpl:G,stringToHashBucketFastImpl:W,subImpl:H,tileImpl:j,topKImpl:X,transposeImpl:q,uniqueImpl:K}=r},55512:(e,t,n)=>{"use strict";n.d(t,{f:()=>l});var r=n(6639),s=n(64272),i=n(84518),a=n(29365);const o="return abs(x);",l={kernelName:r.SYM,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:l}=t;if(n.shouldExecuteOnCPU([l])&&"complex64"!==l.dtype){const e=n.texData.get(l.dataId),t=(0,s.CJ)(e.values);return n.makeTensorInfo(l.shape,l.dtype,t)}let u;return u=(0,r.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new a.cc(l.shape,o):new i.l(l.shape,o),n.runWebGLProgram(u,[l],l.dtype)}}},4998:(e,t,n)=>{"use strict";n.d(t,{r:()=>o});var r=n(6639),s=n(15367);const i=n(84518).D1+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n",a=(0,s.AJ)({opSnippet:i}),o={kernelName:r.VGw,backendName:"webgl",kernelFunc:a}},98200:(e,t,n)=>{"use strict";n.d(t,{v:()=>o});var r=n(6639),s=n(15367);const i=n(84518).D1+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));",a=(0,s.AJ)({opSnippet:i}),o={kernelName:r.SpW,backendName:"webgl",kernelFunc:a}},77763:(e,t,n)=>{"use strict";n.d(t,{j:()=>l});var r=n(6639),s=n(15367),i=n(64272);const a="return a + b;",o=(0,s.js)({opSnippet:a,packedOpSnippet:a,supportsComplex:!0,cpuKernelImpl:i.cK}),l={kernelName:r.mm_,backendName:"webgl",kernelFunc:o}},16263:(e,t,n)=>{"use strict";n.d(t,{_:()=>o});var r=n(6639),s=n(56392),i=n(47340),a=n(18955);const o={kernelName:r.Xze,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:o}=t,l=n;if(1===l.length)return(0,a.y)({inputs:{x:l[0]},backend:o});if(l.length>(0,r.OBj)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(l.length/2),n=e({inputs:l.slice(0,t),backend:o}),r=e({inputs:l.slice(t),backend:o});return e({inputs:[n,r],backend:o})}const u=l.map((e=>e.dtype)).reduce(((e,t)=>(0,r.x8V)(e,t))),c=l.map((e=>e.shape)),h=(0,r.OBj)().getBool("WEBGL_PACK")?new i.a(l[0].shape,c):new s.p(l[0].shape,c);return o.runWebGLProgram(h,l,u)}}},67923:(e,t,n)=>{"use strict";n.d(t,{O:()=>o});var r=n(6639),s=n(98259),i=n(24622),a=n(72207);const o={kernelName:r.oT6,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:l}=t,{axis:u,keepDims:c}=o,h=l.shape.length,d=r.D5U.parseAxisParam(u,l.shape);let p=d;const f=r.backend_util.getAxesPermutation(p,h);let m=l;null!=f&&(m=(0,a.p)({inputs:{x:l},backend:n,attrs:{perm:f}}),p=r.backend_util.getInnerMostAxes(p.length,h)),r.backend_util.assertAxesAreInnerMostDims("all",p,h);const[g,y]=r.backend_util.computeOutAndReduceShapes(m.shape,p),x=r.D5U.sizeFromShape(y),v=(0,i.X)({inputs:{x:m},backend:n,attrs:{shape:[-1,x]}}),b=(0,s.u)(v,v.dtype,"all",n);let w;if(c){const e=r.backend_util.expandShapeToKeepDim(g,d);w=(0,i.X)({inputs:{x:b},backend:n,attrs:{shape:e}})}else w=(0,i.X)({inputs:{x:b},backend:n,attrs:{shape:g}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(b),null!=f&&n.disposeIntermediateTensorInfo(m),w}}},48344:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var r=n(6639),s=n(98259),i=n(24622),a=n(72207);const o={kernelName:r.IKK,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:l}=t,{axis:u,keepDims:c}=o,h=l.shape.length,d=r.D5U.parseAxisParam(u,l.shape);let p=d;const f=r.backend_util.getAxesPermutation(p,h);let m=l;null!=f&&(m=(0,a.p)({inputs:{x:l},backend:n,attrs:{perm:f}}),p=r.backend_util.getInnerMostAxes(p.length,h)),r.backend_util.assertAxesAreInnerMostDims("any",p,h);const[g,y]=r.backend_util.computeOutAndReduceShapes(m.shape,p),x=r.D5U.sizeFromShape(y),v=(0,i.X)({inputs:{x:m},backend:n,attrs:{shape:[-1,x]}}),b=(0,s.u)(v,v.dtype,"any",n);let w;if(c){const e=r.backend_util.expandShapeToKeepDim(g,d);w=(0,i.X)({inputs:{x:b},backend:n,attrs:{shape:e}})}else w=(0,i.X)({inputs:{x:b},backend:n,attrs:{shape:g}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(b),null!=f&&n.disposeIntermediateTensorInfo(m),w}}},79646:(e,t,n)=>{"use strict";n.d(t,{d:()=>a});var r=n(6639),s=n(56781),i=n(72207);const a={kernelName:r.sJF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{axis:l}=a;let u=r.D5U.parseAxisParam(l,o.shape);const c=r.backend_util.getAxesPermutation(u,o.shape.length);let h=o;const d=[];null!=c&&(h=(0,i.p)({inputs:{x:o},backend:n,attrs:{perm:c}}),d.push(h),u=r.backend_util.getInnerMostAxes(u.length,h.shape.length)),r.backend_util.assertAxesAreInnerMostDims("argMax",[u[0]],h.shape.length);const p=(0,s.J)(n,h,u[0],"max");return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}}},44612:(e,t,n)=>{"use strict";n.d(t,{O:()=>a});var r=n(6639),s=n(56781),i=n(72207);const a={kernelName:r.aJk,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{axis:l}=a;let u=r.D5U.parseAxisParam(l,o.shape);const c=r.backend_util.getAxesPermutation(u,o.shape.length);let h=o;const d=[];null!=c&&(h=(0,i.p)({inputs:{x:o},backend:n,attrs:{perm:c}}),d.push(h),u=r.backend_util.getInnerMostAxes(u.length,h.shape.length)),r.backend_util.assertAxesAreInnerMostDims("argMin",[u[0]],h.shape.length);const p=(0,s.J)(n,h,u[0],"min");return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}}},58088:(e,t,n)=>{"use strict";n.d(t,{h:()=>o});var r=n(6639),s=n(15367);const i=n(84518).D1+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n",a=(0,s.AJ)({opSnippet:i}),o={kernelName:r.M2y,backendName:"webgl",kernelFunc:a}},56604:(e,t,n)=>{"use strict";n.d(t,{W:()=>o});var r=n(6639),s=n(15367);const i=n(84518).D1+"return log(x + sqrt(x * x + 1.0));",a=(0,s.AJ)({opSnippet:i}),o={kernelName:r.qw7,backendName:"webgl",kernelFunc:a}},76505:(e,t,n)=>{"use strict";n.d(t,{E:()=>o});var r=n(6639),s=n(15367);const i=n(84518).D1+"\n  return atan(x);\n",a=(0,s.AJ)({opSnippet:i}),o={kernelName:r.jMg,backendName:"webgl",kernelFunc:a}},47729:(e,t,n)=>{"use strict";n.d(t,{t:()=>c});var r=n(6639),s=n(84039),i=n(14488),a=n(15367);const o=s.D1+"\n  return atan(a, b);\n",l="\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+i.my+"\n  return result;\n",u=(0,a.js)({opSnippet:o,packedOpSnippet:l}),c={kernelName:r.QCc,backendName:"webgl",kernelFunc:u}},69179:(e,t,n)=>{"use strict";n.d(t,{B:()=>o});var r=n(6639),s=n(15367);const i=n(84518).D1+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;",a=(0,s.AJ)({opSnippet:i}),o={kernelName:r.Oyi,backendName:"webgl",kernelFunc:a}},38731:(e,t,n)=>{"use strict";n.d(t,{U:()=>o});var r=n(6639),s=n(90789),i=n(91906),a=n(18955);const o={kernelName:r.JhU,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:l}=t;(0,i.assertNotComplex)(l,"avgPool");const{filterSize:u,strides:c,pad:h,dimRoundingMode:d}=o;r.D5U.assert(r.backend_util.eitherStridesOrDilationsAreOne(c,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${c} and dilations '1'`));const p=r.backend_util.computePool2DInfo(l.shape,u,c,1,h,d);if(1===p.filterWidth&&1===p.filterHeight&&r.D5U.arraysEqual(p.inShape,p.outShape))return(0,a.y)({inputs:{x:l},backend:n});const f=new s.n(p,"avg",!1);return n.runWebGLProgram(f,[l],"float32")}}},27878:(e,t,n)=>{"use strict";n.d(t,{z:()=>i});var r=n(6639),s=n(90789);const i={kernelName:r._k9,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:a}=t,{filterSize:o,strides:l,pad:u,dimRoundingMode:c,dataFormat:h}=i,d=r.backend_util.computePool3DInfo(a.shape,o,l,[1,1,1],u,c,h),p=new s.I(d,"avg",!1);return n.runWebGLProgram(p,[a],"float32")}}},71230:(e,t,n)=>{"use strict";n.d(t,{Y:()=>i});var r=n(6639),s=n(692);const i={kernelName:r.IMb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{dy:a,input:o}=t,l=o,{filterSize:u,strides:c,pad:h,dimRoundingMode:d}=i,p=r.backend_util.computePool3DInfo(l.shape,u,c,[1,1,1],h,d),f=new s.z(p);return n.runWebGLProgram(f,[a],l.dtype)}}},48717:(e,t,n)=>{"use strict";n.d(t,{v:()=>a});var r=n(6639),s=n(692),i=n(91906);const a={kernelName:r.ROF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:o,input:l}=t,u=l;(0,i.assertNotComplex)([o,l],"avgPoolGrad");const{filterSize:c,strides:h,pad:d}=a,p=r.backend_util.computePool2DInfo(u.shape,c,h,1,d),f=new s.o(p);return n.runWebGLProgram(f,[o],u.dtype)}}},44246:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var r=n(6639),s=n(28163);const i={kernelName:r.XLW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:i,b:a}=t,{transposeA:o,transposeB:l}=r;return(0,s.r)({a:i,b:a,transposeA:o,transposeB:l,backend:n})}}},28163:(e,t,n)=>{"use strict";n.d(t,{R:()=>c,r:()=>h});var r=n(6639),s=n(15367),i=n(53100),a=n(52038),o=n(24622),l=n(47915),u=n(72207);const c=1e3;function h({a:e,b:t,transposeA:n,transposeB:h,backend:d,bias:p=null,preluActivationWeights:f=null,leakyreluAlpha:m=0,activation:g=null}){const y=e.shape.length,x=t.shape.length,v=n?e.shape[y-2]:e.shape[y-1],b=h?t.shape[x-1]:t.shape[x-2],w=n?e.shape[y-1]:e.shape[y-2],_=h?t.shape[x-2]:t.shape[x-1],S=e.shape.slice(0,-2),T=t.shape.slice(0,-2),E=r.D5U.sizeFromShape(S),M=r.D5U.sizeFromShape(T),C=r.Jyw.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([w,_]);r.D5U.assert(v===b,(()=>`Error in matMul: inner shapes (${v}) and (${b}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${h} must match.`));const A=n?[E,v,w]:[E,w,v],I=h?[M,_,b]:[M,b,_],R=(0,o.X)({inputs:{x:e},backend:d,attrs:{shape:A}}),k=(0,o.X)({inputs:{x:t},backend:d,attrs:{shape:I}}),N=[R,k],L=Math.max(E,M),D=n?R.shape[1]:R.shape[2],O=null!=p,P=null!=f,F="leakyrelu"===g,$=null!=g?(0,s.g8)(g,!0):null;let B;if((1===w||1===_)&&D>c&&!1===(O||P||F||null!=$)){let e=R,t=k;n&&(e=(0,u.p)({inputs:{x:R},backend:d,attrs:{perm:[0,2,1]}}),N.push(e)),h&&(t=(0,u.p)({inputs:{x:k},backend:d,attrs:{perm:[0,2,1]}}),N.push(t));const r=1===_;let s=e;1!==_&&(s=(0,o.X)({inputs:{x:e},backend:d,attrs:{shape:[L,D,1]}}),N.push(s));const i=1===_?2:1;let c=t;r&&(c=(0,o.X)({inputs:{x:t},backend:d,attrs:{shape:[L,1,D]}}),N.push(c));const p=(0,a.J)({inputs:{a:s,b:c},backend:d});B=(0,l.S)({inputs:{x:p},backend:d,attrs:{axis:i,keepDims:!0}}),N.push(p)}else{const s=(0,r.x8V)(e.dtype,t.dtype),a=new i.N(A,I,[L,w,_],n,h,O,$,P,F),o=[R,k];if(null!=p&&o.push(p),P&&o.push(f),F){const e=d.makeTensorInfo([],"float32",r.D5U.createScalarValue(m,"float32"));o.push(e),N.push(e)}B=d.runWebGLProgram(a,o,s)}const U=(0,o.X)({inputs:{x:B},backend:d,attrs:{shape:C}});N.push(B);for(const e of N)d.disposeIntermediateTensorInfo(e);return U}},7632:(e,t,n)=>{"use strict";n.d(t,{C:()=>a});var r=n(6639),s=n(29476),i=n(87373);const a={kernelName:r.sHE,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,mean:o,variance:l,offset:u,scale:c}=e;r.D5U.assert(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),r.D5U.assert(null==u||o.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),r.D5U.assert(null==c||o.shape.length===c.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:h}=n;null==h&&(h=.001);const d=[a,o,l];let p=null;null!=u&&(p=u.shape,d.push(u));let f=null;null!=c&&(f=c.shape,d.push(c));const m=(0,r.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new i.x(a.shape,o.shape,l.shape,p,f,h):new s.w(a.shape,o.shape,l.shape,p,f,h);return t.runWebGLProgram(m,d,d[0].dtype)}}},21346:(e,t,n)=>{"use strict";n.d(t,{g:()=>o});var r=n(6639),s=n(24622),i=n(10623),a=n(72207);const o={kernelName:r.zws,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:o}=e,{x:l}=t,{blockShape:u,crops:c}=o;r.D5U.assert(l.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const h=u.reduce(((e,t)=>e*t)),d=r.backend_util.getReshaped(l.shape,u,h),p=r.backend_util.getPermuted(d.length,u.length),f=r.backend_util.getReshapedPermuted(l.shape,u,h),m=r.backend_util.getSliceBeginCoords(c,u.length),g=r.backend_util.getSliceSize(f,c,u.length),y=[],x=(0,s.X)({inputs:{x:l},backend:n,attrs:{shape:d}}),v=(0,a.p)({inputs:{x},backend:n,attrs:{perm:p}}),b=(0,s.X)({inputs:{x:v},backend:n,attrs:{shape:f}}),w=(0,i.t)({inputs:{x:b},backend:n,attrs:{begin:m,size:g}});return y.push(x),y.push(v),y.push(b),y.forEach((e=>n.disposeIntermediateTensorInfo(e))),w}}},10802:(e,t,n)=>{"use strict";n.d(t,{e:()=>i});var r=n(6639),s=n(64272);const i={kernelName:r.zvY,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,weights:a}=t,{size:o}=r,l=n.readSync(i.dataId),u=n.readSync(a.dataId),c=(0,s.qO)(l,u,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,c)}}},37833:(e,t,n)=>{"use strict";n.d(t,{u:()=>s});var r=n(6639);const s={kernelName:r.eEB,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:s,s1:i}=t,a=n.readSync(s.dataId),o=n.readSync(i.dataId),l=r.backend_util.assertAndGetBroadcastShape(Array.from(a),Array.from(o));return n.makeTensorInfo([l.length],"int32",Int32Array.from(l))}}},58446:(e,t,n)=>{"use strict";n.d(t,{M:()=>c});var r=n(6639),s=n(64272),i=n(56515),a=n(18955),o=n(24299),l=n(50852),u=n(22842);const c={kernelName:r.RFZ,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:c,attrs:h}=t,{x:d}=n,{dtype:p}=h;if("complex64"===p){if("complex64"===d.dtype)return(0,a.y)({inputs:{x:d},backend:c});const t=r.lls(d.shape),n=e({inputs:{x:d},backend:c,attrs:{dtype:"float32"}}),s=(0,i.P)({inputs:{real:n,imag:t},backend:c});return t.dispose(),c.disposeIntermediateTensorInfo(n),s}if("complex64"===d.dtype){const t=(0,l.k)({inputs:{input:d},backend:c}),n=e({inputs:{x:t},backend:c,attrs:{dtype:p}});return c.disposeIntermediateTensorInfo(t),n}if(!r.D5U.hasEncodingLoss(d.dtype,p)){const e=(0,a.y)({inputs:{x:d},backend:c});return{dataId:e.dataId,shape:e.shape,dtype:p}}if(c.shouldExecuteOnCPU([d])){const e=c.texData.get(d.dataId).values,[t,n,r]=(0,s.cm)(e,d.shape,d.dtype,p);return c.makeTensorInfo(t,n,r)}if("int32"===p)return(0,u.e)(d,c);if("bool"===p){const e=c.makeTensorInfo([],"bool",r.D5U.getTypedArrayFromDType("bool",1)),t={a:d,b:e},n=(0,o.Q)({inputs:t,backend:c});return c.disposeIntermediateTensorInfo(e),n}throw new Error(`Error in Cast: failed to cast ${d.dtype} to ${p}`)}}},68291:(e,t,n)=>{"use strict";n.d(t,{y:()=>l});var r=n(6639),s=n(15367),i=n(64272);const a="return ceil(x);",o=(0,s.AJ)({opSnippet:a,packedOpSnippet:a,cpuKernelImpl:i.pk}),l={kernelName:r.gJX,backendName:"webgl",kernelFunc:o}},54712:(e,t,n)=>{"use strict";n.d(t,{w:()=>a});var r=n(6639),s=n(90150),i=n(96521);const a={kernelName:r.xnO,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{clipValueMin:l,clipValueMax:u}=a;let c;c=(0,r.OBj)().getBool("WEBGL_PACK_CLIP")?new i.V(o.shape):new s.v(o.shape);const h=[[l],[u]];return n.runWebGLProgram(c,[o],o.dtype,h)}}},56515:(e,t,n)=>{"use strict";n.d(t,{P:()=>i,z:()=>a});var r=n(6639),s=n(18955);function i(e){const{inputs:t,backend:n}=e,{real:r,imag:i}=t,a=n.makeTensorInfo(r.shape,"complex64"),o=n.texData.get(a.dataId),l=(0,s.y)({inputs:{x:r},backend:n}),u=(0,s.y)({inputs:{x:i},backend:n});return o.complexTensorInfos={real:l,imag:u},a}const a={kernelName:r.Zz9,backendName:"webgl",kernelFunc:i}},55876:(e,t,n)=>{"use strict";n.d(t,{s:()=>a});var r=n(6639),s=n(82314);function i(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const a={kernelName:r.yj2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),o=new s.V(r.shape),l=[i(r,a.complexTensorInfos.real),i(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(o,l,l[0].dtype)}}},40942:(e,t,n)=>{"use strict";n.d(t,{X:()=>o,z:()=>a});var r=n(6639),s=n(8462),i=n(18955);function a(e){const{inputs:t,backend:n,attrs:a}=e,{axis:o}=a,l=r.D5U.parseAxisParam(o,t[0].shape)[0],u=t.map((e=>e.shape));r.backend_util.assertParamsConsistent(u,l);const c=r.backend_util.computeOutShape(t.map((e=>e.shape)),l);if(0===r.D5U.sizeFromShape(c))return n.makeTensorInfo(c,t[0].dtype,[]);const h=t.filter((e=>r.D5U.sizeFromShape(e.shape)>0));return 1===h.length?(0,i.y)({inputs:{x:h[0]},backend:n}):(0,s.j)(h,l,n)}const o={kernelName:r.Eh3,backendName:"webgl",kernelFunc:a}},8462:(e,t,n)=>{"use strict";n.d(t,{j:()=>h});var r=n(6639),s=n(47494),i=n(47625),a=n(64272),o=n(56515),l=n(55145),u=n(50852),c=n(24622);function h(e,t,n){const d=e[0].dtype;if("complex64"===d){const r=e.map((e=>(0,u.k)({inputs:{input:e},backend:n}))),s=e.map((e=>(0,l.a)({inputs:{input:e},backend:n}))),i=h(r,t,n),a=h(s,t,n),c=(0,o.P)({inputs:{real:i,imag:a},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),s.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),c}let p=n.shouldExecuteOnCPU(e);if("string"===d&&(p=!0),p){const s=e.map((e=>{const s=[-1,r.D5U.sizeFromShape(e.shape.slice(t))];return(0,c.X)({inputs:{x:e},backend:n,attrs:{shape:s}})})),i=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=r.backend_util.computeOutShape(s.map((e=>e.shape)),1),l=1===s[0].shape[0],u=(0,a.n7)(i,o,d,l),h=r.backend_util.computeOutShape(e.map((e=>e.shape)),t),p=n.makeTensorInfo(h,d,u);return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}const f=(0,r.OBj)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(e.length>f){const r=[];for(let s=0;s<e.length;s+=f){const i=e.slice(s,s+f);r.push(h(i,t,n))}const s=h(r,t,n);for(const e of r)n.disposeIntermediateTensorInfo(e);return s}if((0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const r=new i.R(e.map((e=>e.shape)),t);return n.runWebGLProgram(r,e,d)}const{tensors2D:m,outShape:g}=function(e,t,n){const s=r.backend_util.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>(0,c.X)({inputs:{x:e},attrs:{shape:[-1,r.D5U.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:s}}(e,t,n),y=new s.Z(m.map((e=>e.shape))),x=n.runWebGLProgram(y,m,d);m.forEach((e=>n.disposeIntermediateTensorInfo(e)));const v=(0,c.X)({inputs:{x},attrs:{shape:g},backend:n});return n.disposeIntermediateTensorInfo(x),v}},20946:(e,t,n)=>{"use strict";n.d(t,{o:()=>l});var r=n(6639),s=n(18954),i=n(92734),a=n(8328),o=n(24622);const l={kernelName:r.mhS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:l}=e,{x:u,filter:c}=t,{strides:h,pad:d,dataFormat:p,dilations:f,dimRoundingMode:m}=l,g=r.backend_util.convertConv2DDataFormat(p),y=r.backend_util.computeConv2DInfo(u.shape,c.shape,h,f,d,m,!1,g);let x;if(1!==y.filterHeight||1!==y.filterWidth||1!==y.dilationHeight||1!==y.dilationWidth||1!==y.strideHeight||1!==y.strideWidth||"SAME"!==y.padInfo.type&&"VALID"!==y.padInfo.type)if(y.strideWidth<=2&&"channelsLast"===g&&(0,r.OBj)().getBool("WEBGL_EXP_CONV")){const e=new i.i(y),t=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]];x=n.runWebGLProgram(e,[u,c],"float32",t)}else if((0,r.OBj)().getBool("WEBGL_CONV_IM2COL"))x=(0,a.Y)({x:u,filter:c,convInfo:y,backend:n});else{const e=new s.I(y);x=n.runWebGLProgram(e,[u,c],"float32")}else x=(0,a.n)({x:u,filter:c,convInfo:y,backend:n});const v=(0,o.X)({inputs:{x},backend:n,attrs:{shape:y.outShape}});return n.disposeIntermediateTensorInfo(x),v}}},72728:(e,t,n)=>{"use strict";n.d(t,{d:()=>i});var r=n(6639),s=n(90301);const i={kernelName:r.wUP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:a,dy:o}=t,{strides:l,pad:u,dataFormat:c,dimRoundingMode:h,filterShape:d}=i,p=r.backend_util.convertConv2DDataFormat(c),f=r.backend_util.computeConv2DInfo(a.shape,d,l,1,u,h,!1,p),m=new s.Ng(f);return n.runWebGLProgram(m,[a,o],"float32")}}},52596:(e,t,n)=>{"use strict";n.d(t,{g:()=>i});var r=n(6639),s=n(90301);const i={kernelName:r.wm,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{dy:a,filter:o}=t,{inputShape:l,strides:u,pad:c,dataFormat:h,dimRoundingMode:d}=i,p=r.backend_util.convertConv2DDataFormat(h),f=r.backend_util.computeConv2DInfo(l,o.shape,u,1,c,d,!1,p),m=new s.P2(f);return n.runWebGLProgram(m,[a,o],"float32")}}},8328:(e,t,n)=>{"use strict";n.d(t,{Y:()=>p,n:()=>d});var r=n(6639),s=n(77129),i=n(15367),a=n(53100),o=n(91906),l=n(28163),u=n(18955),c=n(24622);function h(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function d({x:e,filter:t,convInfo:n,backend:s,bias:i=null,preluActivationWeights:a=null,leakyreluAlpha:d=0,activation:p=null}){const f=e.shape,m=s.texData.get(e.dataId),g=n.inChannels,y=f[0]*f[1]*f[2],x=n.outChannels,v="channelsLast"===n.dataFormat;let b;const w=[];if(null!=a){const e=h(a.shape,v);null!=e&&(a=(0,c.X)({inputs:{x:a},backend:s,attrs:{shape:e}}),w.push(a))}if(null!=i){const e=h(i.shape,v);null!=e&&(i=(0,c.X)({inputs:{x:i},backend:s,attrs:{shape:e}}),w.push(i))}if((1!==y&&1!==x||!(g>l.R))&&m.isPacked&&v&&null!=m.texture&&f[2]%2!=0&&r.D5U.arraysEqual(m.shape.slice(-3),f.slice(-3))){const h=f[0]*f[1]*(f[2]+1),g={dataId:e.dataId,shape:[1,h,n.inChannels],dtype:e.dtype},y=m.shape;m.shape=m.shape.slice(),m.shape[m.shape.length-2]++,r.D5U.assert(o.isReshapeFree(m.shape,g.shape),(()=>`packed reshape ${m.shape} to ${g.shape} isn't free`));const x=(0,c.X)({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});w.push(x);const v=(0,l.r)({a:g,b:x,backend:s,transposeA:!1,transposeB:!1,bias:i,activation:p,preluActivationWeights:a,leakyreluAlpha:d}),_=s.texData.get(v.dataId);r.D5U.assert(_.isPacked,(()=>"batchMatMul result is expected to be packed")),m.shape=y,_.shape=n.outShape,b=(0,u.y)({inputs:{x:v},backend:s}),b.shape=n.outShape,w.push(v)}else{const r=n.outHeight*n.outWidth,o=(0,c.X)({inputs:{x:e},backend:s,attrs:{shape:v?[n.batchSize,r,n.inChannels]:[n.batchSize,n.inChannels,r]}}),u=(0,c.X)({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=(0,l.r)({a:v?o:u,b:v?u:o,transposeA:!v,transposeB:!1,backend:s,bias:i,activation:p,preluActivationWeights:a,leakyreluAlpha:d});b=(0,c.X)({inputs:{x:h},backend:s,attrs:{shape:n.outShape}}),w.push(o),w.push(u),w.push(h)}for(const e of w)s.disposeIntermediateTensorInfo(e);return b}function p({x:e,filter:t,convInfo:n,backend:o,bias:l=null,preluActivationWeights:u=null,leakyreluAlpha:d=0,activation:p=null}){const{filterWidth:f,filterHeight:m,inChannels:g,outWidth:y,outHeight:x,dataFormat:v}=n,b="channelsLast"===v,w=f*m*g,_=x*y,S=[n.batchSize,w,_],T=[];if(null!=u){const e=h(u.shape,b);null!=e&&(u=(0,c.X)({inputs:{x:u},backend:o,attrs:{shape:e}}),T.push(u))}if(null!=l){const e=h(l.shape,b);null!=e&&(l=(0,c.X)({inputs:{x:l},backend:o,attrs:{shape:e}}),T.push(l))}const E=(0,c.X)({inputs:{x:t},backend:o,attrs:{shape:[1,w,r.D5U.sizeFromShape(t.shape)/w]}});T.push(E);const M=new s.l(S,n),C=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],A=o.runWebGLProgram(M,[e],"float32",C),I=(0,c.X)({inputs:{x:A},backend:o,attrs:{shape:S}});T.push(A),T.push(I);const R=null!=l,k=null!=u,N="leakyrelu"===p,L=p?(0,i.g8)(p,!0):null,D=new a.N(b?I.shape:E.shape,b?E.shape:I.shape,b?[n.batchSize,_,n.outChannels]:[n.batchSize,n.outChannels,_],!0,!1,R,L,k,N),O=b?[I,E]:[E,I];if(l&&O.push(l),k&&O.push(u),N){const e=o.makeTensorInfo([],"float32",r.D5U.createScalarValue(d,"float32"));O.push(e),T.push(e)}const P=o.runWebGLProgram(D,O,"float32"),F=(0,c.X)({inputs:{x:P},backend:o,attrs:{shape:n.outShape}});T.push(P);for(const e of T)o.disposeIntermediateTensorInfo(e);return F}},73834:(e,t,n)=>{"use strict";n.d(t,{L:()=>i});var r=n(6639),s=n(18954);const i={kernelName:r.x12,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:a,filter:o}=t,{strides:l,pad:u,dilations:c}=i,h=r.backend_util.computeConv3DInfo(a.shape,o.shape,l,c,u),d=new s.S(h);return n.runWebGLProgram(d,[a,o],"float32")}}},36027:(e,t,n)=>{"use strict";n.d(t,{$:()=>i});var r=n(6639),s=n(90301);const i={kernelName:r.o2y,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:a,dy:o}=t,{strides:l,pad:u,filterShape:c}=i,h=r.backend_util.computeConv3DInfo(a.shape,c,l,1,u),d=new s.FF(h);return n.runWebGLProgram(d,[a,o],"float32")}}},80159:(e,t,n)=>{"use strict";n.d(t,{i:()=>i});var r=n(6639),s=n(90301);const i={kernelName:r.ik2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{dy:a,filter:o}=t,{pad:l,strides:u,inputShape:c}=i,h=r.backend_util.computeConv3DInfo(c,o.shape,u,1,l),d=new s.cc(h);return n.runWebGLProgram(d,[a,o],"float32")}}},40526:(e,t,n)=>{"use strict";n.d(t,{D:()=>o});var r=n(6639),s=n(15367);const i=s.E6+"\n  return cos(x);\n",a=(0,s.AJ)({opSnippet:i}),o={kernelName:r.mc4,backendName:"webgl",kernelFunc:a}},19354:(e,t,n)=>{"use strict";n.d(t,{q:()=>i});var r=n(6639);const s=(0,n(15367).AJ)({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),i={kernelName:r.TR1,backendName:"webgl",kernelFunc:s}},2920:(e,t,n)=>{"use strict";n.d(t,{L:()=>i});var r=n(6639),s=n(65120);const i={kernelName:r.VcC,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:i,boxes:a,boxInd:o}=t,{cropSize:l,method:u,extrapolationValue:c}=r,h=new s.A(i.shape,a.shape,l,u,c);return n.runWebGLProgram(h,[i,a,o],"float32")}}},31786:(e,t,n)=>{"use strict";n.d(t,{o:()=>o});var r=n(6639),s=n(30330),i=n(18955),a=n(72207);function o(e,t,n,o,l,u){const c=t.shape.length,h=r.backend_util.getAxesPermutation([o],c);let d=t;null!=h&&(d=(0,a.p)({inputs:{x:t},backend:n,attrs:{perm:h}}));const p=r.backend_util.getInnerMostAxes(1,c)[0];if(p!==c-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${o}`);const f=d.shape[p];let m=(0,i.y)({inputs:{x:d},backend:n});for(let t=0;t<=Math.ceil(Math.log2(f))-1;t++){const r=new s.Z(e,d.shape,!1,u),i=[[t]],a=m;m=n.runWebGLProgram(r,[m],m.dtype,i),n.disposeIntermediateTensorInfo(a)}if(l){const t=new s.Z(e,d.shape,l,u),r=m;m=n.runWebGLProgram(t,[m],m.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=h){const e=r.backend_util.getUndoAxesPermutation(h),t=(0,a.p)({inputs:{x:m},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(d),t}return m}},41333:(e,t,n)=>{"use strict";n.d(t,{c:()=>a});var r=n(6639),s=n(30330),i=n(31786);const a={kernelName:r.Byc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o,exclusive:l,reverse:u}=r;return(0,i.o)(s.Q.Prod,a,n,o,l,u)}}},19749:(e,t,n)=>{"use strict";n.d(t,{z:()=>a});var r=n(6639),s=n(30330),i=n(31786);const a={kernelName:r.iHb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o,exclusive:l,reverse:u}=r;return(0,i.o)(s.Q.Sum,a,n,o,l,u)}}},48610:(e,t,n)=>{"use strict";n.d(t,{R:()=>i});var r=n(6639),s=n(64272);const i={kernelName:r.QRR,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,weights:a}=t,{size:o,binaryOutput:l}=r;if(1===i.shape.length){const e=n.readSync(i.dataId),t=n.readSync(a.dataId),r=(0,s.qO)(e,t,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,r)}if(2===i.shape.length){const e=n.bufferSync(i),t=n.bufferSync(a),r=(0,s.cx)(e,t,o,l);return n.makeTensorInfo(r.shape,a.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${i.shape.length}.`)}}},12650:(e,t,n)=>{"use strict";n.d(t,{d:()=>i});var r=n(6639),s=n(87033);const i={kernelName:r.T0n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{blockSize:a,dataFormat:o}=r,l=i.shape[0],u=("NHWC"===o?i.shape[1]:i.shape[2])*a,c=("NHWC"===o?i.shape[2]:i.shape[3])*a,h=("NHWC"===o?i.shape[3]:i.shape[1])/(a*a),d="NHWC"===o?[l,u,c,h]:[l,h,u,c],p=new s.h(d,a,o);return n.runWebGLProgram(p,[i],i.dtype)}}},95710:(e,t,n)=>{"use strict";n.d(t,{X:()=>a});var r=n(6639),s=n(64364),i=n(31177);const a={kernelName:r.cie,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o,filter:l}=t,{strides:u,pad:c,dilations:h,dimRoundingMode:d}=a;let p=h;null==p&&(p=[1,1]),r.D5U.assert(r.backend_util.eitherStridesOrDilationsAreOne(u,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${p}'`));const f=r.backend_util.computeConv2DInfo(o.shape,l.shape,u,p,c,d,!0);let m;m=(0,r.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&f.strideWidth<=2&&f.outChannels/f.inChannels==1?new i.f(f):new s.J(f);const g=[[f.padInfo.top,f.padInfo.left],[f.strideHeight,f.strideWidth],[f.dilationHeight,f.dilationWidth],[f.inHeight,f.inWidth]];return n.runWebGLProgram(m,[o,l],"float32",g)}}},47262:(e,t,n)=>{"use strict";n.d(t,{v:()=>i});var r=n(6639),s=n(37428);const i={kernelName:r.sL$,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:a,dy:o}=t,{strides:l,dilations:u,pad:c,dimRoundingMode:h,filterShape:d}=i,p=r.backend_util.computeConv2DInfo(a.shape,d,l,u,c,h,!0),f=new s.u(p);return n.runWebGLProgram(f,[a,o],"float32")}}},22145:(e,t,n)=>{"use strict";n.d(t,{G:()=>i});var r=n(6639),s=n(37428);const i={kernelName:r.y7R,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{dy:a,filter:o}=t,{strides:l,dilations:u,pad:c,dimRoundingMode:h,inputShape:d}=i,p=r.backend_util.computeConv2DInfo(d,o.shape,l,u,c,h,!0),f=new s.g(p);return n.runWebGLProgram(f,[a,o],"float32")}}},64931:(e,t,n)=>{"use strict";n.d(t,{y:()=>a});var r=n(6639),s=n(76473),i=n(24622);const a={kernelName:r.$w,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,o=[...a.shape,...a.shape],l=r.D5U.sizeFromShape(a.shape),u=(0,i.X)({inputs:{x:a},backend:n,attrs:{shape:[l]}}),c=new s.L(l),h=n.runWebGLProgram(c,[u],u.dtype),d=(0,i.X)({inputs:{x:h},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),d}}},73296:(e,t,n)=>{"use strict";n.d(t,{T:()=>a});var r=n(6639),s=n(93008),i=n(24622);const a={kernelName:r.p4S,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o,filter:l}=t,{strides:u,pad:c,dilations:h}=a,d=r.backend_util.computeDilation2DInfo(o.shape,l.shape,u,c,"NHWC",h);let p;const f=new s.H(d);p=n.runWebGLProgram(f,[o,l],"float32");const m=(0,i.X)({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),m}}},39639:(e,t,n)=>{"use strict";n.d(t,{G:()=>l});var r=n(6639),s=n(52038),i=n(24622),a=n(47915),o=n(72207);const l={kernelName:r.$g6,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:l}=e,{equation:u}=l,c=t,{allDims:h,summedDims:d,idDims:p}=r.backend_util.decodeEinsumEquation(u,c.length);r.backend_util.checkEinsumDimSizes(h.length,p,c);const{path:f,steps:m}=r.backend_util.getEinsumComputePath(d,p),g=m.length;let y=null,x=h.length;const v=[];for(let e=0;e<g;++e){for(const t of m[e]){const{permutationIndices:e,expandDims:a}=r.backend_util.getEinsumPermutation(x,p[t]);let l;r.backend_util.isIdentityPermutation(e)?l=c[t]:(l=(0,o.p)({inputs:{x:c[t]},backend:n,attrs:{perm:e}}),v.push(l));const u=l.shape.slice();for(let e=0;e<a.length;++e)u.splice(a[e],0,1);r.D5U.arraysEqual(l.shape,u)||(l=(0,i.X)({inputs:{x:l},backend:n,attrs:{shape:u}}),v.push(l)),null===y?y=l:(y=(0,s.J)({inputs:{a:l,b:y},backend:n}),v.push(y))}e<g-1&&(f[e]>=0&&(y=(0,a.S)({inputs:{x:y},backend:n,attrs:{axis:f[e]-(h.length-x),keepDims:!1}}),v.push(y)),x--)}for(const e of v)e!==y&&n.disposeIntermediateTensorInfo(e);return y}}},76494:(e,t,n)=>{"use strict";n.d(t,{$:()=>i});var r=n(6639);const s=(0,n(15367).AJ)({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),i={kernelName:r.SX0,backendName:"webgl",kernelFunc:s}},34680:(e,t,n)=>{"use strict";n.d(t,{q:()=>a});var r=n(6639),s=n(84039),i=n(14488);const a={kernelName:r.HEU,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:a,y:o}=t,l=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new i.E2("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",a.shape,o.shape):new s.t6("return (b >= 1.0) ? a : a * (b + 1.0);",a.shape,o.shape);return n.runWebGLProgram(l,[a,o],a.dtype)}}},24815:(e,t,n)=>{"use strict";n.d(t,{K:()=>o});var r=n(6639),s=n(15367),i=n(64272);const a=(0,s.js)({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:i.gv}),o={kernelName:r.hdR,backendName:"webgl",kernelFunc:a}},70942:(e,t,n)=>{"use strict";n.d(t,{F:()=>o});var r=n(6639),s=n(15367);const i=`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${r.backend_util.ERF_P};\n  float a1 = ${r.backend_util.ERF_A1};\n  float a2 = ${r.backend_util.ERF_A2};\n  float a3 = ${r.backend_util.ERF_A3};\n  float a4 = ${r.backend_util.ERF_A4};\n  float a5 = ${r.backend_util.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`,a=(0,s.AJ)({opSnippet:i}),o={kernelName:r.Omj,backendName:"webgl",kernelFunc:a}},43041:(e,t,n)=>{"use strict";n.d(t,{Qq:()=>o,SX:()=>l});var r=n(6639),s=n(15367),i=n(64272);const a=s.E6+"\n  return exp(x);\n",o=(0,s.AJ)({opSnippet:a,packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:i.aX,dtype:"float32"}),l={kernelName:r.NEP,backendName:"webgl",kernelFunc:o}},66623:(e,t,n)=>{"use strict";n.d(t,{d:()=>i,p:()=>a});var r=n(6639),s=n(24622);function i(e){const{inputs:t,attrs:n,backend:i}=e,{dim:a}=n,{input:o}=t,l=o.shape.length,u=o.shape.slice();let c=a;return a<0&&(r.D5U.assert(-(l+1)<=a,(()=>`Axis must be in the interval [${-(l+1)}, ${l}]`)),c=l+a+1),u.splice(c,0,1),(0,s.X)({inputs:{x:o},backend:i,attrs:{shape:u}})}const a={kernelName:r.YFo,backendName:"webgl",kernelFunc:i}},98465:(e,t,n)=>{"use strict";n.d(t,{V:()=>l});var r=n(6639),s=n(15367),i=n(64272);const a="return exp(x) - 1.0;",o=(0,s.AJ)({opSnippet:a,packedOpSnippet:a,cpuKernelImpl:i.tx}),l={kernelName:r.Y0y,backendName:"webgl",kernelFunc:o}},38993:(e,t,n)=>{"use strict";n.d(t,{r:()=>i});var r=n(6639),s=n(43831);const i={kernelName:r.vwp,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return(0,s.m)(r,!1,n)}}},43831:(e,t,n)=>{"use strict";n.d(t,{m:()=>o});var r=n(6639),s=n(90615),i=n(56515),a=n(24622);function o(e,t,n){const o=n.texData.get(e.dataId),l=r.D5U.sizeFromShape(e.shape),u=e.shape[e.shape.length-1],c=l/u,h=(0,a.X)({inputs:{x:e},backend:n,attrs:{shape:[c,u]}}),d=h.shape,p=new s.O("real",d,t),f=new s.O("imag",d,t),m=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:d},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:d}],g=n.runWebGLProgram(p,m,"float32"),y=n.runWebGLProgram(f,m,"float32"),x=(0,i.P)({inputs:{real:g,imag:y},backend:n});n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y);const v=(0,a.X)({inputs:{x},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(x),v}},13062:(e,t,n)=>{"use strict";n.d(t,{h:()=>i,v:()=>a});var r=n(6639),s=n(67137);function i(e){const{backend:t,attrs:n}=e,{shape:i,value:a}=n;let{dtype:o}=n;if(o=o||r.D5U.inferDtype(a),"string"===o){const e=r.D5U.getArrayFromDType(o,r.D5U.sizeFromShape(i));return e.fill(a),t.makeTensorInfo(i,o,e)}{const e=new s.o(i,a),n=[[a]];return t.runWebGLProgram(e,[],o,n)}}const a={kernelName:r.deh,backendName:"webgl",kernelFunc:i}},40885:(e,t,n)=>{"use strict";n.d(t,{v:()=>i});var r=n(6639),s=n(67079);const i={kernelName:r.Uyb,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,i=new s.i(n.shape);return r.runWebGLProgram(i,[n],n.dtype)}}},73101:(e,t,n)=>{"use strict";n.d(t,{A:()=>l});var r=n(6639),s=n(15367),i=n(64272);const a="return floor(x);",o=(0,s.AJ)({opSnippet:a,packedOpSnippet:a,cpuKernelImpl:i.MZ}),l={kernelName:r.OR,backendName:"webgl",kernelFunc:o}},56997:(e,t,n)=>{"use strict";n.d(t,{E:()=>i});var r=n(6639);const s=(0,n(15367).js)({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),i={kernelName:r.jeX,backendName:"webgl",kernelFunc:s}},82139:(e,t,n)=>{"use strict";n.d(t,{x:()=>o});var r=n(6639),s=n(18378),i=n(49310),a=n(77725);const o={kernelName:r.eBW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e;let{pixels:c}=t;const{numChannels:h}=o,d="undefined"!=typeof HTMLVideoElement&&c instanceof HTMLVideoElement,p="undefined"!=typeof HTMLImageElement&&c instanceof HTMLImageElement,[f,m]=d?[c.videoWidth,c.videoHeight]:[c.width,c.height],g=[m,f],y=[m,f,h];if(p||d){const e=(0,r.OBj)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=l&&e===u||(u=e,l=document.createElement("canvas").getContext("2d",{willReadFrequently:u})),l.canvas.width=f,l.canvas.height=m,l.drawImage(c,0,0,f,m),c=l.canvas}const x=n.makeTensorInfo(g,"int32");n.texData.get(x.dataId).usage=s.v2.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(x.dataId),c);const v=(0,r.OBj)().getBool("WEBGL_PACK")?new a.v(y):new i.C(y),b=n.runWebGLProgram(v,[x],"int32");return n.disposeData(x.dataId),b}};let l,u=(0,r.OBj)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU")},49310:(e,t,n)=>{"use strict";n.d(t,{C:()=>s});var r=n(29610);class s{constructor(e){this.variableNames=["A"];const t=(0,r.A)(),[n,s]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}},77725:(e,t,n)=>{"use strict";n.d(t,{v:()=>s});var r=n(29610);class s{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=(0,r.A)(),[n,s]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${s}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}},57650:(e,t,n)=>{"use strict";n.d(t,{L:()=>u});var r=n(6639),s=n(18954),i=n(92734),a=n(15367),o=n(8328),l=n(24622);const u={kernelName:r._V0,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:u}=e,{x:c,filter:h,bias:d,preluActivationWeights:p}=t,{strides:f,pad:m,dataFormat:g,dilations:y,dimRoundingMode:x,activation:v,leakyreluAlpha:b}=u,w=r.backend_util.convertConv2DDataFormat(g),_=r.backend_util.computeConv2DInfo(c.shape,h.shape,f,y,m,x,!1,w);let S;const T=[],E=null!=d,M=null!=p,C="leakyrelu"===v,A=()=>{const e=[c,h],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=(0,l.X)({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return T.push(t),t}return e};if(E&&e.push(t(d,g)),M&&e.push(t(p,g)),C){const t=n.makeTensorInfo([],"float32",r.D5U.createScalarValue(b,"float32"));e.push(t),T.push(t)}return e};if(1!==_.filterHeight||1!==_.filterWidth||1!==_.dilationHeight||1!==_.dilationWidth||1!==_.strideHeight||1!==_.strideWidth||"SAME"!==_.padInfo.type&&"VALID"!==_.padInfo.type)if(_.strideWidth<=2&&"channelsLast"===w&&(0,r.OBj)().getBool("WEBGL_EXP_CONV")){const e=v?(0,a.g8)(v,!0):null,t=new i.i(_,E,e,M,C),r=[[_.padInfo.top,_.padInfo.left],[_.strideHeight,_.strideWidth],[_.dilationHeight,_.dilationWidth],[_.inHeight,_.inWidth]],s=A();S=n.runWebGLProgram(t,s,"float32",r)}else if((0,r.OBj)().getBool("WEBGL_CONV_IM2COL"))S=(0,o.Y)({x:c,filter:h,convInfo:_,backend:n,bias:d,activation:v,preluActivationWeights:p,leakyreluAlpha:b});else{const e=v?(0,a.g8)(v,!1):null,t=new s.I(_,E,e,M,C),r=A();S=n.runWebGLProgram(t,r,"float32")}else S=(0,o.n)({x:c,filter:h,convInfo:_,backend:n,bias:d,activation:v,preluActivationWeights:p,leakyreluAlpha:b});const I=(0,l.X)({inputs:{x:S},backend:n,attrs:{shape:_.outShape}});return T.push(S),T.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}}},62812:(e,t,n)=>{"use strict";n.d(t,{X:()=>o});var r=n(6639),s=n(64364),i=n(31177),a=n(15367);const o={kernelName:r.luS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:l,filter:u,bias:c,preluActivationWeights:h}=t,{strides:d,pad:p,dilations:f,dimRoundingMode:m,activation:g,leakyreluAlpha:y}=o,x=[];let v=f;null==v&&(v=[1,1]),r.D5U.assert(r.backend_util.eitherStridesOrDilationsAreOne(d,v),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${d} and dilations '${v}'`));const b=r.backend_util.computeConv2DInfo(l.shape,u.shape,d,v,p,m,!0),w=(0,r.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&b.strideWidth<=2&&b.outChannels/b.inChannels==1,_=g?(0,a.g8)(g,w):null,S=[l,u],T=null!=c,E=null!=h,M="leakyrelu"===g;if(T&&S.push(c),E&&S.push(h),M){const e=n.makeTensorInfo([],"float32",r.D5U.createScalarValue(y,"float32"));S.push(e),x.push(e)}let C;C=w?new i.f(b,T,_,E,M):new s.J(b,T,_,E,M);const A=[[b.padInfo.top,b.padInfo.left],[b.strideHeight,b.strideWidth],[b.dilationHeight,b.dilationWidth],[b.inHeight,b.inWidth]],I=n.runWebGLProgram(C,S,"float32",A);return x.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}}},32311:(e,t,n)=>{"use strict";n.d(t,{o:()=>o});var r=n(6639),s=n(78428),i=n(64272),a=n(24622);const o={kernelName:r.q1x,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:o,indices:l}=t,u=l.shape,c=u[u.length-1],h=r.D5U.sizeFromShape(o.shape),[d,p,f,m]=r.backend_util.prepareAndValidate(o,l),g=(0,a.X)({inputs:{x:l},backend:n,attrs:{shape:[p,c]}}),y=(0,a.X)({inputs:{x:o},backend:n,attrs:{shape:[r.D5U.sizeFromShape(o.shape)/f,f]}});if(n.shouldExecuteOnCPU([o,l])||"string"===o.dtype){const e=n.readSync(l.dataId),t=n.bufferSync(o),r=(0,i.TD)(e,t,o.dtype,p,c,f,m,o.shape,h);return n.makeTensorInfo(d,o.dtype,r.values)}const x=new s.i(c,m,[p,f],o.shape),v=n.runWebGLProgram(x,[y,g],y.dtype),b=(0,a.X)({inputs:{x:v},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(v),b}}},77165:(e,t,n)=>{"use strict";n.d(t,{Z:()=>o,c:()=>l});var r=n(6639),s=n(55795),i=n(64272),a=n(24622);function o(e){const{inputs:t,backend:n,attrs:o}=e,{x:l,indices:u}=t,{axis:c,batchDims:h}=o,d=r.D5U.parseAxisParam(c,l.shape)[0];if((0,r.OBj)().get("DEBUG")){const e=n.readSync(u.dataId),t=l.shape[d];for(let n=0;n<e.length;++n){const s=e[n];r.D5U.assert(s<=t-1&&s>=0,(()=>`GatherV2: the index value ${s} is not in [0, ${t-1}]`))}}const p=r.backend_util.segment_util.collectGatherOpShapeInfo(l,u,d,h),f=r.D5U.sizeFromShape(u.shape),m=[],g=(0,a.X)({inputs:{x:l},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),y=(0,a.X)({inputs:{x:u},backend:n,attrs:{shape:[p.batchSize,f/p.batchSize]}});m.push(g),m.push(y);const x=[p.batchSize,p.outerSize,f/p.batchSize,p.sliceSize];if(n.shouldExecuteOnCPU([l,u])||"string"===l.dtype){const e=n.bufferSync(y),t=n.bufferSync(g),r=(0,i.m$)(t,e,x);return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(p.outputShape,r.dtype,r.values)}const v=new s.S(g.shape,x),b=n.runWebGLProgram(v,[g,y],g.dtype);m.push(b);const w=(0,a.X)({inputs:{x:b},backend:n,attrs:{shape:p.outputShape}});return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),w}const l={kernelName:r.qi_,backendName:"webgl",kernelFunc:o}},82661:(e,t,n)=>{"use strict";n.d(t,{C:()=>o});var r=n(6639),s=n(15367),i=n(64272);const a=(0,s.js)({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:i.B_,dtype:"bool"}),o={kernelName:r.iZT,backendName:"webgl",kernelFunc:a}},54589:(e,t,n)=>{"use strict";n.d(t,{V:()=>o});var r=n(6639),s=n(15367),i=n(64272);const a=(0,s.js)({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:i.ji}),o={kernelName:r.Acj,backendName:"webgl",kernelFunc:a}},45332:(e,t,n)=>{"use strict";n.d(t,{K:()=>i});var r=n(6639),s=n(43831);const i={kernelName:r.Qg5,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return(0,s.m)(r,!0,n)}}},18955:(e,t,n)=>{"use strict";function r(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}n.d(t,{I:()=>s,y:()=>r});const s={kernelName:n(6639).iJz,backendName:"webgl",kernelFunc:r}},55145:(e,t,n)=>{"use strict";n.d(t,{K:()=>a,a:()=>i});var r=n(6639),s=n(18955);function i(e){const{inputs:t,backend:n}=e,{input:r}=t,i=n.texData.get(r.dataId);return(0,s.y)({inputs:{x:i.complexTensorInfos.imag},backend:n})}const a={kernelName:r.J_u,backendName:"webgl",kernelFunc:i}},16529:(e,t,n)=>{"use strict";n.d(t,{m:()=>i});var r=n(6639);const s=(0,n(15367).AJ)({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),i={kernelName:r.avt,backendName:"webgl",kernelFunc:s}},21491:(e,t,n)=>{"use strict";n.d(t,{v:()=>i});var r=n(6639);const s=(0,n(15367).AJ)({opSnippet:"return float(isinf(x));",dtype:"bool"}),i={kernelName:r.iWB,backendName:"webgl",kernelFunc:s}},6171:(e,t,n)=>{"use strict";n.d(t,{a:()=>i});var r=n(6639);const s=(0,n(15367).AJ)({opSnippet:"return float(isnan(x));",dtype:"bool"}),i={kernelName:r.r7n,backendName:"webgl",kernelFunc:s}},47224:(e,t,n)=>{"use strict";n.d(t,{r:()=>a});var r=n(6639),s=n(7668),i=n(17090);const a={kernelName:r.eZ0,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{depthRadius:l,bias:u,alpha:c,beta:h}=a,d=(0,r.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new i.H(o.shape,l,u,c,h):new s.g(o.shape,l,u,c,h);return n.runWebGLProgram(d,[o],o.dtype)}}},74015:(e,t,n)=>{"use strict";n.d(t,{f:()=>i});var r=n(6639),s=n(13660);const i={kernelName:r.Hhh,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:i,y:a,dy:o}=t,{depthRadius:l,bias:u,alpha:c,beta:h}=r,d=new s.s(i.shape,l,u,c,h);return n.runWebGLProgram(d,[i,a,o],i.dtype)}}},1736:(e,t,n)=>{"use strict";n.d(t,{Ou:()=>l,oA:()=>a,s4:()=>o});var r=n(6639),s=n(84039),i=n(14488);const a="return (a < 0.) ? b * a : a;",o="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",l={kernelName:r.J$2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:l}=e,{x:u}=t,{alpha:c}=l,h=n.makeTensorInfo([],"float32",r.D5U.createScalarValue(c,"float32")),d=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new i.E2(o,u.shape,h.shape):new s.t6(a,u.shape,h.shape),p=n.runWebGLProgram(d,[u,h],"float32");return n.disposeIntermediateTensorInfo(h),p}}},28412:(e,t,n)=>{"use strict";n.d(t,{z:()=>o});var r=n(6639),s=n(15367),i=n(64272);const a=(0,s.js)({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:i.kY,dtype:"bool"}),o={kernelName:r.vtC,backendName:"webgl",kernelFunc:a}},95031:(e,t,n)=>{"use strict";n.d(t,{m3:()=>o});var r=n(6639),s=n(15367),i=n(64272);const a=(0,s.js)({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:i.Rn,dtype:"bool"}),o={kernelName:r.CAk,backendName:"webgl",kernelFunc:a}},7567:(e,t,n)=>{"use strict";n.d(t,{j:()=>i});var r=n(6639),s=n(64272);const i={kernelName:r.e7N,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:i,num:a}=n,o=(0,s.PQ)(r,i,a);return t.makeTensorInfo([o.length],"float32",o)}}},28175:(e,t,n)=>{"use strict";n.d(t,{x:()=>l});var r=n(6639),s=n(15367),i=n(64272);const a=s.E6+"\n  return x < 0.0 ? 0./0. : log(x);\n",o=(0,s.AJ)({opSnippet:a,packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:i.Sd}),l={kernelName:r.ZbH,backendName:"webgl",kernelFunc:o}},88455:(e,t,n)=>{"use strict";n.d(t,{n:()=>o});var r=n(6639),s=n(15367);const i=s.E6+"\n  return log(1.0 + x);\n",a=(0,s.AJ)({opSnippet:i}),o={kernelName:r.kU,backendName:"webgl",kernelFunc:a}},24042:(e,t,n)=>{"use strict";n.d(t,{E:()=>i});var r=n(6639);const s=(0,n(15367).js)({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),i={kernelName:r.PYm,backendName:"webgl",kernelFunc:s}},25316:(e,t,n)=>{"use strict";n.d(t,{E:()=>i});var r=n(6639);const s=(0,n(15367).AJ)({opSnippet:"return float(!(x >= 1.0));"}),i={kernelName:r.VfG,backendName:"webgl",kernelFunc:s}},56637:(e,t,n)=>{"use strict";n.d(t,{v:()=>i});var r=n(6639);const s=(0,n(15367).js)({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),i={kernelName:r.MZg,backendName:"webgl",kernelFunc:s}},57371:(e,t,n)=>{"use strict";n.d(t,{F:()=>l,s:()=>o});var r=n(6639),s=n(64272),i=n(20274),a=n(75473);function o(e){const{inputs:t,backend:n,attrs:o}=e,{x:l}=t,{reductionIndices:u,keepDims:c}=o,h=l.shape.length,d=r.D5U.parseAxisParam(u,l.shape);let p=d;const f=r.backend_util.getAxesPermutation(p,h),m=null!=f,g=n.shouldExecuteOnCPU([l]);let y=l;if(m){if(g){const e=n.texData.get(y.dataId).values,t=new Array(h);for(let e=0;e<t.length;e++)t[e]=l.shape[f[e]];const r=(0,s.Fv)(e,l.shape,l.dtype,f,t);y=n.makeTensorInfo(t,l.dtype),n.texData.get(y.dataId).values=r}else y=(0,a.H)(l,f,n);p=r.backend_util.getInnerMostAxes(p.length,h)}r.backend_util.assertAxesAreInnerMostDims("max",p,h);const[x,v]=r.backend_util.computeOutAndReduceShapes(y.shape,p);let b,w=x;if(c&&(w=r.backend_util.expandShapeToKeepDim(x,d)),g){const e=n.texData.get(y.dataId).values,t=(0,s.$O)(e,r.D5U.sizeFromShape(v),w,l.dtype);b=n.makeTensorInfo(w,l.dtype),n.texData.get(b.dataId).values=t}else b=(0,i.B)(y,v,w,n);return m&&n.disposeIntermediateTensorInfo(y),b}const l={kernelName:r.YoZ,backendName:"webgl",kernelFunc:o}},22079:(e,t,n)=>{"use strict";n.d(t,{u:()=>o});var r=n(6639),s=n(90789),i=n(91906),a=n(18955);const o={kernelName:r.mTV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:l}=t;(0,i.assertNotComplex)(l,"maxPool");const{filterSize:u,strides:c,pad:h,dimRoundingMode:d}=o;r.D5U.assert(r.backend_util.eitherStridesOrDilationsAreOne(c,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${c} and dilations '1'`));const p=r.backend_util.computePool2DInfo(l.shape,u,c,1,h,d);if(1===p.filterWidth&&1===p.filterHeight&&r.D5U.arraysEqual(p.inShape,p.outShape))return(0,a.y)({inputs:{x:l},backend:n});const f=new s.n(p,"max",!1);return n.runWebGLProgram(f,[l],l.dtype)}}},70883:(e,t,n)=>{"use strict";n.d(t,{m:()=>i});var r=n(6639),s=n(90789);const i={kernelName:r.OAf,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:a}=t,{filterSize:o,strides:l,pad:u,dataFormat:c,dimRoundingMode:h}=i,d=r.backend_util.computePool3DInfo(a.shape,o,l,[1,1,1],u,h,c),p=new s.I(d,"max",!1);return n.runWebGLProgram(p,[a],a.dtype)}}},49669:(e,t,n)=>{"use strict";n.d(t,{J:()=>a});var r=n(6639),s=n(82254),i=n(90789);const a={kernelName:r.OU7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:o,input:l}=t,u=l,{filterSize:c,strides:h,pad:d,dimRoundingMode:p}=a,f=r.backend_util.computePool3DInfo(u.shape,c,h,[1,1,1],d,p),m=new i.I(f,"max",!0),g=n.runWebGLProgram(m,[u],u.dtype),y=new s.b(f),x=n.runWebGLProgram(y,[o,g],u.dtype);return n.disposeIntermediateTensorInfo(g),x}}},59719:(e,t,n)=>{"use strict";n.d(t,{f:()=>o});var r=n(6639),s=n(82254),i=n(90789),a=n(91906);const o={kernelName:r.OV7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{dy:l,input:u,output:c}=t,h=u;(0,a.assertNotComplex)([u,c],"maxPoolGrad");const{filterSize:d,strides:p,pad:f,dimRoundingMode:m}=o,g=r.backend_util.computePool2DInfo(h.shape,d,p,1,f,m),y=new i.n(g,"max",!0),x=n.runWebGLProgram(y,[h],h.dtype),v=new s.T(g),b=n.runWebGLProgram(v,[l,x],h.dtype);return n.disposeIntermediateTensorInfo(x),b}}},68145:(e,t,n)=>{"use strict";n.d(t,{q:()=>i});var r=n(6639),s=n(67364);const i={kernelName:r.vFR,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:i}=e,{filterSize:a,strides:o,pad:l,includeBatchInIndex:u}=t,c=n;r.D5U.assert(4===i.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.shape.length}.`));const h=[1,1];r.D5U.assert(r.backend_util.eitherStridesOrDilationsAreOne(o,h),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${h}'`));const d=r.backend_util.computePool2DInfo(i.shape,a,o,h,l),[p,f]=(0,s.V)(i,u,d,c);return[p,f]}}},67364:(e,t,n)=>{"use strict";n.d(t,{V:()=>s});var r=n(90789);function s(e,t,n,s){let i=new r.n(n,"max",!1);const a=s.runWebGLProgram(i,[e],"float32");return i=new r.n(n,"max",!0,!0,t),[a,s.runWebGLProgram(i,[e],"float32")]}},20274:(e,t,n)=>{"use strict";n.d(t,{B:()=>a});var r=n(6639),s=n(98259),i=n(24622);function a(e,t,n,a){const o=r.D5U.sizeFromShape(t),l=r.D5U.sizeFromShape(e.shape)/o,u=(0,i.X)({inputs:{x:e},attrs:{shape:[l,o]},backend:a}),c=(0,s.u)(u,e.dtype,"max",a),h=(0,i.X)({inputs:{x:c},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(u),a.disposeIntermediateTensorInfo(c),h}},58391:(e,t,n)=>{"use strict";n.d(t,{e:()=>h});var r=n(6639),s=n(84039),i=n(14488),a=n(15367),o=n(64272);const l=s.D1+"\n  return max(a, b);\n",u="\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+i.my+"\n  return result;\n",c=(0,a.js)({opSnippet:l,packedOpSnippet:u,cpuKernelImpl:o.nL}),h={kernelName:r.BMI,backendName:"webgl",kernelFunc:c}},4649:(e,t,n)=>{"use strict";n.d(t,{$:()=>o});var r=n(6639),s=n(96634),i=n(64272),a=n(75473);const o={kernelName:r.q2K,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:o}=e,{keepDims:l,axis:u}=t,c=n,h=o.shape.length,d=r.D5U.parseAxisParam(u,o.shape);let p=d;const f=r.backend_util.getAxesPermutation(p,h),m=null!=f,g=c.shouldExecuteOnCPU([o]),y=[];let x=o;if(m){if(g){const e=c.texData.get(x.dataId).values,t=new Array(h);for(let e=0;e<t.length;e++)t[e]=o.shape[f[e]];const n=(0,i.Fv)(e,o.shape,o.dtype,f,t);x=c.makeTensorInfo(t,o.dtype),c.texData.get(x.dataId).values=n}else x=(0,a.H)(o,f,c);y.push(x),p=r.backend_util.getInnerMostAxes(p.length,h)}r.backend_util.assertAxesAreInnerMostDims("sum",p,h);const[v,b]=r.backend_util.computeOutAndReduceShapes(x.shape,p);let w=v;l&&(w=r.backend_util.expandShapeToKeepDim(v,d));const _=(0,s.J)(x,b,w,c);for(const e of y)c.disposeIntermediateTensorInfo(e);return _}}},96634:(e,t,n)=>{"use strict";n.d(t,{J:()=>a});var r=n(6639),s=n(98259),i=n(24622);function a(e,t,n,a){const o=r.D5U.sizeFromShape(t),l=r.D5U.sizeFromShape(e.shape)/o,u=(0,i.X)({inputs:{x:e},attrs:{shape:[l,o]},backend:a}),c=(0,s.u)(u,"float32","mean",a),h=(0,i.X)({inputs:{x:c},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(u),a.disposeIntermediateTensorInfo(c),h}},75803:(e,t,n)=>{"use strict";n.d(t,{L:()=>o});var r=n(6639),s=n(98259),i=n(24622),a=n(72207);const o={kernelName:r.c17,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:l}=t,{axis:u,keepDims:c}=o,h=l.shape.length,d=r.D5U.parseAxisParam(u,l.shape);let p=d;const f=r.backend_util.getAxesPermutation(p,h);let m=l;null!=f&&(m=(0,a.p)({inputs:{x:l},backend:n,attrs:{perm:f}}),p=r.backend_util.getInnerMostAxes(p.length,l.shape.length)),r.backend_util.assertAxesAreInnerMostDims("min",p,h);const[g,y]=r.backend_util.computeOutAndReduceShapes(m.shape,p),x=r.D5U.sizeFromShape(y),v=(0,i.X)({inputs:{x:m},backend:n,attrs:{shape:[-1,x]}}),b=(0,s.u)(v,v.dtype,"min",n);let w;if(c){const e=r.backend_util.expandShapeToKeepDim(g,d);w=(0,i.X)({inputs:{x:b},backend:n,attrs:{shape:e}})}else w=(0,i.X)({inputs:{x:b},backend:n,attrs:{shape:g}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(b),null!=f&&n.disposeIntermediateTensorInfo(m),w}}},73631:(e,t,n)=>{"use strict";n.d(t,{u:()=>h});var r=n(6639),s=n(84039),i=n(14488),a=n(15367),o=n(64272);const l=s.D1+"\n  return min(a, b);\n",u="\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+i.my+"\n  return result;\n",c=(0,a.js)({opSnippet:l,packedOpSnippet:u,cpuKernelImpl:o.r}),h={kernelName:r.q8u,backendName:"webgl",kernelFunc:c}},12850:(e,t,n)=>{"use strict";n.d(t,{t:()=>a});var r=n(6639),s=n(1883),i=n(6300);const a={kernelName:r.jQs,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a}=e,{paddings:o,mode:l}=n,u=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new i.X(a.shape,o,l):new s.E(a.shape,o,l);return t.runWebGLProgram(u,[a],a.dtype)}}},70326:(e,t,n)=>{"use strict";n.d(t,{M:()=>l});var r=n(6639),s=n(14488),i=n(15367);const a="\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+s.my+"\n  return result;\n",o=(0,i.js)({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:a}),l={kernelName:r.Vbg,backendName:"webgl",kernelFunc:o}},28311:(e,t,n)=>{"use strict";n.d(t,{A:()=>a});var r=n(6639),s=n(76638),i=n(59486);const a={kernelName:r.NZg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:o,seed:l,normalized:u}=r,c=u?a:(0,i.X)({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),h=c.shape[0],d=c.shape[1],p=new s.A(h,d,o),f=[[l]],m=n.runWebGLProgram(p,[c],"int32",f);return u||n.disposeIntermediateTensorInfo(c),m}}},52038:(e,t,n)=>{"use strict";n.d(t,{J:()=>c,f:()=>h});var r=n(6639),s=n(21480),i=n(84039),a=n(14488),o=n(64272),l=n(56515);const u="return a * b;";function c(e){const{inputs:t,backend:n}=e,{a:c,b:h}=t,d=r.backend_util.upcastType(c.dtype,h.dtype);if("complex64"===c.dtype){const e=n.texData.get(c.dataId),t=n.texData.get(h.dataId),r=new s.S(s.x.REAL,c.shape,h.shape),i=new s.S(s.x.IMAG,c.shape,h.shape),a=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:c.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:c.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:h.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:h.shape}],o=n.runWebGLProgram(r,a,"float32"),u=n.runWebGLProgram(i,a,"float32"),d=(0,l.P)({inputs:{real:o,imag:u},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),d}if(n.shouldExecuteOnCPU([c,h])){const e=n.texData.get(c.dataId),t=n.texData.get(h.dataId),[r,s]=(0,o.Th)(c.shape,h.shape,e.values,t.values,d),i=n.makeTensorInfo(s,d);return n.texData.get(i.dataId).values=r,i}let p;return p=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new a.E2(u,c.shape,h.shape):new i.t6(u,c.shape,h.shape),n.runWebGLProgram(p,[c,h],d)}const h={kernelName:r.wYn,backendName:"webgl",kernelFunc:c}},29870:(e,t,n)=>{"use strict";n.d(t,{A:()=>l});var r=n(6639),s=n(64272),i=n(84518),a=n(29365);const o=i.D1+"\n  return -x;\n",l={kernelName:r.kuV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:l}=t;if(n.shouldExecuteOnCPU([l])){const e=n.texData.get(l.dataId),[t,r]=(0,s.Bo)(e.values,l.shape,l.dtype);return n.makeTensorInfo(r,l.dtype,t)}let u;return u=(0,r.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new a.cc(l.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new i.l(l.shape,o),n.runWebGLProgram(u,[l],l.dtype)}}},96144:(e,t,n)=>{"use strict";n.d(t,{r:()=>i});var r=n(6639);const s=r.GDt.nonMaxSuppressionV3Impl,i={kernelName:r.uv1,backendName:"webgl",kernelFunc:function(e){r.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:i}=e,{boxes:a,scores:o}=t,{maxOutputSize:l,iouThreshold:u,scoreThreshold:c}=i,h=n.readSync(a.dataId),d=n.readSync(o.dataId),{selectedIndices:p}=s(h,d,l,u,c);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}}},67891:(e,t,n)=>{"use strict";n.d(t,{L:()=>i});var r=n(6639);const s=r.GDt.nonMaxSuppressionV4Impl,i={kernelName:r.cye,backendName:"webgl",kernelFunc:function(e){r.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:i}=e,{boxes:a,scores:o}=t,{maxOutputSize:l,iouThreshold:u,scoreThreshold:c,padToMaxOutputSize:h}=i,d=n.readSync(a.dataId),p=n.readSync(o.dataId),{selectedIndices:f,validOutputs:m}=s(d,p,l,u,c,h);return[n.makeTensorInfo([f.length],"int32",new Int32Array(f)),n.makeTensorInfo([],"int32",new Int32Array([m]))]}}},7463:(e,t,n)=>{"use strict";n.d(t,{h:()=>i});var r=n(6639);const s=r.GDt.nonMaxSuppressionV5Impl,i={kernelName:r.W0H,backendName:"webgl",kernelFunc:function(e){r.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:i}=e,{boxes:a,scores:o}=t,{maxOutputSize:l,iouThreshold:u,scoreThreshold:c,softNmsSigma:h}=i,d=n.readSync(a.dataId),p=n.readSync(o.dataId),f=l,m=u,g=c,y=h,{selectedIndices:x,selectedScores:v}=s(d,p,f,m,g,y);return[n.makeTensorInfo([x.length],"int32",new Int32Array(x)),n.makeTensorInfo([v.length],"float32",new Float32Array(v))]}}},24299:(e,t,n)=>{"use strict";n.d(t,{Q:()=>a,n:()=>o});var r=n(6639),s=n(15367),i=n(64272);const a=(0,s.js)({opSnippet:"return float(a != b);",cpuKernelImpl:i.cZ,dtype:"bool"}),o={kernelName:r.yQU,backendName:"webgl",kernelFunc:a}},8363:(e,t,n)=>{"use strict";n.d(t,{w:()=>a});var r=n(6639),s=n(92711),i=n(24622);const a={kernelName:r.we_,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{indices:o}=t,{dtype:l,depth:u,onValue:c,offValue:h}=a,d=r.D5U.sizeFromShape(o.shape),p=new s.s(d,u,c,h),f=(0,i.X)({inputs:{x:o},backend:n,attrs:{shape:[d]}}),m=n.runWebGLProgram(p,[f],l);n.disposeIntermediateTensorInfo(f);const g=[...o.shape,u],y=(0,i.X)({inputs:{x:m},backend:n,attrs:{shape:g}});return n.disposeIntermediateTensorInfo(m),y}}},77019:(e,t,n)=>{"use strict";n.d(t,{H:()=>u});var r=n(6639),s=n(56515),i=n(13062),a=n(55145),o=n(50852),l=n(27909);const u={kernelName:r.qWM,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:u}=n;if("string"===u.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===u.dtype){const t=(0,o.k)({inputs:{input:u},backend:r}),n=e({inputs:{x:t},backend:r}),i=(0,a.a)({inputs:{input:u},backend:r}),c=(0,l.P)({inputs:{x:i},backend:r}),h=(0,s.P)({inputs:{real:n,imag:c},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(c),h}return(0,i.h)({attrs:{shape:u.shape,dtype:u.dtype,value:1},backend:r})}}},59488:(e,t,n)=>{"use strict";n.d(t,{W:()=>a});var r=n(6639),s=n(40942),i=n(66623);const a={kernelName:r.QiL,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{axis:o}=a;if(1===t.length)return(0,i.d)({inputs:{input:t[0]},backend:n,attrs:{dim:o}});const l=t[0].shape,u=t[0].dtype;t.forEach((e=>{r.D5U.assertShapesMatch(l,e.shape,"All tensors passed to stack must have matching shapes"),r.D5U.assert(u===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const c=[],h=t.map((e=>{const t=(0,i.d)({inputs:{input:e},backend:n,attrs:{dim:o}});return c.push(t),t})),d=(0,s.z)({inputs:h,backend:n,attrs:{axis:o}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}}},30097:(e,t,n)=>{"use strict";n.d(t,{S:()=>l,Y:()=>o});var r=n(6639),s=n(1685),i=n(70573),a=n(13062);const o=e=>{const{inputs:t,backend:n,attrs:o}=e,{x:l}=t,{paddings:u,constantValue:c}=o;if(0===r.D5U.sizeFromShape(l.shape)){const e=u.map(((e,t)=>e[0]+l.shape[t]+e[1]));return(0,a.h)({backend:n,attrs:{shape:e,value:c,dtype:l.dtype}})}const h=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new i.j(l.shape,u,c):new s.O(l.shape,u,c),d=[[c]];return n.runWebGLProgram(h,[l],l.dtype,d)},l={kernelName:r.lyA,backendName:"webgl",kernelFunc:o}},89902:(e,t,n)=>{"use strict";n.d(t,{z:()=>l});var r=n(6639),s=n(14488),i=n(15367);const a="\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+s.my+"\n  return result;\n",o=(0,i.js)({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:a}),l={kernelName:r.pe_,backendName:"webgl",kernelFunc:o}},73525:(e,t,n)=>{"use strict";n.d(t,{ML:()=>l,VO:()=>o,pU:()=>a});var r=n(6639),s=n(84039),i=n(14488);const a="return (a < 0.) ? b * a : a;",o="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",l={kernelName:r.o0g,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:l,alpha:u}=t,c=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new i.E2(o,l.shape,u.shape):new s.t6(a,l.shape,u.shape);return n.runWebGLProgram(c,[l,u],"float32")}}},2806:(e,t,n)=>{"use strict";n.d(t,{I:()=>l});var r=n(6639),s=n(98259),i=n(64272),a=n(24622),o=n(72207);const l={kernelName:r.DlI,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:l}=e,{x:u}=t,{axis:c,keepDims:h}=l,d=u.shape.length,p=[],f=r.D5U.parseAxisParam(c,u.shape);let m=f;const g=r.backend_util.getAxesPermutation(m,d);let y,x=u;if(null!=g&&(x=(0,o.p)({inputs:{x:u},backend:n,attrs:{perm:g}}),m=r.backend_util.getInnerMostAxes(m.length,d),p.push(x)),r.backend_util.assertAxesAreInnerMostDims("prod",m,d),n.shouldExecuteOnCPU([x])){const e=n.texData.get(x.dataId).values,{outVals:t,outShape:r,outDtype:s}=(0,i.Tg)(x.shape,x.dtype,e,m);y=n.makeTensorInfo(r,s,t)}else{const[e,t]=r.backend_util.computeOutAndReduceShapes(x.shape,m),i=r.D5U.sizeFromShape(t),o=(0,a.X)({inputs:{x},backend:n,attrs:{shape:[-1,i]}}),l=(0,r.z4k)(u.dtype),c=(0,s.u)(o,l,"prod",n);y=(0,a.X)({inputs:{x:c},backend:n,attrs:{shape:e}}),p.push(o),p.push(c)}if(h){p.push(y);const e=r.backend_util.expandShapeToKeepDim(y.shape,f);y=(0,a.X)({inputs:{x:y},backend:n,attrs:{shape:e}})}return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}}},18964:(e,t,n)=>{"use strict";n.d(t,{G:()=>i});var r=n(6639),s=n(64272);const i={kernelName:r.dDz,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:i,paramsDenseValues:a,indices:o}=t,{outputRaggedRank:l}=r,u=i.map((e=>n.readSync(e.dataId))),c=i.map((e=>e.shape)),h=n.readSync(a.dataId),d=n.readSync(o.dataId),[p,f,m]=(0,s.Qs)(u,c,h,a.shape,a.dtype,d,o.shape,l),g=p.map((e=>n.makeTensorInfo([e.length],"int32",e))),y=n.makeTensorInfo(m,a.dtype,f);return g.concat([y])}}},68368:(e,t,n)=>{"use strict";n.d(t,{P:()=>i});var r=n(6639),s=n(64272);const i={kernelName:r.BiW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:i,values:a,defaultValue:o,rowPartitionTensors:l}=t,{rowPartitionTypes:u}=r,c=n.readSync(i.dataId),h=n.readSync(a.dataId),d=n.readSync(o.dataId),p=l.map((e=>n.readSync(e.dataId))),f=l.map((e=>e.shape)),[m,g]=(0,s.fy)(c,i.shape,h,a.shape,a.dtype,d,o.shape,p,f,u);return n.makeTensorInfo(m,a.dtype,g)}}},35286:(e,t,n)=>{"use strict";n.d(t,{K:()=>a,w:()=>i});var r=n(6639),s=n(64272);const i=e=>{const{backend:t,attrs:n}=e,{start:r,stop:i,step:a,dtype:o}=n,l=(0,s.hO)(r,i,a,o);return t.makeTensorInfo([l.length],o,l)},a={kernelName:r.e6w,backendName:"webgl",kernelFunc:i}},50852:(e,t,n)=>{"use strict";n.d(t,{O:()=>a,k:()=>i});var r=n(6639),s=n(18955);function i(e){const{inputs:t,backend:n}=e,{input:r}=t,i=n.texData.get(r.dataId);return(0,s.y)({inputs:{x:i.complexTensorInfos.real},backend:n})}const a={kernelName:r.xJR,backendName:"webgl",kernelFunc:i}},5937:(e,t,n)=>{"use strict";n.d(t,{k:()=>s,v:()=>i});var r=n(6639);const s=(0,n(15367).js)({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),i={kernelName:r.oHH,backendName:"webgl",kernelFunc:s}},76323:(e,t,n)=>{"use strict";n.d(t,{a:()=>i});var r=n(6639);const s=(0,n(15367).AJ)({opSnippet:"return 1.0 / x;"}),i={kernelName:r.$HU,backendName:"webgl",kernelFunc:s}},22593:(e,t,n)=>{"use strict";n.d(t,{F:()=>o});var r=n(6639),s=n(15367);const i=n(84518).D1+"\n  return (x < 0.0) ? 0.0 : x;\n",a=(0,s.AJ)({opSnippet:i,packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),o={kernelName:r.qkr,backendName:"webgl",kernelFunc:a}},88632:(e,t,n)=>{"use strict";n.d(t,{N:()=>o});var r=n(6639),s=n(15367);const i=n(84518).D1+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",a=(0,s.AJ)({opSnippet:i,packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),o={kernelName:r.SbG,backendName:"webgl",kernelFunc:a}},24622:(e,t,n)=>{"use strict";n.d(t,{X:()=>a,b:()=>o});var r=n(6639),s=n(5314),i=n(91906);function a(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{shape:l}=a,u=n,c=r.D5U.sizeFromShape(o.shape),h=r.D5U.inferFromImplicitShape(l,c),d=r.D5U.sizeFromShape(h);r.D5U.assert(c===d,(()=>`The new shape (${h}) has ${d} elements and the old shape (${o.shape}) has ${c} elements. The new shape and old shape must have the same number of elements.`));const p=u.texData.get(o.dataId);return!p.isPacked||(0,i.isReshapeFree)(o.shape,h)||null!==p.texture&&(0,i.isReshapeFree)(p.shape,h)?(u.incRef(o.dataId),{dataId:o.dataId,shape:h,dtype:o.dtype}):(0,s.V)(o,h,u)}const o={kernelName:r.HZH,backendName:"webgl",kernelFunc:a}},24449:(e,t,n)=>{"use strict";n.d(t,{T:()=>a});var r=n(6639),s=n(16329),i=n(89721);const a={kernelName:r._Yw,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:o}=t,{alignCorners:l,halfPixelCenters:u,size:c}=a,[h,d]=c,p=(0,r.OBj)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new i.s(o.shape,h,d,l,u):new s.w(o.shape,h,d,l,u);return n.runWebGLProgram(p,[o],"float32")}}},36870:(e,t,n)=>{"use strict";n.d(t,{G:()=>i});var r=n(6639),s=n(52488);const i={kernelName:r.zbQ,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:i,dy:a}=t,{alignCorners:o}=r,l=new s.A(a.shape,i.shape,o);return n.runWebGLProgram(l,[a],a.dtype)}}},30688:(e,t,n)=>{"use strict";n.d(t,{G:()=>a});var r=n(6639),s=n(95313),i=n(74874);const a={kernelName:r.dpD,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:o}=t,{alignCorners:l,halfPixelCenters:u,size:c}=a,[h,d]=c,p=(0,r.OBj)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new i.e(o.shape,h,d,l,u):new s.T(o.shape,h,d,l,u);return n.runWebGLProgram(p,[o],o.dtype)}}},22925:(e,t,n)=>{"use strict";n.d(t,{S:()=>i});var r=n(6639),s=n(37931);const i={kernelName:r.Hmb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:i,dy:a}=t,{alignCorners:o}=r,l=new s.z(a.shape,i.shape,o);return n.runWebGLProgram(l,[a],a.dtype)}}},93761:(e,t,n)=>{"use strict";n.d(t,{q:()=>o});var r=n(6639),s=n(42366),i=n(36207),a=n(18955);const o={kernelName:r.mKl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:l}=t,{dims:u}=o,c=l.shape.length,h=r.D5U.parseAxisParam(u,l.shape);if(0===c)return(0,a.y)({inputs:{x:l},backend:n});const d=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new i.L(l.shape,h):new s.X(l.shape,h);return n.runWebGLProgram(d,[l],l.dtype)}}},85703:(e,t,n)=>{"use strict";n.d(t,{c:()=>i});var r=n(6639),s=n(42740);const i={kernelName:r.b9H,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:i}=e,{radians:a,fillValue:o,center:l}=t,u=n,c=new s.p(i.shape,o),[h,d]=r.backend_util.getImageCenter(l,i.shape[1],i.shape[2]),p=[[h,d,Math.sin(a),Math.cos(a)]];return u.runWebGLProgram(c,[i],i.dtype,p)}}},75262:(e,t,n)=>{"use strict";n.d(t,{q:()=>i});var r=n(6639);const s=(0,n(15367).AJ)({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),i={kernelName:r.e07,backendName:"webgl",kernelFunc:s}},10097:(e,t,n)=>{"use strict";n.d(t,{F:()=>o});var r=n(6639),s=n(15367),i=n(64272);const a=(0,s.AJ)({opSnippet:"return inversesqrt(x);",cpuKernelImpl:i.St}),o={kernelName:r.bV0,backendName:"webgl",kernelFunc:a}},94331:(e,t,n)=>{"use strict";n.d(t,{b:()=>a});var r=n(6639),s=n(55742),i=n(24622);const a={kernelName:r.xQA,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:o,updates:l}=t,{shape:u}=a,{sliceRank:c,numUpdates:h,sliceSize:d,strides:p,outputSize:f}=r.backend_util.calculateShapes(l,o,u),m=[f/d,d];if(0===f)return n.makeTensorInfo(u,o.dtype);const g=(0,i.X)({inputs:{x:o},backend:n,attrs:{shape:[h,c]}}),y=(0,i.X)({inputs:{x:l},backend:n,attrs:{shape:[h,d]}}),x=n.makeTensorInfo([],"float32",new Float32Array([0])),v=new s.B(h,c,g.shape.length,y.shape.length,p,m),b=n.runWebGLProgram(v,[y,g,x],y.dtype),w=(0,i.X)({inputs:{x:b},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(x),w}}},49432:(e,t,n)=>{"use strict";n.d(t,{L:()=>i});var r=n(6639),s=n(16177);const i={kernelName:r.nr8,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:i,values:a}=t,{side:o}=r,l=new s.D(i.shape[0],i.shape[1],a.shape[1],o),u=[[i.shape[1]]];return n.runWebGLProgram(l,[i,a],"int32",u)}}},95833:(e,t,n)=>{"use strict";n.d(t,{$:()=>i});var r=n(6639),s=n(66887);const i={kernelName:r.PhF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:i,t:a,e:o}=t,l=new s.j(i.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(l,[i,a,o],(0,r.x8V)(a.dtype,o.dtype))}}},39851:(e,t,n)=>{"use strict";n.d(t,{D:()=>o});var r=n(6639),s=n(15367);const i=`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${r.backend_util.SELU_SCALEALPHA};\n  float scale = ${r.backend_util.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`,a=(0,s.AJ)({opSnippet:i}),o={kernelName:r.oFR,backendName:"webgl",kernelFunc:a}},53351:(e,t,n)=>{"use strict";n.d(t,{B:()=>l});var r=n(6639),s=n(15367),i=n(64272);const a=s.E6+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",o=(0,s.AJ)({opSnippet:a,packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:i.UN}),l={kernelName:r.a5O,backendName:"webgl",kernelFunc:o}},26406:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var r=n(6639);const s=(0,n(15367).AJ)({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),i={kernelName:r.i5y,backendName:"webgl",kernelFunc:s}},40410:(e,t,n)=>{"use strict";n.d(t,{d:()=>o});var r=n(6639),s=n(15367);const i=s.E6+"\n  return sin(x);\n",a=(0,s.AJ)({opSnippet:i}),o={kernelName:r.RQH,backendName:"webgl",kernelFunc:a}},29333:(e,t,n)=>{"use strict";n.d(t,{J:()=>i});var r=n(6639);const s=(0,n(15367).AJ)({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),i={kernelName:r.wYB,backendName:"webgl",kernelFunc:s}},10623:(e,t,n)=>{"use strict";n.d(t,{C:()=>l,t:()=>o});var r=n(6639),s=n(64272),i=n(95951),a=n(75935);function o(e){const{inputs:t,backend:n,attrs:o}=e,{x:l}=t,{begin:u,size:c}=o,[h,d]=r.kuN.parseSliceParams(l,u,c);if(r.kuN.assertParamsValid(l,h,d),0===r.D5U.sizeFromShape(d))return n.makeTensorInfo(d,l.dtype,[]);if(n.shouldExecuteOnCPU([l])||"string"===l.dtype){const e=n.texData.get(l.dataId),t=(0,s.nT)(e.values,h,d,l.shape,l.dtype);return n.makeTensorInfo(d,l.dtype,t)}const{isPacked:p}=n.texData.get(l.dataId),f=r.kuN.isSliceContinous(l.shape,h,d);if(p||!f){const e=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new a.T(d):new i.a(d),t=[h];return n.runWebGLProgram(e,[l],l.dtype,t)}return n.uploadToGPU(l.dataId),function(e,t,n,s){const i=s.texData.get(e.dataId),a=s.makeTensorInfo(n,e.dtype),o=s.texData.get(a.dataId);Object.assign(o,i),o.refCount=1,o.shape=n,o.dtype=e.dtype;let l=r.kuN.computeFlatOffset(t,r.D5U.computeStrides(e.shape));i.slice&&(l+=i.slice.flatOffset),o.slice={flatOffset:l,origDataId:i.slice&&i.slice.origDataId||e.dataId};const u=s.dataRefCount.get(o.slice.origDataId)||1;return s.dataRefCount.set(o.slice.origDataId,u+1),a}(l,h,d,n)}const l={kernelName:r.p2w,backendName:"webgl",kernelFunc:o}},59486:(e,t,n)=>{"use strict";n.d(t,{D:()=>h,X:()=>c});var r=n(6639),s=n(43041),i=n(57371),a=n(5937),o=n(24622),l=n(1119),u=n(47915);function c(e){const{inputs:t,backend:n,attrs:c}=e,{logits:h}=t,{dim:d}=c,p=r.D5U.parseAxisParam([d],h.shape),f=(0,i.s)({inputs:{x:h},backend:n,attrs:{reductionIndices:p,keepDims:!1}}),m=r.backend_util.expandShapeToKeepDim(f.shape,p),g=(0,o.X)({inputs:{x:f},backend:n,attrs:{shape:m}}),y=(0,l.l)({inputs:{a:h,b:g},backend:n}),x=(0,s.Qq)({inputs:{x:y},backend:n}),v=(0,u.S)({inputs:{x},backend:n,attrs:{axis:p,keepDims:!1}}),b=(0,o.X)({inputs:{x:v},backend:n,attrs:{shape:m}}),w=(0,a.k)({inputs:{a:x,b},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(b),w}const h={kernelName:r.Gcp,backendName:"webgl",kernelFunc:c}},37065:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var r=n(6639);const s=(0,n(15367).AJ)({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),i={kernelName:r.MRv,backendName:"webgl",kernelFunc:s}},1232:(e,t,n)=>{"use strict";n.d(t,{J:()=>o});var r=n(6639),s=n(30097),i=n(24622),a=n(72207);const o={kernelName:r.TQc,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:o}=e,{x:l}=t,{blockShape:u,paddings:c}=o;r.D5U.assert(l.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const h=u.reduce(((e,t)=>e*t)),d=[[0,0]];d.push(...c);for(let e=1+u.length;e<l.shape.length;++e)d.push([0,0]);const p=[],f=(0,s.Y)({inputs:{x:l},backend:n,attrs:{paddings:d,constantValue:0}}),m=r.backend_util.getReshaped(f.shape,u,h,!1),g=r.backend_util.getPermuted(m.length,u.length,!1),y=r.backend_util.getReshapedPermuted(f.shape,u,h,!1),x=(0,i.X)({inputs:{x:f},backend:n,attrs:{shape:m}}),v=(0,a.p)({inputs:{x},backend:n,attrs:{perm:g}}),b=(0,i.X)({inputs:{x:v},backend:n,attrs:{shape:y}});return p.push(f),p.push(x),p.push(v),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}}},64765:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var r=n(6639),s=n(64272);const i={kernelName:r.O3z,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:i,denseShape:a,defaultValue:o}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==i.shape.length)throw new Error(`Values must be a vector, saw:\n         ${i.shape}`);if(0!==o.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${o.shape}`);const l=n.readSync(r.dataId),u=n.readSync(i.dataId),c=n.readSync(a.dataId),h=n.readSync(o.dataId)[0],[d,p,f,m,g]=(0,s.X8)(l,r.shape,r.dtype,u,i.dtype,c,h);return[n.makeTensorInfo(p,r.dtype,d),n.makeTensorInfo([p[0]],i.dtype,f),n.makeTensorInfo([m.length],"bool",new Uint8Array(m.map((e=>Number(e))))),n.makeTensorInfo([g.length],r.dtype,new Int32Array(g))]}}},61790:(e,t,n)=>{"use strict";n.d(t,{d:()=>i});var r=n(6639),s=n(64272);const i={kernelName:r.nhH,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:i,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==i.shape.length)throw new Error(`Input shape should be a vector but received shape ${i.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const o=Array.from(n.readSync(i.dataId)),l=n.readSync(r.dataId),u=Array.from(n.readSync(a.dataId)),[c,h,d]=(0,s.LS)(l,r.shape,r.dtype,o,u);return[n.makeTensorInfo(h,r.dtype,c),n.makeTensorInfo([d.length],a.dtype,new Int32Array(d))]}}},93746:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var r=n(6639),s=n(64272);const i={kernelName:r.w3H,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:i,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==i.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${i.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${a.shape}`);const o=n.readSync(r.dataId),l=n.readSync(i.dataId),u=n.readSync(a.dataId),[c,h]=(0,s.AR)(o,r.shape,r.dtype,l,u,!0);return n.makeTensorInfo(h,r.dtype,c)}}},4389:(e,t,n)=>{"use strict";n.d(t,{O:()=>i});var r=n(6639),s=n(64272);const i={kernelName:r.ZjV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:i,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==i.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${i.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${a.shape}`);const o=n.readSync(r.dataId),l=n.readSync(i.dataId),u=n.readSync(a.dataId),[c,h]=(0,s.AR)(o,r.shape,r.dtype,l,u);return n.makeTensorInfo(h,r.dtype,c)}}},34197:(e,t,n)=>{"use strict";n.d(t,{e:()=>o});var r=n(6639),s=n(64272),i=n(55742),a=n(24622);const o={kernelName:r.D2d,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{sparseIndices:l,sparseValues:u,defaultValue:c}=t,{outputShape:h}=o,{sliceRank:d,numUpdates:p,sliceSize:f,strides:m,outputSize:g}=r.backend_util.calculateShapes(u,l,h);if("string"===u.dtype){const e=n.bufferSync(l),t=n.bufferSync(u),i=r.D5U.decodeString(n.readSync(c.dataId)[0]),a=(0,s.Y1)(e,t,h,g,f,p,d,m,i,!1);return n.makeTensorInfo(h,a.dtype,a.values)}const y=new i.B(p,d,l.shape.length,u.shape.length,m,[g,1],!1),x=n.runWebGLProgram(y,[u,l,c],u.dtype),v=(0,a.X)({inputs:{x},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(x),v}}},55808:(e,t,n)=>{"use strict";n.d(t,{q:()=>i});var r=n(6639),s=n(10623);const i={kernelName:r.L8s,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:a}=t,{numOrSizeSplits:o,axis:l}=i,u=r.D5U.parseAxisParam(l,a.shape)[0],c=r.backend_util.prepareSplitSize(a,o,u),h=a.shape.length,d=new Array(h).fill(0),p=a.shape.slice();return c.map((e=>{const t=[...p];t[u]=e;const r=(0,s.t)({inputs:{x:a},backend:n,attrs:{begin:d,size:t}});return d[u]+=e,r}))}}},67087:(e,t,n)=>{"use strict";n.d(t,{c:()=>l});var r=n(6639),s=n(15367),i=n(64272);const a="return sqrt(x);",o=(0,s.AJ)({opSnippet:a,packedOpSnippet:a,cpuKernelImpl:i.Bk}),l={kernelName:r.FKq,backendName:"webgl",kernelFunc:o}},34520:(e,t,n)=>{"use strict";n.d(t,{g:()=>i});var r=n(6639);const s=(0,n(15367).AJ)({opSnippet:"return x * x;"}),i={kernelName:r.bK0,backendName:"webgl",kernelFunc:s}},15245:(e,t,n)=>{"use strict";n.d(t,{M:()=>a});var r=n(6639);const s="return (a - b) * (a - b);",i=(0,n(15367).js)({opSnippet:s,packedOpSnippet:s}),a={kernelName:r._tC,backendName:"webgl",kernelFunc:i}},36380:(e,t,n)=>{"use strict";n.d(t,{a:()=>i});var r=n(6639),s=n(84518);const i={kernelName:r.h8e,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,i=s.D1+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,a=new s.l(r.shape,i);return n.runWebGLProgram(a,[r],r.dtype)}}},26784:(e,t,n)=>{"use strict";n.d(t,{f:()=>l});var r=n(6639),s=n(64272),i=n(14334),a=n(24622),o=n(10623);const l={kernelName:r.jQk,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:l}=e,{x:u}=t,{begin:c,end:h,strides:d,beginMask:p,endMask:f,ellipsisMask:m,newAxisMask:g,shrinkAxisMask:y}=l,{finalShapeSparse:x,finalShape:v,isIdentity:b,sliceDim0:w,isSimpleSlice:_,begin:S,end:T,strides:E}=r.kuN.sliceInfo(u.shape,c,h,d,p,f,m,g,y);let M;if(b)M=(0,a.X)({inputs:{x:u},backend:n,attrs:{shape:v}});else if(w||_){r.D5U.assert(u.shape.length>=1,(()=>`Input must have rank at least 1, got: ${u.shape.length}`));const e=r.kuN.computeOutShape(S,T,E),t=(0,o.t)({inputs:{x:u},backend:n,attrs:{begin:S,size:e}});M=(0,a.X)({inputs:{x:t},backend:n,attrs:{shape:v}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([u])){const e=n.readSync(u.dataId),t=(0,r.f3b)(u.shape,u.dtype,e),i=(0,s.$u)(x,t,E,S);M=n.makeTensorInfo(v,u.dtype,i.values)}else{const e=new i.U(S,E,x);M=n.runWebGLProgram(e,[u],u.dtype)}const C=(0,a.X)({inputs:{x:M},backend:n,attrs:{shape:v}});return n.disposeIntermediateTensorInfo(M),C}}},21341:(e,t,n)=>{"use strict";n.d(t,{a:()=>i});var r=n(6639),s=n(64272);const i={kernelName:r._JP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:i,nGramWidths:a,leftPad:o,rightPad:l,padWidth:u,preserveShortSequences:c}=r,{data:h,dataSplits:d}=t,p=n.readSync(h.dataId),f=n.readSync(d.dataId),[m,g]=(0,s.$j)(p,f,i,a,o,l,u,c);return[n.makeTensorInfo([m.length],"string",m),n.makeTensorInfo(d.shape,"int32",g)]}}},9966:(e,t,n)=>{"use strict";n.d(t,{U:()=>i});var r=n(6639),s=n(64272);const i={kernelName:r.s1s,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:i}=r,{input:a,delimiter:o}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==o.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const l=n.readSync(a.dataId),u=n.readSync(o.dataId)[0],[c,h,d]=(0,s.A0)(l,u,i),p=h.length;return[n.makeTensorInfo([p,2],"int32",c),n.makeTensorInfo([p],"string",h),n.makeTensorInfo([2],"int32",new Int32Array(d))]}}},99008:(e,t,n)=>{"use strict";n.d(t,{C:()=>i});var r=n(6639),s=n(64272);const i={kernelName:r.XkS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:i}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(i<=0)throw new Error("Number of buckets must be at least 1");const o=n.readSync(a.dataId),l=(0,s._9)(o,i);return n.makeTensorInfo(a.shape,"int32",l)}}},1119:(e,t,n)=>{"use strict";n.d(t,{G:()=>l,l:()=>o});var r=n(6639),s=n(15367),i=n(64272);const a="return a - b;",o=(0,s.js)({opSnippet:a,packedOpSnippet:a,supportsComplex:!0,cpuKernelImpl:i.kI}),l={kernelName:r.Tr8,backendName:"webgl",kernelFunc:o}},47915:(e,t,n)=>{"use strict";n.d(t,{S:()=>i,y:()=>a});var r=n(6639),s=n(72829);function i(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{axis:a,keepDims:o}=r;return(0,s.U)(i,a,o,n)}const a={kernelName:r.GBy,backendName:"webgl",kernelFunc:i}},72829:(e,t,n)=>{"use strict";n.d(t,{U:()=>o});var r=n(6639),s=n(98259),i=n(24622),a=n(75473);function o(e,t,n,o){const l=t,u=e.shape.length,c=r.D5U.parseAxisParam(l,e.shape);let h=c;const d=r.backend_util.getAxesPermutation(h,u),p=null!=d;let f=e;p&&(f=(0,a.H)(e,d,o),h=r.backend_util.getInnerMostAxes(h.length,u)),r.backend_util.assertAxesAreInnerMostDims("sum",h,u);const[m,g]=r.backend_util.computeOutAndReduceShapes(f.shape,h);let y=m;n&&(y=r.backend_util.expandShapeToKeepDim(m,c));const x=r.D5U.sizeFromShape(g),v=r.D5U.sizeFromShape(e.shape)/x,b=(0,i.X)({inputs:{x:f},attrs:{shape:[v,x]},backend:o}),w=(0,r.z4k)(e.dtype),_=(0,s.u)(b,w,"sum",o),S=(0,i.X)({inputs:{x:_},attrs:{shape:y},backend:o});return o.disposeIntermediateTensorInfo(b),o.disposeIntermediateTensorInfo(_),p&&o.disposeIntermediateTensorInfo(f),S}},38524:(e,t,n)=>{"use strict";n.d(t,{a:()=>i});var r=n(6639);const s=(0,n(15367).AJ)({opSnippet:"return tan(x);"}),i={kernelName:r.sEM,backendName:"webgl",kernelFunc:s}},5025:(e,t,n)=>{"use strict";n.d(t,{r:()=>i});var r=n(6639);const s=(0,n(15367).AJ)({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),i={kernelName:r.MIZ,backendName:"webgl",kernelFunc:s}},62086:(e,t,n)=>{"use strict";n.d(t,{G:()=>a,o:()=>o});var r=n(6639),s=n(64272),i=n(94057);function a(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{reps:l}=a;if("string"===o.dtype||o.shape.length>5){const e=n.readSync(o.dataId),t="string"===o.dtype?e.map((e=>r.D5U.decodeString(e))):e,i=(0,r.f3b)(o.shape,o.dtype,t),a=(0,s.KX)(i,l);return n.makeTensorInfo(a.shape,a.dtype,a.values)}const u=new i.S(o.shape,l);return n.runWebGLProgram(u,[o],o.dtype)}const o={kernelName:r.n9L,backendName:"webgl",kernelFunc:a}},44292:(e,t,n)=>{"use strict";n.d(t,{o:()=>d});var r=n(6639),s=n(64272),i=n(95568),a=n(13062),o=n(77165),l=n(24622),u=n(10623);function c(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function h(e){let t=1;for(;t<e;)t*=2;return t}const d={kernelName:r.cWu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:d}=e,{x:p}=t,{k:f,sorted:m}=d,g=(0,r.OBj)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),y=(0,r.OBj)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),x=p.shape,v=x[x.length-1];if(n.shouldExecuteOnCPU([p])||v<g||f>y){const e=n.readSync(p.dataId),[t,r]=(0,s.oC)(e,x,p.dtype,f,m);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===f)return x[x.length-1]=0,[n.makeTensorInfo(x,p.dtype,[]),n.makeTensorInfo(x,"int32",[])];if(1===v)return[p,(0,a.h)({attrs:{shape:x,dtype:"int32",value:0},backend:n})];const b=n.texData.get(p.dataId),w=null!==b&&b.isPacked,_=w?n.unpackTensor(p):p,S=r.D5U.sizeFromShape(x)/v,T=(0,l.X)({inputs:{x:_},attrs:{shape:[S,v]},backend:n});w&&c(n,_);const E=h(f),M=h(v);let C=null;const A=()=>null===C?[T,T]:[T,C],I=(e,t,r)=>{const s=A(),a=new i.I(r),o=[[v],[null===C?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],l=C;C=n.runWebGLProgram(a,s,"int32",o),c(n,l)};for(let e=1;e<E;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)I(t,n,[S,M])}for(let e=M;e>E;e/=2){const t=A(),r=new i.R([S,e/2]),s=[[v],[null===C?1:0],[E]],a=C;C=n.runWebGLProgram(r,t,"int32",s),c(n,a);const o=E/2,l=2*o;for(let e=o;e>=1;e/=2)I(l,e,C.shape)}let R=C;C=(0,u.t)({inputs:{x:C},backend:n,attrs:{begin:0,size:[S,f]}}),c(n,R);let k=(0,o.Z)({inputs:{x:T,indices:C},backend:n,attrs:{axis:1,batchDims:1}});c(n,T);const N=x.slice(0,-1);N.push(f),R=C,C=(0,l.X)({inputs:{x:C},attrs:{shape:N},backend:n}),c(n,R);const L=k;return k=(0,l.X)({inputs:{x:k},attrs:{shape:N},backend:n}),c(n,L),[k,C]}}},29702:(e,t,n)=>{"use strict";n.d(t,{M:()=>i});var r=n(6639),s=n(63804);const i={kernelName:r.wx7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:i,transforms:a}=t,{interpolation:o,fillMode:l,fillValue:u,outputShape:c}=r,[h,d,p,f]=i.shape,[m,g]=null!=c?c:[d,p],y=[h,m,g,f],x=new s.l(d,p,o,l,u,y);return n.runWebGLProgram(x,[i,a],"float32")}}},72207:(e,t,n)=>{"use strict";n.d(t,{b:()=>o,p:()=>a});var r=n(6639),s=n(75473),i=n(64272);function a(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:o}=r,l=n,u=a.shape.length,c=new Array(u);for(let e=0;e<c.length;e++)c[e]=a.shape[o[e]];let h;if(l.shouldExecuteOnCPU([a])){const e=l.texData.get(a.dataId).values,t=(0,i.Fv)(e,a.shape,a.dtype,o,c);h=l.makeTensorInfo(c,a.dtype),l.texData.get(h.dataId).values=t}else h=(0,s.H)(a,o,l);return h}const o={kernelName:r.G3Y,backendName:"webgl",kernelFunc:a}},75473:(e,t,n)=>{"use strict";n.d(t,{H:()=>a});var r=n(6639),s=n(34615),i=n(93850);function a(e,t,n){const a=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new i.H(e.shape,t):new s.H(e.shape,t);return n.runWebGLProgram(a,[e],e.dtype)}},50207:(e,t,n)=>{"use strict";n.d(t,{q:()=>a});var r=n(6639),s=n(64272),i=n(91906);const a={kernelName:r.kpP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:o}=t;(0,i.assertNotComplex)(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const l=r.readSync(o.dataId),{outputValues:u,outputShape:c,indices:h}=(0,s.CV)(l,a,o.shape,o.dtype);return[r.makeTensorInfo(c,o.dtype,u),r.makeTensorInfo([h.length],"int32",h)]}}},64147:(e,t,n)=>{"use strict";n.d(t,{y:()=>a});var r=n(6639),s=n(24622),i=n(10623);const a={kernelName:r.ToN,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:o}=r;o<0&&(o+=a.shape.length);const l=a,u=l.shape.length,c=a.shape[o],h=new Array(u-1);let d=0;for(let e=0;e<u;e++)e!==o&&(h[d++]=l.shape[e]);const p=[],f=new Array(u).fill(0),m=l.shape.slice();m[o]=1;const g=new Array(c);for(let e=0;e<g.length;e++){f[o]=e;const t=(0,i.t)({inputs:{x:l},backend:n,attrs:{begin:f,size:m}}),r=(0,s.X)({inputs:{x:t},backend:n,attrs:{shape:h}});g[e]=r,p.push(t)}return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}}},93418:(e,t,n)=>{"use strict";n.d(t,{Z:()=>u});var r=n(6639),s=n(77461),i=n(35286),a=n(24622),o=n(62086),l=n(72207);const u={kernelName:r.Qvg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:u}=e,{x:c,segmentIds:h}=t,{numSegments:d}=u,p=c.shape.length,f=[];let m=0;const g=r.backend_util.getAxesPermutation([m],p);let y=c;null!=g&&(y=(0,l.p)({inputs:{x:c},backend:n,attrs:{perm:g}}),f.push(y),m=r.backend_util.getInnerMostAxes(1,p)[0]);const x=r.backend_util.segment_util.computeOutShape(y.shape,m,d),v=r.D5U.sizeFromShape([y.shape[m]]),b=(0,a.X)({inputs:{x:y},backend:n,attrs:{shape:[-1,v]}});f.push(b);const w=(0,r.z4k)(c.dtype),_=(e,t,a,l,u)=>{const c=e.shape[0],h=e.shape[1],d=r.backend_util.segment_util.segOpComputeOptimalWindowSize(h,u),p={windowSize:d,inSize:h,batchSize:c,numSegments:u},m=new s.D(p,t),g=n.compileAndRun(m,[e,a],l);if(f.push(g),g.shape[1]===u)return g;const y=(0,i.w)({backend:n,attrs:{start:0,stop:u,step:1,dtype:"float32"}}),x=(0,o.G)({inputs:{x:y},backend:n,attrs:{reps:[h/d]}});return f.push(y),f.push(x),_(g,t,x,l,u)},S=_(b,"unsortedSegmentSum",h,w,d),T=(0,a.X)({inputs:{x:S},backend:n,attrs:{shape:x}});let E=T;if(null!=g){f.push(T);const e=r.backend_util.getUndoAxesPermutation(g);E=(0,l.p)({inputs:{x:E},backend:n,attrs:{perm:e}})}return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),E}}},27909:(e,t,n)=>{"use strict";n.d(t,{A:()=>u,P:()=>l});var r=n(6639),s=n(56515),i=n(13062),a=n(55145),o=n(50852);function l(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=(0,o.k)({inputs:{input:r},backend:n}),t=l({inputs:{x:e},backend:n}),i=(0,a.a)({inputs:{input:r},backend:n}),u=l({inputs:{x:i},backend:n}),c=(0,s.P)({inputs:{real:t,imag:u},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),c}return(0,i.h)({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const u={kernelName:r.RuY,backendName:"webgl",kernelFunc:l}},56090:(e,t,n)=>{"use strict";n.d(t,{d:()=>i});var r=n(6639),s=n(28163);const i={kernelName:r.usg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:i,b:a,bias:o,preluActivationWeights:l}=t,{transposeA:u,transposeB:c,activation:h,leakyreluAlpha:d}=r;return(0,s.r)({a:i,b:a,transposeA:u,transposeB:c,backend:n,bias:o,preluActivationWeights:l,leakyreluAlpha:d,activation:h})}}},7668:(e,t,n)=>{"use strict";n.d(t,{g:()=>r});class r{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const i=t,a=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${i}; j <= ${i}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${a}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}},13660:(e,t,n)=>{"use strict";n.d(t,{s:()=>r});class r{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}},17090:(e,t,n)=>{"use strict";n.d(t,{H:()=>r});class r{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=t,a=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${i};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${i}; j <= ${i}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}},82254:(e,t,n)=>{"use strict";n.d(t,{T:()=>r,b:()=>s});class r{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,s=e.effectiveFilterHeight,i=e.effectiveFilterWidth,a=s-1-e.padInfo.top,o=i-1-e.padInfo.left,l=s*i-1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${i} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class s{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.dilationDepth,i=e.dilationHeight,a=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=l-1-e.padInfo.top,d=u-1-e.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${i}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${a}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}},13315:(e,t,n)=>{"use strict";n.d(t,{h:()=>s});var r=n(6639);class s{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:i,outSize:a}=e;this.outputShape=[s,a];const o=4*Math.floor(n/4),l=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${r.D5U.isInt(e)?e.toPrecision(2):e}, ones);`}let c="";i%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${i}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}},1883:(e,t,n)=>{"use strict";n.d(t,{E:()=>s});var r=n(55156);class s{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,i=(0,r.kW)(s),a=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),u="reflect"===n?0:1;this.userCode=1!==s?`\n      ${i} start = ${i}(${a});\n      ${i} end = ${i}(${o});\n\n      void main() {\n        ${i} outC = getOutputCoords();\n        for (int i = 0; i < ${s}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${i} coords = outC - start;\n        setOutput(getX(${l}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}},6300:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var r=n(21034),s=n(55156);class i{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const i=e.length,a=(0,s.kW)(i),o=t.map((e=>e[0])).join(","),l=t.map(((t,n)=>t[0]+e[n])).join(","),u=(0,r.Ky)("rc",i),c=(0,r.Ky)("source",i),h=`${u[i-1]} < ${this.outputShape[i-1]}`,d=1===i?"source":`vec2(${c.slice(-2).join()})`,p="reflect"===n?0:1;let f="";if(1===i){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${p};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${p};\n        }\n        source -= start;\n      `;f=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${c.join()}), ${d});\n        ${u[i-1]} += 1;\n        if(${h}) {\n          ${e}\n          result[1] = getChannel(getX(${c.join()}), ${d});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${p}) +\n                gte * ((end - 1) * 2 - source + ${p});\n        source -= start;\n      `;f=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${c.join()}), ${d});\n        ${u[i-1]} += 1;\n        if(${h}) {\n          ${e}\n          result[1] = getChannel(getX(${c.join()}), ${d});\n        }\n        rc = outputLoc;\n        ${u[i-2]} += 1;\n        if(${u[i-2]} < ${this.outputShape[i-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${c.join()}), ${d});\n          ${u[i-1]} += 1;\n          if(${h}) {\n            ${e}\n            result[3] = getChannel(getX(${c.join()}), ${d});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${o});\n      const ${a} end = ${a}(${l});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${f}\n        setOutput(result);\n      }\n    `}}},53100:(e,t,n)=>{"use strict";n.d(t,{N:()=>s});var r=n(16697);class s{constructor(e,t,n,s=!1,i=!1,a=!1,o=null,l=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=(0,r.C9)(this.outputShape.length);const c=s?e[1]:e[2],h=Math.ceil(c/2),d=s?"i * 2, rc.y":"rc.y, i * 2",p=i?"rc.z, i * 2":"i * 2, rc.z",f=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=i?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",y="";o&&(g=l?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${o}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${o}\n        }`:`vec4 activation(vec4 x) {\n          ${o}\n        }`,y="result = activation(result);");const x=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let v="rc.x",b="rc.x";e[0]<t[0]?v=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(b=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${g}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${h}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${h}; i++) {\n          int batchA = ${v};\n          int batchB = ${b};\n          vec4 a = getMatrixA(batchA, ${d});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${f[0]} * ${m[0]});\n          result += (${f[1]} * ${m[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${x}\n\n        ${y}\n\n        setOutput(result);\n      }\n    `}}},76638:(e,t,n)=>{"use strict";n.d(t,{A:()=>r});class r{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}},92711:(e,t,n)=>{"use strict";n.d(t,{s:()=>r});class r{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}},55667:(e,t,n)=>{"use strict";n.d(t,{U:()=>a});var r=n(16697),s=n(21034),i=n(55156);class a{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=(0,r.C9)(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=(0,s.Ky)("rc",this.rank),t=(0,i.kW)(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),a=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let s=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)s=`${e[e.length-1-t]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}},21034:(e,t,n)=>{"use strict";function r(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function s(e,t){return 1===t?[e]:r(e,t)}function i(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}n.d(t,{Ky:()=>s,Qc:()=>i,k6:()=>r})},1685:(e,t,n)=>{"use strict";n.d(t,{O:()=>s});var r=n(55156);class s{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,i=(0,r.kW)(s),a=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);this.userCode=1!==s?`\n      ${i} start = ${i}(${a});\n      ${i} end = ${i}(${o});\n\n      void main() {\n        ${i} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${i} coords = outC - start;\n          setOutput(getX(${l}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}},70573:(e,t,n)=>{"use strict";n.d(t,{j:()=>i});var r=n(21034),s=n(55156);class i{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const i=e.length,a=(0,s.kW)(i),o=t.map((e=>e[0])).join(","),l=t.map(((t,n)=>t[0]+e[n])).join(","),u=(0,r.Ky)("rc",i),c=(0,r.Ky)("source",i),h=`${u[i-1]} < ${this.outputShape[i-1]}`,d=1===i?"source":`vec2(${c.slice(-2).join()})`,p=[`${a} rc = outputLoc;`,`${u[i-1]} += 1;\n       if(${h}) {\n      `,1===i?"":`}\n       rc = outputLoc;\n       ${u[i-2]} += 1;\n       if(${u[i-2]} < ${this.outputShape[i-2]}) {`,1===i?"":`  ${u[i-1]} += 1;\n         if(${h}) {`],f=1===i?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let m="";for(let e=0,t=1===i?2:4;e<t;e++)m+=`\n        ${p[e]}\n        if (${f}) {\n          result[${e}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${c.join()}), ${d});\n        }\n      `;m+=1===i?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${o});\n      const ${a} end = ${a}(${l});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${m}\n        setOutput(result);\n      }\n    `}}},90789:(e,t,n)=>{"use strict";n.d(t,{I:()=>s,n:()=>r});class r{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${a}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / count");const v=4*Math.floor(i/4),b=i%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${v}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${v};\n          if (${1===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${x});\n      }\n    `}}class s{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const x="avg"===t;let v="0.0";if(x||(v="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${a}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const w=4*Math.floor(i/4),_=i%4,S=`\n      if (${x}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${a}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${v};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${v});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${S}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===_}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${2===_}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${3===_}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${S}\n            }\n          }\n          setOutput(${b});\n        }\n      }\n    `}}},24196:(e,t,n)=>{"use strict";n.d(t,{f:()=>r});class r{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:i}=e;this.outputShape=[r,i];let a="0.0",o="";"prod"===t?a="1.0":"min"===t?(a="1.0 / 1e-20",o="min"):"max"===t&&(a="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(a="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(a="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${a};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${a});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}},70824:(e,t,n)=>{"use strict";var r=n(6639),s=n(56090),i=n(55512),a=n(4998),o=n(98200),l=n(77763),u=n(16263),c=n(67923),h=n(48344),d=n(79646),p=n(44612),f=n(58088),m=n(56604),g=n(76505),y=n(47729),x=n(69179),v=n(38731),b=n(27878),w=n(71230),_=n(48717),S=n(44246),T=n(7632),E=n(21346),M=n(10802),C=n(37833),A=n(58446),I=n(68291),R=n(54712),k=n(56515),N=n(55876),L=n(40942),D=n(20946),O=n(72728),P=n(52596),F=n(73834),$=n(36027),B=n(80159),U=n(40526),z=n(19354),V=n(2920),G=n(41333),W=n(19749),H=n(48610),j=n(12650),X=n(95710),q=n(47262),K=n(22145),Y=n(64931),J=n(73296),Z=n(39639),Q=n(76494),ee=n(34680),te=n(24815),ne=n(70942),re=n(43041),se=n(66623),ie=n(98465),ae=n(38993),oe=n(13062),le=n(40885),ue=n(73101),ce=n(56997),he=n(82139),de=n(57650),pe=n(62812),fe=n(32311),me=n(77165),ge=n(82661),ye=n(54589),xe=n(18955),ve=n(45332),be=n(55145),we=n(16529),_e=n(21491),Se=n(6171),Te=n(1736),Ee=n(28412),Me=n(95031),Ce=n(7567),Ae=n(28175),Ie=n(88455),Re=n(24042),ke=n(25316),Ne=n(56637),Le=n(47224),De=n(74015),Oe=n(57371),Pe=n(58391),Fe=n(22079),$e=n(70883),Be=n(49669),Ue=n(59719),ze=n(68145),Ve=n(4649),Ge=n(75803),We=n(73631),He=n(12850),je=n(70326),Xe=n(28311),qe=n(52038),Ke=n(29870),Ye=n(96144),Je=n(67891),Ze=n(7463),Qe=n(24299),et=n(8363),tt=n(77019),nt=n(59488),rt=n(30097),st=n(89902),it=n(73525),at=n(2806),ot=n(18964),lt=n(68368),ut=n(35286),ct=n(50852),ht=n(5937),dt=n(76323),pt=n(22593),ft=n(88632),mt=n(24622),gt=n(24449),yt=n(36870),xt=n(30688),vt=n(22925),bt=n(93761),wt=n(85703),_t=n(75262),St=n(10097),Tt=n(94331),Et=n(49432),Mt=n(95833),Ct=n(39851),At=n(53351),It=n(26406),Rt=n(40410),kt=n(29333),Nt=n(10623),Lt=n(59486),Dt=n(37065),Ot=n(1232),Pt=n(64765),Ft=n(61790),$t=n(93746),Bt=n(4389),Ut=n(34197),zt=n(55808),Vt=n(67087),Gt=n(34520),Wt=n(15245),Ht=n(36380),jt=n(26784),Xt=n(21341),qt=n(9966),Kt=n(99008),Yt=n(1119),Jt=n(47915),Zt=n(38524),Qt=n(5025),en=n(62086),tn=n(44292),nn=n(29702),rn=n(72207),sn=n(50207),an=n(64147),on=n(93418),ln=n(27909);const un=[s.d,i.f,a.r,o.v,l.j,u._,c.O,h.H,d.d,p.O,f.h,m.W,g.E,y.t,x.B,v.U,b.z,w.Y,_.v,S.W,T.C,E.g,M.e,C.u,A.M,I.y,R.w,k.z,N.s,L.X,D.o,O.d,P.g,F.L,$.$,B.i,U.D,z.q,V.L,G.c,W.z,H.R,j.d,X.X,q.v,K.G,Y.y,J.T,Z.G,Q.$,ee.q,te.K,ne.F,re.SX,se.p,ie.V,ae.r,oe.v,le.v,ue.A,ce.E,he.x,de.L,pe.X,fe.o,me.c,ge.C,ye.V,xe.I,ve.K,be.K,we.m,_e.v,Se.a,Te.Ou,Ee.z,Me.m3,Ce.j,Ae.x,Ie.n,Re.E,ke.E,Ne.v,Le.r,De.f,Oe.F,Pe.e,Fe.u,$e.m,Be.J,Ue.f,ze.q,Ve.$,Ge.L,We.u,He.t,je.M,Xe.A,qe.f,Ke.A,Ye.r,Je.L,Ze.h,Qe.n,et.w,tt.H,nt.W,rt.S,st.z,it.ML,at.I,ot.G,lt.P,ut.K,ct.O,ht.v,dt.a,pt.F,ft.N,mt.b,gt.T,yt.G,xt.G,vt.S,bt.q,wt.c,_t.q,St.F,Tt.b,Et.L,Mt.$,Ct.D,At.B,It.l,Rt.d,kt.J,Nt.C,Lt.D,Dt.W,Ot.J,Pt.l,Ft.d,$t.A,Bt.O,Ut.e,zt.q,Vt.c,Gt.g,Wt.M,Ht.a,jt.f,Xt.a,qt.U,Kt.C,Yt.G,Jt.y,Zt.a,Qt.r,en.o,tn.o,nn.M,rn.b,sn.q,an.y,on.Z,ln.A];for(const e of un)(0,r.wCN)(e)},28831:(e,t,n)=>{"use strict";n.d(t,{v:()=>i});var r=n(16697),s=n(38110);class i{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=(0,r.C9)(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var i,a;this.userCode=`\n      ${i=t,a=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${a?s.al(["r","c","d"],"inputShape"):s.RW(["r","c","d"],i)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?s.nc():s.ku(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}},52488:(e,t,n)=>{"use strict";n.d(t,{A:()=>r});class r{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,i,a]=e,o=[n&&i>1?r-1:r,n&&a>1?s-1:s],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}},16329:(e,t,n)=>{"use strict";n.d(t,{w:()=>r});class r{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[i,a,o,l]=e;this.outputShape=[i,t,n,l];const u=[r&&t>1?a-1:a,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}},89721:(e,t,n)=>{"use strict";n.d(t,{s:()=>r});class r{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,o,l]=e;this.outputShape=[i,t,n,l];const u=[r&&t>1?a-1:a,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}},37931:(e,t,n)=>{"use strict";n.d(t,{z:()=>r});class r{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,i,a]=e,o=[n&&i>1?r-1:r,n&&a>1?s-1:s],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}},95313:(e,t,n)=>{"use strict";n.d(t,{T:()=>r});class r{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[i,a,o,l]=e;this.outputShape=[i,t,n,l];const u=[r&&t>1?a-1:a,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}},74874:(e,t,n)=>{"use strict";n.d(t,{e:()=>r});class r{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,o,l]=e;this.outputShape=[i,t,n,l];const u=[r&&t>1?a-1:a,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}},42366:(e,t,n)=>{"use strict";n.d(t,{X:()=>s});var r=n(55156);class s{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const s=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),i=(0,r.kW)(n);this.userCode=`\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}}},36207:(e,t,n)=>{"use strict";n.d(t,{L:()=>i});var r=n(21034),s=n(55156);class i{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const i=(0,r.Ky)("rc",n),a=`${i[n-1]} + 1 < ${this.outputShape[n-1]}`,o=`${i[n-2]} + 1 < ${this.outputShape[n-2]}`,l=(0,s.kW)(n);function u(n){const r=e.map(((r,s)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${l} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return u(e)}(i.slice())};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",u(e)}(i.slice())};\n          }\n          if(${o}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",u(e)}(i.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",u(e)}(i.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}},42740:(e,t,n)=>{"use strict";n.d(t,{p:()=>r});class r{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let s="";s="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}},55742:(e,t,n)=>{"use strict";n.d(t,{B:()=>s});var r=n(55156);class s{constructor(e,t,n,s,i,a,o=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const l=(0,r.kW)(i.length),u=(0,r.kW)(a.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let d="";1===s?d="i":2===s&&(d="i, coords[1]");const p=`getUpdates(${d})`,f=t>1?"strides[j]":"strides";this.userCode=`\n        ${l} strides = ${l}(${i});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${h});\n              flattenedIndex += index * ${f};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}},16177:(e,t,n)=>{"use strict";n.d(t,{D:()=>s});var r=n(6639);class s{constructor(e,t,n,s){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const i=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=2===(0,r.OBj)().getNumber("WEBGL_VERSION")?"while (left < right) {":i,o="left"===s?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${a}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${o} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}},77461:(e,t,n)=>{"use strict";n.d(t,{D:()=>r});class r{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,i=e.numSegments,a=i*Math.ceil(s/n);this.outputShape=[r,a];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${i})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${i})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}},66887:(e,t,n)=>{"use strict";n.d(t,{j:()=>s});var r=n(55156);class s{constructor(e,t,n){let s,i;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)i="resRC",s="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[],a=[];for(let s=0;s<t.length;s++)a.push(`${n[s]}`),s<e&&r.push(`${n[s]}`);s=r.join(),i=a.join()}const a=(0,r.kW)(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${s});\n        if (cVal >= 1.0) {\n          setOutput(getA(${i}));\n        } else {\n          setOutput(getB(${i}));\n        }\n      }\n    `}}},55156:(e,t,n)=>{"use strict";n.d(t,{Tt:()=>y,Vm:()=>o,kW:()=>g});var r=n(6639),s=n(29610),i=n(38110);const{getBroadcastDims:a}=r.backend_util;function o(e,t,n){const o=[];if(e.forEach((e=>{const t=r.D5U.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?o.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(o.push(`uniform sampler2D ${e.name};`),o.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=y(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:o.push(`uniform int ${e.name}Shape;`);break;case 2:o.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:o.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:o.push(`uniform ivec4 ${e.name}Shape;`)}o.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:o.push("uniform int outShape;");break;case 2:o.push("uniform ivec2 outShape;"),o.push("uniform int outShapeStrides;");break;case 3:o.push("uniform ivec3 outShape;"),o.push("uniform ivec2 outShapeStrides;");break;case 4:o.push("uniform ivec4 outShape;"),o.push("uniform ivec3 outShapeStrides;")}o.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{o.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const f=o.join("\n"),m=e.map((e=>function(e,t,n=!1,s){let i="";i+=n?u(e,s):l(e,s);const o=e.shapeInfo.logicalShape,c=t.logicalShape;return o.length<=c.length&&(i+=n?function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),i="get"+s+"AtOutCoords",o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length,u=a(e.shapeInfo.logicalShape,t.logicalShape),c=g(l),h=l-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":l<2&&u.length>=1?"coords = 0;":u.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let f="";f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", ");let m="return outputValue;";const y=1===r.D5U.sizeFromShape(e.shapeInfo.logicalShape),x=1===r.D5U.sizeFromShape(t.logicalShape);if(1!==o||y||x){if(y&&!x)m=1===l?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(u.length){const e=o-2,t=o-1;u.indexOf(e)>-1&&u.indexOf(t)>-1?m="return vec4(outputValue.x);":u.indexOf(e)>-1?m="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":u.indexOf(t)>-1&&(m="return vec4(outputValue.xx, outputValue.zz);")}}else m="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${i}() {\n      ${c} coords = getOutputCoords();\n      ${d}\n      vec4 outputValue = get${s}(${f});\n      ${m}\n    }\n  `}(e,t):function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),i="get"+s+"AtOutCoords",o=t.texShape,l=e.shapeInfo.texShape,u=e.shapeInfo.logicalShape.length,c=t.logicalShape.length;if(!e.shapeInfo.isUniform&&u===c&&null==e.shapeInfo.flatOffset&&r.D5U.arraysEqual(l,o))return`\n      float ${i}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const h=g(c),d=a(e.shapeInfo.logicalShape,t.logicalShape),p=c-u;let f;const m=["x","y","z","w","u","v"];f=0===u?"":c<2&&d.length>=1?"coords = 0;":d.map((e=>`coords.${m[e+p]} = 0;`)).join("\n");let y="";return y=c<2&&u>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${m[t+p]}`)).join(", "),`\n    float ${i}() {\n      ${h} coords = getOutputCoords();\n      ${f}\n      return get${s}(${y});\n    }\n  `}(e,t)),i}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),x=t.texShape,v=(0,s.A)(),b=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(v);let w,_,S=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${c}\n    ${h}\n    ${d}\n  `}(v);return t.isPacked?(w=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(r.D5U.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));\n      }\n    `;const i=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n      int r = 2 * (index / ${i});\n      int c = imod(index, ${i}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[2]/2),i=s*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[e.length-1]/2),i=s*Math.ceil(e[e.length-2]/2);let a=i,o="",l="b, r, c";for(let t=2;t<e.length-1;t++)a*=e[e.length-t-1],o=`\n      int b${t} = index / ${a};\n      index -= b${t} * ${a};\n    `+o,l=`b${t}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,x,n.enableShapeUniforms),_=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(v)):(w=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return r.D5U.arraysEqual(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${i.Kn(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const r=i.RW(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${i.Kn(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=i.RW(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=i.RW(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=i.RW(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,x,n.enableShapeUniforms),_=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(v)),n.packedInputs&&(S+=p),[S,b,_,f,w,m,n.userCode].join("\n")}function l(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[s,i]=e.shapeInfo.texShape;if(1===s&&1===i)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const a=f(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${a});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${a});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${m(e)}\n      }\n    `;const s=e.shapeInfo.texShape,i=s[0],a=s[1];if(1===a&&1===i)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=f(n);return 1===a?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${i}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${i}, ${a}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,i="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape;if(null!=a&&r.D5U.arraysEqual(n,a)){if(t)return`\n      float ${i}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `;const e=a[0];return`\n    float ${i}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${e}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `}const{newShape:o,keptDims:u}=r.D5U.squeezeShape(n),c=o;if(c.length<n.length){const n=["row","col"];return`\n      ${l(x(e,c),t)}\n      float ${i}(int row, int col) {\n        return ${i}(${v(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${i}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${m(e)}\n      }\n    `;const h=a[0],d=a[1],p=f(s);return 1===d?t?`\n      float ${i}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${i}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${h}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `:1===h?t?`\n      float ${i}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${i}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${d}.0, 0.5);\n      return sampleTexture(${s}, uv);\n    }\n  `:t?`\n      float ${i}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s}Shape[1] + col + ${p};\n        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n  float ${i}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${p};\n    vec2 uv = uvFromFlat(${h}, ${d}, index);\n    return sampleTexture(${s}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,i="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[1]*n[2],o=n[2],{newShape:u,keptDims:c}=r.D5U.squeezeShape(n),h=u;if(h.length<n.length){const n=["row","col","depth"];return`\n        ${l(x(e,h),t)}\n        float ${i}(int row, int col, int depth) {\n          return ${i}(${v(n,c)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${i}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${o}, 1)));\n        ${m(e)}\n      }\n    `;const d=e.shapeInfo.texShape,p=d[0],g=d[1],y=e.shapeInfo.flatOffset;if(g===a&&null==y)return t?`\n      float ${i}(int row, int col, int depth) {\n        int stride1 = ${s}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n        float ${i}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${o}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${g}.0, ${p}.0);\n          return sampleTexture(${s}, uv);\n        }\n      `;if(g===o&&null==y)return t?`\n      float ${i}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${i}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${g}.0, ${p}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `;const b=f(s);return t?`\n    float ${i}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${s}Shape[1] * ${s}Shape[2];\n      int stride1 = ${s}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${b};\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n      return sampleTexture(${s}, uv);\n    }\n    `:`\n      float ${i}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${o} + depth + ${b};\n        vec2 uv = uvFromFlat(${p}, ${g}, index);\n        return sampleTexture(${s}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,i="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[3],o=n[2]*a,u=n[1]*o,{newShape:c,keptDims:h}=r.D5U.squeezeShape(n);if(c.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${l(x(e,c),t)}\n      float ${i}(int row, int col, int depth, int depth2) {\n        return ${i}(${v(n,h)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${i}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${u}, ${o}, ${a}, 1)));\n        ${m(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,g=p[0],y=p[1],b=`int stride2 = ${s}Shape[3];`,w=`int stride1 = ${s}Shape[2] * stride2;`,_=`int stride0 = ${s}Shape[1] * stride1;`;if(y===u&&null==d)return t?`\n      float ${i}(int row, int col, int depth, int depth2) {\n        ${b}\n        ${w}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${i}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${o}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${y}.0, ${g}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;if(y===a&&null==d)return t?`\n      float ${i}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${i}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${y}.0, ${g}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;const S=f(s);return t?`\n    float ${i}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${b}\n      ${w}\n      ${_}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${S});\n      return sampleTexture(${s}, uv);\n    }\n  `:`\n    float ${i}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${u} + col * ${o} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${g}, ${y}, index + ${S});\n      return sampleTexture(${s}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),i=t[4],a=t[3]*i,o=t[2]*a,u=t[1]*o,{newShape:c,keptDims:h}=r.D5U.squeezeShape(t);if(c.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${l(x(e,c))}\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        return ${s}(${v(t,h)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${u}, ${o}, ${a}, ${i})) +\n          depth3;\n        ${m(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,g=p[0],y=p[1];if(y===u&&null==d)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${o}, ${a}, ${i}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${y}.0, ${g}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(y===i&&null==d)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${y}.0, ${g}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${u} + col * ${o} + depth * ${a} +\n          depth2 * ${i} + depth3 + ${f(n)};\n      vec2 uv = uvFromFlat(${g}, ${y}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:i,keptDims:a}=r.D5U.squeezeShape(t);if(i.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${l(x(e,i))}\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${s}(${v(t,a)});\n      }\n    `}const o=t[5],u=t[4]*o,c=t[3]*u,h=t[2]*c,d=t[1]*h;if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${d}, ${h}, ${c}, ${u})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${o}, 1)));\n        ${m(e)}\n      }\n    `;const p=e.shapeInfo.flatOffset,g=e.shapeInfo.texShape,y=g[0],b=g[1];if(b===d&&null==p)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${h}, ${c}, ${u}, ${o})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${b}.0, ${y}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(b===o&&null==p)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${b}.0, ${y}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${d} + col * ${h} + depth * ${c} +\n          depth2 * ${u} + depth3 * ${o} + depth4 + ${f(n)};\n      vec2 uv = uvFromFlat(${y}, ${b}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function u(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${(0,s.A)().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),i=e.shapeInfo.texShape,a=(0,s.A)();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `;const o=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${o[0]}, ${o[1]}, index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,i=e.name,a="get"+i.charAt(0).toUpperCase()+i.slice(1),o=e.shapeInfo.texShape,l=o[0],u=o[1],c=(0,s.A)();if(null!=o&&r.D5U.arraysEqual(n,o))return t?`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}TexShape[1], ${i}TexShape[0]);\n\n        return ${c.texture2D}(${i}, uv);\n      }\n    `:`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${u}.0, ${l}.0);\n\n        return ${c.texture2D}(${i}, uv);\n      }\n    `;if(t)return`\n    vec4 ${a}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${i}TexShape[0]) / 2.0), ceil(float(${i}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${i}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${c.texture2D}(${i}, uv);\n    }\n  `;const h=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${h[0]}, ${h[1]}, row, col);\n      return ${c.texture2D}(${i}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,i="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,o=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===n[0]){const r=[1,2],s=["b","row","col"];return`\n        ${u(x(e,n.slice(1)),t)}\n        vec4 ${i}(int b, int row, int col) {\n          return ${i}(${v(s,r)});\n        }\n      `}const l=(0,s.A)();if(t)return`\n    vec4 ${i}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `;const c=o[0],h=o[1],d=Math.ceil(n[2]/2);return`\n    vec4 ${i}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${c}, ${h}, ${d*Math.ceil(n[1]/2)}, ${d}, b, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),i=(0,s.A)();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${i.texture2D}(${n}, uv);\n    }\n  `;const a=e.shapeInfo.logicalShape,o=a.length,l=e.shapeInfo.texShape,u=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)],c=u[0],h=u[1],d=Math.ceil(a[o-1]/2);let p=d*Math.ceil(a[o-2]/2),f="int b, int row, int col",m=`b * ${p} + (row / 2) * ${d} + (col / 2)`;for(let e=2;e<o-1;e++)f=`int b${e}, `+f,p*=a[o-e-1],m=`b${e} * ${p} + `+m;return`\n    vec4 ${r}(${f}) {\n      int index = ${m};\n      int texR = index / ${h};\n      int texC = index - texR * ${h};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}, ${c});\n      return ${i.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const c="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",h="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",d="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",p="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function f(e){return`offset${e}`}function m(e){const t=e.name,n=r.D5U.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function g(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function y(e,t,n){const{newShape:s,keptDims:i}=r.D5U.squeezeShape(t),a=t.length,o=e&&3===a&&1===t[0],l=o?t.slice(1):s,u=!e&&a>1&&!r.D5U.arraysEqual(t,n)&&s.length<a||o;return{useSqueezeShape:u,uniformShape:u?l:t,keptDims:i}}function x(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function v(e,t){return t.map((t=>e[t])).join(", ")}},38110:(e,t,n)=>{"use strict";n.d(t,{Kn:()=>i,RW:()=>s,al:()=>a,ku:()=>o,nc:()=>l,ye:()=>u});var r=n(6639);function s(e,t,n="index"){const s=r.D5U.computeStrides(t);return s.map(((t,r)=>`int ${e[r]} = ${n} / ${t}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`};`)).join("")}function i(e,t,n="index"){const s=r.D5U.computeStrides(t);return s.map(((t,r)=>`int ${e[r]} = ${n} / outShapeStrides[${r}]; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * outShapeStrides[${r}]`:`index -= ${e[r]} * outShapeStrides[${r}]`};`)).join("")}function a(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),s=new Array(n-1);s[n-2]=r[n-1];for(let e=n-3;e>=0;--e)s[e]=`(${s[e+1]} * ${r[e+1]})`;return s}(e.map(((e,t)=>t)),t);return r.map(((t,s)=>`int ${e[s]} = ${n} / ${r[s]}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${r[s]}`:`index -= ${e[s]} * ${r[s]}`};`)).join("")}function o(e){const t=r.D5U.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}function l(){return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n"}const u="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n"},95951:(e,t,n)=>{"use strict";n.d(t,{a:()=>s});var r=n(55156);class s{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=(0,r.kW)(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return i.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let s;s=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${i[t]} = start[${t}] + coords.${i[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${s}\n        setOutput(getSource(${n}));\n      }\n    `}}const i=["x","y","z","w","u","v"]},75935:(e,t,n)=>{"use strict";n.d(t,{T:()=>i});var r=n(21034),s=n(55156);class i{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=(0,s.kW)(this.rank),n=(0,r.Ky)("coords",this.rank),i=(0,r.Ky)("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${i.slice(-2).join()})`,o=`getChannel(getSource(${i.join()}), ${a})`,l=`\n      result.x = ${o};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${i[this.rank-1]};\n        result.y = ${o};\n        --${i[this.rank-1]};\n      }\n    `,u=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${i[this.rank-2]};\n        result.z = ${o};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${i[this.rank-1]};\n          result.w = ${o};\n        }\n      }\n    `,c=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${i[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${c}\n        vec4 result = vec4(0.);\n        ${l}\n        ${u}\n        setOutput(result);\n      }\n    `}}},14334:(e,t,n)=>{"use strict";n.d(t,{U:()=>s});var r=n(55156);class s{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const s=n.length,i=(0,r.kW)(n.length),a=(0,r.kW)(n.length);let o="";if(1===s)o="coords * strides + begin";else{let e=0;o=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${i} begin = ${i}(${e});\n      ${i} strides = ${i}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${o}));\n      }\n    `}}},18378:(e,t,n)=>{"use strict";n.d(t,{Se:()=>h,Sq:()=>d,V9:()=>i,Yz:()=>u,kk:()=>o,m1:()=>r,qe:()=>c,v2:()=>s,yb:()=>l});var r,s,i,a=n(6639);function o(e,t){return[t,e]}function l(e,t){return e*t}function u(e){const t=a.D5U.sizeFromShape(e),n=Math.ceil(t/4);return a.D5U.sizeToSquarishShape(n)}function c(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function h(e,t){const[n,r]=c(e,t);return n*r*4}function d(e,t){const n=e;let r,s,i,o,l,u,c,h,d,p;return 2===(0,a.OBj)().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,i=n.RGBA16F,o=n.RGBA32F,l=n.RED,c=4,h=1,d=n.HALF_FLOAT,p=n.FLOAT,u=n.RGBA8):(r=e.RGBA,s=e.RGBA,i=e.RGBA,o=n.RGBA,l=e.RGBA,c=4,h=4,d=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT,u=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:o,textureFormatFloat:l,downloadTextureFormat:u,downloadUnpackNumChannels:c,defaultNumChannels:h,textureTypeHalfFloat:d,textureTypeFloat:p}}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(r||(r={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(s||(s={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(i||(i={}))},42490:(e,t,n)=>{"use strict";n.d(t,{I:()=>a});var r=n(6639),s=n(4328),i=n(18378);class a{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=l(t,n),s=u(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=o(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[s].shift();return this.usedTextures[s].push(e),e}let c;return r===i.V9.PACKED_2X2_FLOAT32?c=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===i.V9.PACKED_2X2_FLOAT16?c=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===i.V9.UNPACKED_FLOAT32?c=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===i.V9.UNPACKED_FLOAT16?c=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===i.V9.PACKED_4X1_UNSIGNED_BYTE&&(c=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(c),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),c}releaseTexture(e,t,n,s){if(null==this.freeTextures)return;const i=l(n,s),a=u(t,i,s);a in this.freeTextures||(this.freeTextures[a]=[]);const c=o(t,i,this.gpgpu.gl,this.gpgpu.textureConfig,s),h=(0,r.OBj)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==h&&this._numBytesAllocated>h?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=c):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=c),this.numUsedTextures--;const d=this.usedTextures[a],p=d.indexOf(e);if(p<0)throw new Error("Cannot release a texture that was never provided by this texture manager");d.splice(p,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function o(e,t,n,r,a){const o=function(e,t){switch(e){case i.V9.PACKED_2X2_FLOAT32:return(0,s.getInternalFormatForPackedMatrixTexture)(t);case i.V9.PACKED_2X2_FLOAT16:return(0,s.getInternalFormatForFloat16PackedMatrixTexture)(t);case i.V9.UNPACKED_FLOAT32:return(0,s.getInternalFormatForFloat32MatrixTexture)(t);case i.V9.UNPACKED_FLOAT16:return(0,s.getInternalFormatForFloat16MatrixTexture)(t);case i.V9.PACKED_4X1_UNSIGNED_BYTE:return(0,s.getInternalFormatForUnsignedBytesMatrixTexture)(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let l;if(a){const[t,n]=(0,i.qe)(e[0],e[1]);l=t*n}else{const[t,n]=(0,i.kk)(e[0],e[1]);l=t*n}const u=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,o);return l*u}function l(e,t){if(e===i.v2.UPLOAD)return i.V9.PACKED_2X2_FLOAT32;if(e===i.v2.RENDER||null==e)return function(e){return(0,r.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?i.V9.PACKED_2X2_FLOAT32:i.V9.UNPACKED_FLOAT32:e?i.V9.PACKED_2X2_FLOAT16:i.V9.UNPACKED_FLOAT16}(t);if(e===i.v2.DOWNLOAD||e===i.v2.PIXELS)return i.V9.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function u(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}},94057:(e,t,n)=>{"use strict";n.d(t,{S:()=>s});var r=n(55156);class s{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const s=(0,r.kW)(this.rank),i=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${i}));\n      }\n    `}}},95568:(e,t,n)=>{"use strict";n.d(t,{I:()=>r,R:()=>s});class r{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class s{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}},63804:(e,t,n)=>{"use strict";n.d(t,{l:()=>r});class r{constructor(e,t,n,r,s,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const a="nearest"===n?1:2;let o;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${a} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}},34615:(e,t,n)=>{"use strict";n.d(t,{H:()=>s});var r=n(55156);class s{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const s=(0,r.kW)(this.rank),i=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${s} resRC = getOutputCoords();\n      setOutput(getA(${i}));\n    }\n    `}}},93850:(e,t,n)=>{"use strict";n.d(t,{H:()=>i});var r=n(21034),s=n(55156);class i{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const i=(0,s.kW)(this.rank),a=(0,r.k6)("rc",this.rank),o=new Array(this.rank);for(let e=0;e<t.length;e++)o[t[e]]=a[e];const l=`vec2(${o.slice(-2).join()})`,u=`++${a[this.rank-1]} < ${n[this.rank-1]}`,c=`getChannel(getA(${o.join()}), ${l})`;this.userCode=`\n    void main() {\n      ${i} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${c};\n      if(${u}) {\n        result[1] = ${c};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${c};\n        if(${u}) {\n          result[3] = ${c};\n        }\n      }\n      setOutput(result);\n    }\n    `}}},84518:(e,t,n)=>{"use strict";n.d(t,{Cv:()=>l,D1:()=>i,Et:()=>o,RX:()=>u,Tq:()=>d,bl:()=>h,eW:()=>c,l:()=>s,t$:()=>a});var r=n(16697);class s{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=(0,r.C9)(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const i="if (isnan(x)) return x;",a="return x;",o="return abs(x);",l="return (x >= 0.0) ? x : (exp(x) - 1.0);",u=i+"\n  return (x < 0.0) ? 0.0 : x;\n",c=i+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",h="return x;",d="return 1.0 / (1.0 + exp(-1.0 * x));"},29365:(e,t,n)=>{"use strict";n.d(t,{Cv:()=>i,RX:()=>a,Tq:()=>l,cc:()=>u,eW:()=>o,t$:()=>s});var r=n(16697);const s="return x;",i="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",a="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",o="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",l="return 1.0 / (1.0 + exp(-1.0 * x));";class u{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=(0,r.C9)(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}},84595:(e,t,n)=>{"use strict";n.d(t,{W:()=>a});var r=n(16697),s=n(21034),i=n(55156);class a{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=(0,r.C9)(this.outputShape.length);const t=e.length,n=(0,s.Ky)("rc",t),a=(0,i.kW)(t),o=(0,s.Qc)(t,n),l=n.slice(-2),u=t<=1?"rc":`vec2(${l.join(",")})`;this.userCode=`\n      void main() {\n        ${a} rc = getOutputCoords();\n        vec4 packedInput = getA(${o});\n\n        setOutput(getChannel(packedInput, ${u}));\n      }\n    `}}},91075:(e,t,n)=>{"use strict";n.d(t,{i:()=>r});const r="3.21.0"},25522:(e,t,n)=>{"use strict";n.d(t,{Af:()=>l.A,QC:()=>a.QC,fZ:()=>i,kS:()=>u,lz:()=>s,nd:()=>o.nd});var r=n(6639),s=n(4328),i=n(91906),a=n(94739),o=n(90740),l=n(95489);function u(){(0,r.OBj)().set("WEBGL_FORCE_F16_TEXTURES",!0)}},91906:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assertNotComplex:()=>re,bindCanvasToFramebuffer:()=>k,bindColorTextureToFramebuffer:()=>N,bindTextureToProgramUniformSampler:()=>R,bindTextureUnit:()=>M,bindVertexBufferToProgramAttribute:()=>E,callAndCheck:()=>a,canBeRepresented:()=>u,createFragmentShader:()=>p,createFramebuffer:()=>T,createProgram:()=>g,createStaticIndexBuffer:()=>b,createStaticVertexBuffer:()=>v,createTexture:()=>_,createVertexShader:()=>d,getBatchDim:()=>$,getExtensionOrThrow:()=>h,getFramebufferErrorMessage:()=>O,getMaxTexturesInShader:()=>K,getNumChannels:()=>w,getProgramUniformLocation:()=>I,getProgramUniformLocationOrThrow:()=>A,getRowsCols:()=>B,getShapeAs3D:()=>U,getTextureShapeFromLogicalShape:()=>z,getWebGLDisjointQueryTimerVersion:()=>Y,getWebGLErrorMessage:()=>c,getWebGLMaxTextureSize:()=>j,hasExtension:()=>J,isCapableOfRenderingToFloatTexture:()=>Q,isDownloadFloatTextureEnabled:()=>ee,isReshapeFree:()=>G,isWebGLFenceEnabled:()=>ne,isWebGLVersionEnabled:()=>Z,linkProgram:()=>y,logShaderSourceAndInfoLog:()=>m,resetMaxTextureSize:()=>X,resetMaxTexturesInShader:()=>q,unbindColorTextureFromFramebuffer:()=>L,unbindTextureUnit:()=>C,validateFramebuffer:()=>D,validateProgram:()=>x,validateTextureSize:()=>S});var r=n(6639),s=n(90740),i=n(18378);function a(e,t){const n=t();return(0,r.OBj)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+c(e,t))}(e),n}const o=5.96e-8,l=65504;function u(e){return!!((0,r.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||o<Math.abs(e)&&Math.abs(e)<l)}function c(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function h(e,t){return P(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function d(e,t){const n=P(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(a(e,(()=>e.shaderSource(n,t))),a(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function p(e,t){const n=P(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(a(e,(()=>e.shaderSource(n,t))),a(e,(()=>e.compileShader(n))),(0,r.OBj)().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw m(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const f=/ERROR: [0-9]+:([0-9]+):/g;function m(e,t){const n=f.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const s=+n[1],i=e.split("\n"),a=i.length.toString().length+2,o=i.map(((e,t)=>r.D5U.rightPad((t+1).toString(),a)+e));let l=0;for(let e=0;e<o.length;e++)l=Math.max(o[e].length,l);const u=o.slice(0,s-1),c=o.slice(s-1,s),h=o.slice(s);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${r.D5U.rightPad(c[0],l)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(h.join("\n"))}function g(e){return P(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}function y(e,t){if(a(e,(()=>e.linkProgram(t))),!(0,r.OBj)().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function x(e,t){if(a(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function v(e,t){const n=P(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return a(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),a(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function b(e,t){const n=P(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return a(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),a(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function w(){return 2===(0,r.OBj)().getNumber("WEBGL_VERSION")?1:4}function _(e){return P(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}function S(e,t){const n=(0,r.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}function T(e){return P(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}function E(e,t,n,r,s,i,o){const l=e.getAttribLocation(t,n);return-1!==l&&(a(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),a(e,(()=>e.vertexAttribPointer(l,s,e.FLOAT,!1,i,o))),a(e,(()=>e.enableVertexAttribArray(l))),!0)}function M(e,t,n){F(e,n),a(e,(()=>e.activeTexture(e.TEXTURE0+n))),a(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function C(e,t){F(e,t),a(e,(()=>e.activeTexture(e.TEXTURE0+t))),a(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function A(e,t,n){return P(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}function I(e,t,n){return e.getUniformLocation(t,n)}function R(e,t,n,r){a(e,(()=>M(e,t,r))),a(e,(()=>e.uniform1i(n,r)))}function k(e){a(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),a(e,(()=>e.viewport(0,0,e.canvas.width,e.canvas.height))),a(e,(()=>e.scissor(0,0,e.canvas.width,e.canvas.height)))}function N(e,t,n){a(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),a(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function L(e,t){a(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),a(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function D(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+O(e,t))}function O(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function P(e,t,n){const r=a(e,(()=>t()));if(null==r)throw new Error(n);return r}function F(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)}function $(e,t=2){return r.D5U.sizeFromShape(e.slice(0,e.length-t))}function B(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function U(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[$(e),...B(e)]),t}function z(e,t=!1){let n=(0,r.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=(0,r.OBj)().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(s===1/0&&(0,r.OBj)().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=n/2),t&&(n*=2,s*=2,1===(e=e.map(((t,n)=>n>=e.length-2?r.D5U.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=r.D5U.squeezeShape(e);e=t.newShape}let i=r.D5U.sizeFromShape(e),a=null;e.length<=1&&i<=n?a=[1,i]:2===e.length&&e[0]<=n&&e[1]<=n?a=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?a=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?a=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?a=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(a=[e[0],e[1]*e[2]*e[3]]);const o=null!=a&&Math.max(...a)>s&&Math.min(...a)<=(t?2:1)&&Math.min(...a)>0;if(null==a||o)if(t){const t=$(e);let n=2,s=2;e.length&&([n,s]=B(e)),i=t*(n/2)*(s/2),a=r.D5U.sizeToSquarishShape(i).map((e=>2*e))}else a=r.D5U.sizeToSquarishShape(i);return a}function V(e){return e%2==0}function G(e,t){if(e=e.slice(-2),t=t.slice(-2),r.D5U.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(V(n)&&V(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&V(e[0])&&V(t[0])}let W,H;function j(e){if(null==W){const t=(0,s.jl)(e);W=t.getParameter(t.MAX_TEXTURE_SIZE)}return W}function X(){W=null}function q(){H=null}function K(e){if(null==H){const t=(0,s.jl)(e);H=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,H)}function Y(e){if(0===e)return 0;let t;const n=(0,s.jl)(e);return t=J(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:J(n,"EXT_disjoint_timer_query")?1:0,t}function J(e,t){return null!=e.getExtension(t)}function Z(e){try{if(null!=(0,s.jl)(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function Q(e){if(0===e)return!1;const t=(0,s.jl)(e);if(1===e){if(!J(t,"OES_texture_float"))return!1}else if(!J(t,"EXT_color_buffer_float"))return!1;return te(t)}function ee(e){if(0===e)return!1;const t=(0,s.jl)(e);if(1!==e){if(J(t,"EXT_color_buffer_float"))return te(t);const e="EXT_color_buffer_half_float";if(J(t,e)){const n=t.getExtension(e);return function(e,t){const n=(0,i.Sq)(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(s),a}(t,n)}return!1}return!!J(t,"OES_texture_float")&&(!!J(t,"WEBGL_color_buffer_float")&&te(t))}function te(e){const t=(0,i.Sq)(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),s}function ne(e){return 2===e&&null!=(0,s.jl)(e).fenceSync}function re(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&r.D5U.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}},68713:(e,t,n)=>{"use strict";n.d(t,{JL:()=>r,Zu:()=>s});class r{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class s{refCount(e){return i("refCount")}incRef(e){return i("incRef")}timerAvailable(){return!0}time(e){return i("time")}read(e){return i("read")}readSync(e){return i("readSync")}readToGPU(e,t){return i("readToGPU")}numDataIds(){return i("numDataIds")}disposeData(e,t){return i("disposeData")}write(e,t,n){return i("write")}move(e,t,n,r,s){return i("move")}memory(){return i("memory")}floatPrecision(){return i("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return i("dispose")}}function i(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},73417:(e,t,n)=>{"use strict";n.r(t),n.d(t,{ERF_A1:()=>x.Aj,ERF_A2:()=>x.py,ERF_A3:()=>x.Kh,ERF_A4:()=>x.Qy,ERF_A5:()=>x.eh,ERF_P:()=>x.IA,PARALLELIZE_THRESHOLD:()=>c.g,RowPartitionType:()=>u.b2,SELU_SCALE:()=>y.$,SELU_SCALEALPHA:()=>y.y,applyActivation:()=>l.QH,assertAndGetBroadcastShape:()=>i.assertAndGetBroadcastShape,assertAxesAreInnerMostDims:()=>s.lB,assertParamsConsistent:()=>a.o,assignToTypedArray:()=>b.KV,axesAreInnerMostDims:()=>s.YB,calculateShapes:()=>g.calculateShapes,checkEinsumDimSizes:()=>w.NX,checkPadOnDimRoundingMode:()=>o.m,combineLocations:()=>s.Vh,combineRaggedTensorToTensorShapes:()=>u.Qd,complexWithEvenIndex:()=>b.GH,complexWithOddIndex:()=>b.H3,computeConv2DInfo:()=>o.Ix,computeConv3DInfo:()=>o.jw,computeDefaultPad:()=>o.aO,computeDilation2DInfo:()=>o.Rf,computeOptimalWindowSize:()=>c.A,computeOutAndReduceShapes:()=>s.kz,computeOutShape:()=>a.N,computePool2DInfo:()=>o.Xw,computePool3DInfo:()=>o.pl,convertConv2DDataFormat:()=>o.sl,decodeEinsumEquation:()=>w.I2,eitherStridesOrDilationsAreOne:()=>o.jT,expandShapeToKeepDim:()=>s.rv,exponent:()=>b.ts,exponents:()=>b.mG,fromStringArrayToUint8:()=>A,fromUint8ToStringArray:()=>C,getAxesPermutation:()=>s.Q3,getBroadcastDims:()=>i.getBroadcastDims,getComplexWithIndex:()=>b.cC,getEinsumComputePath:()=>w.O5,getEinsumPermutation:()=>w.lu,getFusedBiasGradient:()=>l.pf,getFusedDyActivation:()=>l.Fr,getImageCenter:()=>p.Q,getInnerMostAxes:()=>s.sY,getPermuted:()=>f.xw,getRaggedRank:()=>u.Qh,getReductionAxes:()=>i.getReductionAxes,getReshaped:()=>f.R7,getReshapedPermuted:()=>f.TK,getRowPartitionTypesHelper:()=>u.zb,getSliceBeginCoords:()=>f.oP,getSliceSize:()=>f.qX,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>S.h,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>S.E3,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>S.I_,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>T.rP,getSparseReshapeInputOutputMismatchErrorMessage:()=>T.aY,getSparseReshapeInputOutputMultipleErrorMessage:()=>T.yv,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>T.y5,getSparseReshapeNegativeOutputDimErrorMessage:()=>T.Y6,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>E.u6,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>E.N5,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>E.XL,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>E.GW,getUndoAxesPermutation:()=>s.LJ,isIdentityPermutation:()=>w.qF,log:()=>v.c,mergeRealAndImagArrays:()=>b.Cs,prepareAndValidate:()=>m.prepareAndValidate,prepareSplitSize:()=>_.O,segment_util:()=>M,shouldFuse:()=>l.uy,slice_util:()=>h,splitRealAndImagArrays:()=>b.cf,tupleValuesAreOne:()=>o.I0,upcastType:()=>d.x8,validateDefaultValueShape:()=>u.Ys,validateInput:()=>g.validateInput,validateUpdateShape:()=>g.validateUpdateShape,warn:()=>v.Z});var r=n(59155),s=n(83591),i=n(72200),a=n(30398),o=n(2582),l=n(19323),u=n(74825),c=n(25466),h=n(37650),d=n(71221),p=n(29645),f=n(87199),m=n(37410),g=n(33028),y=n(43179),x=n(52176),v=n(64706),b=n(70885),w=n(40939),_=n(34099),S=n(90820),T=n(49139),E=n(88153),M=n(14931);function C(e){try{return e.map((e=>(0,r.decodeString)(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function A(e){return e.map((e=>(0,r.encodeString)(e)))}},70885:(e,t,n)=>{"use strict";function r(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function s(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function i(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function a(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function o(e,t){return{real:e[2*t],imag:e[2*t+1]}}function l(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function u(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const i=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(i),r[s]=Math.sin(i)}return{real:n,imag:r}}function c(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}n.d(t,{Cs:()=>r,GH:()=>i,H3:()=>a,KV:()=>l,cC:()=>o,cf:()=>s,mG:()=>u,ts:()=>c})},40939:(e,t,n)=>{"use strict";n.d(t,{I2:()=>l,NX:()=>c,O5:()=>h,lu:()=>u,qF:()=>d});var r=n(20569);const s="->",i=/->/g,a=",",o="...";function l(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(i,"").length)/s.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${s}").`);const[l,u]=e.split(s);(0,r.hu)(-1===l.indexOf(o),(()=>`The ellipsis notation ("${o}") is not supported yet.`));const c=l.split(a),h=c.length;if(t!==h)throw new Error(`Expected ${h} input tensors, received ${t}`);if(h>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const d=[];for(let e=0;e<u.length;++e){const t=u[e];if(!c.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===d.indexOf(t)&&d.push(t)}for(let e=0;e<l.length;++e){const t=l[e];-1===d.indexOf(t)&&t!==a&&d.push(t)}const p=new Array(c.length);for(let e=0;e<h;++e){if(new Set(c[e].split("")).size!==c[e].length)throw new Error(`Found duplicate axes in input component ${c[e]}. Support for duplicate axes in input is not implemented yet.`);p[e]=[];for(let t=0;t<c[e].length;++t)p[e].push(d.indexOf(c[e][t]))}const f=d.length,m=[];for(let e=u.length;e<f;++e)m.push(e);return{allDims:d,summedDims:m,idDims:p}}function u(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function c(e,t,n){const s=new Array(e);for(let e=0;e<n.length;++e){const i=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===s[t[e][n]]?s[t[e][n]]=i[n]:(0,r.hu)(s[t[e][n]]===i[n],(()=>`Expected dimension ${s[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(i)}, but got dimension ${i[n]}`))}}function h(e,t){const n=e,r=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let e=0;e<s;++e)r.push([]);const i=[];for(let e=0;e<n.length;++e){const s=p(t,n[e]);for(const t of s)-1===i.indexOf(t)&&(r[e].push(t),i.push(t))}return{path:n,steps:r}}function d(e){return e.every(((e,t)=>e===t))}function p(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}},47242:(e,t,n)=>{"use strict";n.d(t,{nonMaxSuppressionV3Impl:()=>r.GP,nonMaxSuppressionV4Impl:()=>r.qP,nonMaxSuppressionV5Impl:()=>r.pA,whereImpl:()=>s.Z});var r=n(12667),s=n(48333)},12667:(e,t,n)=>{"use strict";n.d(t,{GP:()=>s,pA:()=>a,qP:()=>i});var r=n(86322);function s(e,t,n,r,s){return o(e,t,n,r,s,0)}function i(e,t,n,r,s,i){return o(e,t,n,r,s,0,!1,i,!0)}function a(e,t,n,r,s,i){return o(e,t,n,r,s,i,!0)}function o(e,t,n,s,i,a,o=!1,h=!1,d=!1){const p=[];for(let e=0;e<t.length;e++)t[e]>i&&p.push({score:t[e],boxIndex:e,suppressBeginIndex:0});p.sort(c);const f=a>0?-.5/a:0,m=[],g=[];for(;m.length<n&&p.length>0;){const t=p.pop(),{score:n,boxIndex:a,suppressBeginIndex:o}=t;if(n<i)break;let h=!1;for(let n=m.length-1;n>=o;--n){const r=l(e,a,m[n]);if(r>=s){h=!0;break}if(t.score=t.score*u(s,f,r),t.score<=i)break}t.suppressBeginIndex=m.length,h||(t.score===n?(m.push(a),g.push(t.score)):t.score>i&&(0,r.v)(p,t,c))}const y=m.length,x=n-y;h&&x>0&&(m.push(...new Array(x).fill(0)),g.push(...new Array(x).fill(0)));const v={selectedIndices:m};return o&&(v.selectedScores=g),d&&(v.validOutputs=y),v}function l(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),i=Math.min(r[0],r[2]),a=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(o-i)*(l-a),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(i,u),g=Math.max(a,c),y=Math.min(o,h),x=Math.min(l,d),v=Math.max(y-m,0)*Math.max(x-g,0);return v/(p+f-v)}function u(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function c(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}},86322:(e,t,n)=>{"use strict";function r(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,i=0,a=!1;for(;r<s;){i=r+(s-r>>>1);const o=n(t,e[i]);o>0?r=i+1:(s=i,a=!o)}return a?r:-r-1}(e,t,n||s)}(e,t,n),i=r<0?-(r+1):r;e.splice(i,0,t)}function s(e,t){return e>t?1:e<t?-1:0}n.d(t,{v:()=>r})},48333:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(72657);function s(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const s=(0,r.f)(e,"int32"),i=(0,r.f)([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const r=s.indexToLoc(n[t]),a=t*e.length;i.values.set(r,a)}return i.toTensor()}},45898:(e,t,n)=>{"use strict";n.d(t,{$HU:()=>v.$HU,$g6:()=>v.$g6,$w:()=>v.$w,Acj:()=>v.Acj,BHj:()=>c.BHj,BMI:()=>v.BMI,BiW:()=>v.BiW,Byc:()=>v.Byc,C2$:()=>g,CAk:()=>v.CAk,CnY:()=>h.Cn,D2d:()=>v.D2d,D5U:()=>o,DlI:()=>v.DlI,Eh3:()=>v.Eh3,FKq:()=>v.FKq,G3Y:()=>v.G3Y,GBy:()=>v.GBy,GDt:()=>y,Gcp:()=>v.Gcp,HEU:()=>v.HEU,HHK:()=>c.HHK,HZH:()=>v.HZH,Hhh:()=>v.Hhh,Hmb:()=>v.Hmb,IHx:()=>c.IHx,IKK:()=>v.IKK,IMb:()=>v.IMb,Izb:()=>c.Izb,J$2:()=>v.J$2,JLz:()=>x.JL,J_u:()=>v.J_u,JhU:()=>v.JhU,Jyw:()=>s,L8s:()=>v.L8s,L9e:()=>c.L9e,M2y:()=>v.M2y,MIZ:()=>v.MIZ,MRv:()=>v.MRv,MZg:()=>v.MZg,NEP:()=>v.NEP,NZg:()=>v.NZg,N_N:()=>h.N_,O3z:()=>v.O3z,OAf:()=>v.OAf,OBj:()=>p.OB,OR:()=>v.OR,OU7:()=>v.OU7,OV7:()=>v.OV7,Omj:()=>v.Omj,Oyi:()=>v.Oyi,PYm:()=>v.PYm,PhF:()=>v.PhF,QCc:()=>v.QCc,QRR:()=>v.QRR,Qg5:()=>v.Qg5,QiL:()=>v.QiL,Qvg:()=>v.Qvg,RFZ:()=>v.RFZ,ROF:()=>v.ROF,RQH:()=>v.RQH,RRF:()=>c.RRF,RuY:()=>v.RuY,SRH:()=>h.SR,SX0:()=>v.SX0,SYM:()=>v.SYM,SbG:()=>v.SbG,SpW:()=>v.SpW,T0n:()=>v.T0n,TQc:()=>v.TQc,TR1:()=>v.TR1,ToN:()=>v.ToN,Tr8:()=>v.Tr8,UFq:()=>c.UFq,Uyb:()=>v.Uyb,VGw:()=>v.VGw,Vbg:()=>v.Vbg,VcC:()=>v.VcC,VfG:()=>v.VfG,W0H:()=>v.W0H,Wap:()=>m,XD2:()=>c.XD2,XLQ:()=>c.XLQ,XLW:()=>v.XLW,XeE:()=>c.XeE,Xhn:()=>i,XkS:()=>v.XkS,Xze:()=>v.Xze,Y0y:()=>v.Y0y,YDk:()=>l.YD,YFo:()=>v.YFo,YoZ:()=>v.YoZ,ZbH:()=>v.ZbH,ZjV:()=>v.ZjV,Zuw:()=>x.Zu,Zz9:()=>v.Zz9,_JP:()=>v._JP,_V0:()=>v._V0,_Yw:()=>v._Yw,_k9:()=>v._k9,_tC:()=>v._tC,a5O:()=>v.a5O,aJk:()=>v.aJk,avt:()=>v.avt,b9H:()=>v.b9H,bK0:()=>v.bK0,bV0:()=>v.bV0,c17:()=>v.c17,cWu:()=>v.cWu,cie:()=>v.cie,cye:()=>v.cye,d9v:()=>c.d9v,dC7:()=>c.dC7,dDz:()=>v.dDz,deh:()=>v.deh,dpD:()=>v.dpD,dt4:()=>c.dt4,e07:()=>v.e07,e6w:()=>v.e6w,e7N:()=>v.e7N,eBW:()=>v.eBW,eEB:()=>v.eEB,eZ0:()=>v.eZ0,esB:()=>l.es,f3b:()=>c.f3b,gJX:()=>v.gJX,glt:()=>f.g,h8e:()=>v.h8e,hdR:()=>v.hdR,hiC:()=>c.hiC,i5y:()=>v.i5y,iD$:()=>c.iD$,iHb:()=>v.iHb,iJz:()=>v.iJz,iWB:()=>v.iWB,iZT:()=>v.iZT,ik2:()=>v.ik2,io:()=>r,jMg:()=>v.jMg,jQk:()=>v.jQk,jQs:()=>v.jQs,jeX:()=>v.jeX,jqO:()=>h.jq,kU:()=>v.kU,knu:()=>c.knu,kpP:()=>v.kpP,kuN:()=>a,kuV:()=>v.kuV,lls:()=>c.lls,luS:()=>v.luS,luU:()=>c.luU,lub:()=>h.lu,lyA:()=>v.lyA,mKl:()=>v.mKl,mTV:()=>v.mTV,mc4:()=>v.mc4,mhS:()=>v.mhS,mm_:()=>v.mm_,n9L:()=>v.n9L,nhH:()=>v.nhH,nr8:()=>v.nr8,o0g:()=>v.o0g,o2y:()=>v.o2y,oFR:()=>v.oFR,oHH:()=>v.oHH,oT6:()=>v.oT6,odF:()=>c.odF,p2w:()=>v.p2w,p4S:()=>v.p4S,pe_:()=>v.pe_,pju:()=>c.pju,q1x:()=>v.q1x,q2K:()=>v.q2K,q8u:()=>v.q8u,qWM:()=>v.qWM,qi_:()=>v.qi_,qkr:()=>v.qkr,qw7:()=>v.qw7,r7n:()=>v.r7n,s1s:()=>v.s1s,sEM:()=>v.sEM,sHE:()=>v.sHE,sJF:()=>v.sJF,sL$:()=>v.sL$,tPi:()=>c.tPi,usg:()=>v.usg,uv1:()=>v.uv1,vFR:()=>v.vFR,vtC:()=>v.vtC,vwp:()=>v.vwp,w3H:()=>v.w3H,wCN:()=>d.wC,wUP:()=>v.wUP,wYB:()=>v.wYB,wYn:()=>v.wYn,we_:()=>v.we_,wm:()=>v.wm,wx7:()=>v.wx7,x12:()=>v.x12,x8V:()=>u.x8,xJR:()=>v.xJR,xQA:()=>v.xQA,xnO:()=>v.xnO,y7R:()=>v.y7R,yQU:()=>v.yQU,yj2:()=>v.yj2,z4k:()=>u.z4,zbQ:()=>v.zbQ,zoF:()=>c.zoF,zvY:()=>v.zvY,zws:()=>v.zws});var r=n(46784),s=n(72200),i=n(30039),a=n(37650),o=n(59155),l=n(73327),u=n(71221),c=n(77912),h=n(4368),d=n(26151),p=n(22885),f=n(10592),m=n(73417),g=n(85999),y=n(47242),x=n(68713),v=n(29121)},88549:(e,t,n)=>{"use strict";var r=n(23926),s=(n(79998),n(26480),n(35221),n(72657)),i=n(62271),a=n(8723),o=n(29798),l=n(73327);(0,r.wv)();const u={buffer:s.f,cast:i.p,clone:a.d,print:o.S};(0,l.Vp)(u)},10592:(e,t,n)=>{"use strict";n.d(t,{g:()=>s});const r="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function s(){return new Promise((e=>r((()=>e()))))}},85999:(e,t,n)=>{"use strict";let r;function s(e){r=e}function i(e){if(void 0!==r)return r;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function a(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}n.r(t),n.d(t,{isBrowser:()=>a,isMobile:()=>i,mockIsMobile:()=>s})},23926:(e,t,n)=>{"use strict";n.d(t,{BV:()=>v,wv:()=>x});var r=n(68713),s=n(22885),i=n(55938),a=n(29121),o=n(26151),l=n(64706),u=n(52368),c=n(50223),h=n(73327),d=n(80747),p=n(20569),f=n(59155);function m(e){return null!=e.kernelName}class g{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class y{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new g}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(l.Z(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new u.Q1(this.backendInstance),!0}setupRegisteredKernels(){(0,o.tr)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){(0,o.tr)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof r.Zu||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,l.Z(`Initialization of backend ${e} failed`),l.Z(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return l.Z(`Initialization of backend ${e} failed`),l.Z(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),i=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return y.nextTensorId++}nextVariableId(){return y.nextVariableId++}clone(e){const t=v.runKernel(a.iJz,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return v.runKernel(a.RFZ,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==(0,o.pI)(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=r-t-s-i;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;let a,l;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=m(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(m(e)){const{kernelName:t,inputs:s,attrs:i}=e;null==this.backendName&&this.backend;const u=(0,o.pI)(t,this.backendName);p.hu(null!=u,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),a=()=>{const e=this.backend.numDataIds();l=u.kernelFunc({inputs:s,attrs:i,backend:this.backend});const a=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,a);const o=a.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){const e=this.getTensorsForGradient(t,s,o);n=this.saveTensorsForBackwardMode(e)}return o}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};a=()=>{const e=this.backend.numDataIds();l=this.tidy((()=>t(this.backend,s)));const n=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:c,attrs:h}=e,d=m(e)?null:e.backwardsFunc;let f;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(u,c,(()=>a())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=a()})),r&&this.addTapeNode(u,c,t,d,n,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map((e=>null!=c[e]?c[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(l)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=(0,o.uk)(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let i;r.saveAllInputs?(p.hu(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),i=Object.keys(t).map((e=>t[e]))):i=e.map((e=>t[e]));const a=n.filter(((e,t)=>s[t]));return i.concat(a)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&p.HD(e[0])&&(s=e.map((e=>f.encodeString(e))));const i=r.write(s,t,n),a=new h.es(t,n,i,this.nextTensorId());if(this.trackTensor(a,r),"string"===n){const e=this.state.tensorInfo.get(i),t=(0,p.Ub)(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return a}makeTensorFromDataId(e,t,n,r){const s={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(s,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:s}=e,i=new h.es(r,s,n,this.nextTensorId());return this.trackTensor(i,t),i}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new h._w(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*p.bT(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof h._w||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*p.bT(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,i){const a={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},l=(0,o.uk)(e);null!=l&&(r=l.gradFunc),null!=r&&(a.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=p.wT(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],s,i))),this.state.activeTape.push(a)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=(0,d.getTensorsInContainer)(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(p.hu(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));p.hu(s instanceof h.es,(()=>"The result y returned by f() must be a tensor."));const i=(0,c.C)(this.state.activeTape,t,s);if(!r&&0===i.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=(0,p.p8)((0,p.NA)(e),"float32");return v.makeTensor(t,e,"float32")}(s.shape):n,(0,c._)(e,i,(e=>this.tidy(e)),b);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){return p.hu(p.mf(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;p.hu(t.every((e=>e instanceof h.es)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc({forwardFunc:(r,s)=>(n=e(...t,s),p.hu(n.value instanceof h.es,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),p.hu(p.mf(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const s=n.gradFunc(e,r),i=Array.isArray(s)?s:[s];p.hu(i.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),p.hu(i.every((e=>e instanceof h.es)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const a={};return i.forEach(((e,t)=>{a[t]=()=>e})),a},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=(0,f.now)(),n=await this.backend.time(e);return n.wallMs=(0,f.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new g;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function x(){const e=(0,i.D)();if(null==e._tfengine){const t=new s.qA(e);e._tfengine=new y(t)}return(0,s.iG)(e._tfengine.ENV),(0,h.Vi)((()=>e._tfengine)),e._tfengine}y.nextTensorId=0,y.nextVariableId=0;const v=x();function b(e,t){const n={a:e,b:t};return v.runKernel(a.mm_,n)}},22885:(e,t,n)=>{"use strict";n.d(t,{OB:()=>o,iG:()=>u,qA:()=>i});var r=n(20569);const s="tfjsflags";class i{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=a,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(o().getBool("IS_TEST")||o().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];o().getBool("IS_TEST")||o().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if((0,r.tI)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);s in e&&e[s].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function a(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function o(){return l}let l=null;function u(e){l=e}},79998:(e,t,n)=>{"use strict";n(23926);var r=n(85999);const s=(0,n(22885).OB)();s.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),s.registerFlag("IS_BROWSER",(()=>r.isBrowser())),s.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),s.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),s.registerFlag("PROD",(()=>!1)),s.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>s.getBool("DEBUG"))),s.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),s.registerFlag("IS_TEST",(()=>!1)),s.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),s.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),s.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1)),s.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),s.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1))},55938:(e,t,n)=>{"use strict";let r;function s(){if(null==r){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}r=e}return r}function i(e,t){const n=function(){const e=s();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}n.d(t,{D:()=>s,R:()=>i})},4368:(e,t,n)=>{"use strict";n.d(t,{B9:()=>u,Cn:()=>c,N_:()=>h,SR:()=>o,jq:()=>d,lu:()=>l});var r=n(23926),s=n(22885),i=n(73327),a=n(80747);function o(){return r.BV}function l(e,t){return r.BV.tidy(e,t)}function u(e){(0,a.getTensorsInContainer)(e).forEach((e=>e.dispose()))}function c(e){return r.BV.keep(e)}function h(){return r.BV.backendName}function d(e,t,n=1){return r.BV.registerBackend(e,t,n)}(0,i.FZ)((function(e){(0,s.OB)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}))},30633:(e,t,n)=>{"use strict";n.d(t,{cb:()=>s});var r=n(23926);function s(e){return r.BV.customGrad(e)}n(73327)},78194:(e,t,n)=>{"use strict";n.d(t,{E:()=>i,O:()=>g});var r=n(43720);const s=n.n(r)()||r;function i(e){return s.fromString(e,!0,16)}const a=i("c3a5c85c97cb3127"),o=i("b492b66fbe98f273"),l=i("9ae16a3b2f90404f");function u(e){return e.xor(e.shru(47))}function c(e,t,n){const r=e.slice(t,t+n);return s.fromBytes(Array.from(r),!0,!0)}function h(e,t){return c(e,t,8)}function d(e,t){return c(e,t,4)}function p(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function f(e,t,n=i("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let s=t.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function m(e,t,n,r){return function(e,t,n,r,s,i){s=s.add(e),i=p(i.add(s).add(r),21);const a=s;return s=(s=s.add(t)).add(n),i=i.add(p(s,44)),[s.add(r),i.add(a)]}(h(e,t),h(e,t+8),h(e,t+16),h(e,t+24),n,r)}function g(e,t=e.length){const n=s.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=l.add(2*t),r=h(e,0).add(l),s=h(e,t-8);return f(p(s,37).mul(n).add(r),p(r,25).add(s).mul(n),n)}if(t>=4){const n=l.add(2*t);return f(d(e,0).shl(3).add(t),d(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return u(l.mul(n).xor(a.mul(r))).mul(l)}return l}(e,t):function(e,t=e.length){const n=l.add(2*t),r=h(e,0).mul(o),s=h(e,8),i=h(e,t-8).mul(n),a=h(e,t-16).mul(l);return f(p(r.add(s),43).add(p(i,30)).add(a),r.add(p(s.add(l),18)).add(i),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=l.add(2*t),r=h(e,0).mul(l),s=h(e,8),i=h(e,t-8).mul(n),a=h(e,t-16).mul(l),o=p(r.add(s),43).add(p(i,30)).add(a),u=f(o,r.add(p(s.add(l),18)).add(i),n),c=h(e,16).mul(n),d=h(e,24),m=o.add(h(e,t-32)).mul(n),g=u.add(h(e,t-24)).mul(n);return f(p(c.add(d),43).add(p(m,30)).add(g),c.add(p(d.add(r),18)).add(m),n)}(e,t);let r=n,i=n.mul(o).add(113),c=u(i.mul(l).add(113)).mul(l),g=[s.UZERO,s.UZERO],y=[s.UZERO,s.UZERO];r=r.mul(l).add(h(e,0));let x=0;const v=64*(t-1>>6),b=v+(t-1&63)-63;do{r=p(r.add(i).add(g[0]).add(h(e,x+8)),37).mul(o),i=p(i.add(g[1]).add(h(e,x+48)),42).mul(o),r=r.xor(y[1]),i=i.add(g[0]).add(h(e,x+40)),c=p(c.add(y[0]),33).mul(o),g=m(e,x,g[1].mul(o),r.add(y[0])),y=m(e,x+32,c.add(y[1]),i.add(h(e,x+16))),[c,r]=[r,c],x+=64}while(x!==v);const w=o.add(c.and(255).shl(1));return x=b,y[0]=y[0].add(t-1&63),g[0]=g[0].add(y[0]),y[0]=y[0].add(g[0]),r=p(r.add(i).add(g[0]).add(h(e,x+8)),37).mul(w),i=p(i.add(g[1]).add(h(e,x+48)),42).mul(w),r=r.xor(y[1].mul(9)),i=i.add(g[0].mul(9).add(h(e,x+40))),c=p(c.add(y[0]),33).mul(w),g=m(e,x,g[1].mul(w),r.add(y[0])),y=m(e,x+32,c.add(y[1]),i.add(h(e,x+16))),[c,r]=[r,c],f(f(g[0],y[0],w).add(u(i).mul(a)).add(c),f(g[1],y[1],w).add(r),w)}},6639:(e,t,n)=>{"use strict";n.d(t,{$HU:()=>r.$HU,$g6:()=>r.$g6,$w:()=>r.$w,Acj:()=>r.Acj,BHj:()=>r.BHj,BMI:()=>r.BMI,BiW:()=>r.BiW,Byc:()=>r.Byc,C2$:()=>r.C2$,CAk:()=>r.CAk,CnY:()=>r.CnY,D2d:()=>r.D2d,D5U:()=>r.D5U,DlI:()=>r.DlI,Eh3:()=>r.Eh3,FKq:()=>r.FKq,G3Y:()=>r.G3Y,GBy:()=>r.GBy,GDt:()=>r.GDt,Gcp:()=>r.Gcp,HEU:()=>r.HEU,HHK:()=>r.HHK,HZH:()=>r.HZH,Hhh:()=>r.Hhh,Hmb:()=>r.Hmb,IHx:()=>r.IHx,IKK:()=>r.IKK,IMb:()=>r.IMb,Izb:()=>r.Izb,J$2:()=>r.J$2,JLz:()=>r.JLz,J_u:()=>r.J_u,JhU:()=>r.JhU,Jyw:()=>r.Jyw,L8s:()=>r.L8s,L9e:()=>r.L9e,M2y:()=>r.M2y,MIZ:()=>r.MIZ,MRv:()=>r.MRv,MZg:()=>r.MZg,NEP:()=>r.NEP,NZg:()=>r.NZg,N_N:()=>r.N_N,O3z:()=>r.O3z,OAf:()=>r.OAf,OBj:()=>r.OBj,OR:()=>r.OR,OU7:()=>r.OU7,OV7:()=>r.OV7,Omj:()=>r.Omj,Oyi:()=>r.Oyi,PYm:()=>r.PYm,PhF:()=>r.PhF,QCc:()=>r.QCc,QRR:()=>r.QRR,Qg5:()=>r.Qg5,QiL:()=>r.QiL,Qvg:()=>r.Qvg,RFZ:()=>r.RFZ,ROF:()=>r.ROF,RQH:()=>r.RQH,RRF:()=>r.RRF,RuY:()=>r.RuY,SRH:()=>r.SRH,SX0:()=>r.SX0,SYM:()=>r.SYM,SbG:()=>r.SbG,SpW:()=>r.SpW,T0n:()=>r.T0n,TQc:()=>r.TQc,TR1:()=>r.TR1,ToN:()=>r.ToN,Tr8:()=>r.Tr8,UFq:()=>r.UFq,Uyb:()=>r.Uyb,VGw:()=>r.VGw,Vbg:()=>r.Vbg,VcC:()=>r.VcC,VfG:()=>r.VfG,W0H:()=>r.W0H,XD2:()=>r.XD2,XLQ:()=>r.XLQ,XLW:()=>r.XLW,XeE:()=>r.XeE,Xhn:()=>r.Xhn,XkS:()=>r.XkS,Xze:()=>r.Xze,Y0y:()=>r.Y0y,YDk:()=>r.YDk,YFo:()=>r.YFo,YoZ:()=>r.YoZ,ZbH:()=>r.ZbH,ZjV:()=>r.ZjV,Zuw:()=>r.Zuw,Zz9:()=>r.Zz9,_JP:()=>r._JP,_V0:()=>r._V0,_Yw:()=>r._Yw,_k9:()=>r._k9,_tC:()=>r._tC,a5O:()=>r.a5O,aJk:()=>r.aJk,avt:()=>r.avt,b9H:()=>r.b9H,bK0:()=>r.bK0,bV0:()=>r.bV0,backend_util:()=>r.Wap,c17:()=>r.c17,cWu:()=>r.cWu,cie:()=>r.cie,cye:()=>r.cye,d9v:()=>r.d9v,dC7:()=>r.dC7,dDz:()=>r.dDz,deh:()=>r.deh,dpD:()=>r.dpD,dt4:()=>r.dt4,e07:()=>r.e07,e6w:()=>r.e6w,e7N:()=>r.e7N,eBW:()=>r.eBW,eEB:()=>r.eEB,eZ0:()=>r.eZ0,esB:()=>r.esB,f3b:()=>r.f3b,gJX:()=>r.gJX,glt:()=>r.glt,h8e:()=>r.h8e,hdR:()=>r.hdR,hiC:()=>r.hiC,i5y:()=>r.i5y,iD$:()=>r.iD$,iHb:()=>r.iHb,iJz:()=>r.iJz,iWB:()=>r.iWB,iZT:()=>r.iZT,ik2:()=>r.ik2,io:()=>r.io,jMg:()=>r.jMg,jQk:()=>r.jQk,jQs:()=>r.jQs,jeX:()=>r.jeX,jqO:()=>r.jqO,kU:()=>r.kU,knu:()=>r.knu,kpP:()=>r.kpP,kuN:()=>r.kuN,kuV:()=>r.kuV,lls:()=>r.lls,luS:()=>r.luS,luU:()=>r.luU,lub:()=>r.lub,lyA:()=>r.lyA,mKl:()=>r.mKl,mTV:()=>r.mTV,mc4:()=>r.mc4,mhS:()=>r.mhS,mm_:()=>r.mm_,n9L:()=>r.n9L,nhH:()=>r.nhH,nr8:()=>r.nr8,o0g:()=>r.o0g,o2y:()=>r.o2y,oFR:()=>r.oFR,oHH:()=>r.oHH,oT6:()=>r.oT6,odF:()=>r.odF,p2w:()=>r.p2w,p4S:()=>r.p4S,pe_:()=>r.pe_,pju:()=>r.pju,q1x:()=>r.q1x,q2K:()=>r.q2K,q8u:()=>r.q8u,qWM:()=>r.qWM,qi_:()=>r.qi_,qkr:()=>r.qkr,qw7:()=>r.qw7,r7n:()=>r.r7n,s1s:()=>r.s1s,sEM:()=>r.sEM,sHE:()=>r.sHE,sJF:()=>r.sJF,sL$:()=>r.sL$,tPi:()=>r.tPi,usg:()=>r.usg,uv1:()=>r.uv1,vFR:()=>r.vFR,vtC:()=>r.vtC,vwp:()=>r.vwp,w3H:()=>r.w3H,wCN:()=>r.wCN,wUP:()=>r.wUP,wYB:()=>r.wYB,wYn:()=>r.wYn,we_:()=>r.we_,wm:()=>r.wm,wx7:()=>r.wx7,x12:()=>r.x12,x8V:()=>r.x8V,xJR:()=>r.xJR,xQA:()=>r.xQA,xnO:()=>r.xnO,y7R:()=>r.y7R,yQU:()=>r.yQU,yj2:()=>r.yj2,z4k:()=>r.z4k,zbQ:()=>r.zbQ,zoF:()=>r.zoF,zvY:()=>r.zvY,zws:()=>r.zws}),n(88549);var r=n(45898)},23625:(e,t,n)=>{"use strict";n.d(t,{IU:()=>u}),n(79998);var r=n(22885),s=n(91989),i=n(36493);function a(e){return new Promise((e=>setTimeout(e))).then(e)}class o{constructor(e){if(!(0,r.OB)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(o.URL_SCHEME)&&(e=e.slice(o.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r=(0,s.Yd)(e,n),i=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),o=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(o.download=this.modelJsonFileName,o.href=i,await a((()=>o.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await a((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:(0,s.Q)(e)}}}}o.URL_SCHEME="downloads://";class l{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),i=r.modelTopology;if(null==i)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:i});const a=(0,s.jN)(r,(e=>this.loadWeights(e)));e(a)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const r of e)t.push(...r.weights),n.push(...r.paths);const r=this.checkManifestAndWeightFiles(e),i=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(i).then((e=>[t,(0,s.JY)(e)]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const s=new FileReader;s.onload=e=>{const t=e.target.result;n(t)},s.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>(0,s.EZ)(e.name))),r={};for(const i of e)i.paths.forEach((e=>{const i=(0,s.EZ)(e);if(-1!==t.indexOf(i))throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(t.push(i),-1===n.indexOf(i))throw new Error(`Weight file with basename '${i}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(i)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function u(e){return new l(e)}i.U3.registerSaveRouter((e=>(0,r.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(o.URL_SCHEME)?function(e="model"){return new o(e)}(e.slice(o.URL_SCHEME.length)):null))},80731:(e,t,n)=>{"use strict";n.d(t,{MP:()=>d,dJ:()=>h,g3:()=>u});var r=n(22885),s=n(20569),i=n(91989),a=n(36493),o=n(93120);class l{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?((0,s.hu)("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=(0,r.OB)().platform.fetch,(0,s.hu)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&(0,s.hu)(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=(0,i.Yd)(e,n);t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:(0,i.Q)(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return(0,i.jN)(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),s=this.weightPathPrefix||n,a=(0,i.hu)(e),l=[],u=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?u.push(this.weightUrlConverter(e)):l.push(s+e+r);this.weightUrlConverter&&l.push(...await Promise.all(u));const c=await(0,o.aV)(l,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,(0,i.JY)(c)]}}function u(e){return null!=e.match(l.URL_SCHEME_REGEX)}l.URL_SCHEME_REGEX=/^https?:\/\//;const c=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>u(e))):u(e),n)return h(e,t)}return null};function h(e,t){return new l(e,t)}function d(e,t){return h(e,t)}a.U3.registerSaveRouter(c),a.U3.registerLoadRouter(c)},61044:(e,t,n)=>{"use strict";n.d(t,{ns:()=>h,y$:()=>p}),n(79998);var r=n(22885),s=n(91989),i=n(36493);const a="tensorflowjs",o="models_store",l="model_info_store";function u(){if(!(0,r.OB)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function c(e){const t=e.result;t.createObjectStore(o,{keyPath:"modelPath"}),t.createObjectStore(l,{keyPath:"modelPath"})}class h{constructor(e){if(this.indexedDB=u(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(a,1);r.onupgradeneeded=()=>c(r),r.onsuccess=()=>{const i=r.result;if(null==t){const t=i.transaction(o,"readonly"),r=t.objectStore(o).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return i.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(i.close(),n(r.error)),t.oncomplete=()=>i.close()}else{const r=(0,s.Q)(t),a=i.transaction(l,"readwrite");let u=a.objectStore(l);const c=u.put({modelPath:this.modelPath,modelArtifactsInfo:r});let h;c.onsuccess=()=>{h=i.transaction(o,"readwrite");const s=h.objectStore(o).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});s.onsuccess=()=>e({modelArtifactsInfo:r}),s.onerror=e=>{u=a.objectStore(l);const t=u.delete(this.modelPath);t.onsuccess=()=>(i.close(),n(s.error)),t.onerror=e=>(i.close(),n(s.error))}},c.onerror=e=>(i.close(),n(c.error)),a.oncomplete=()=>{null==h?i.close():h.oncomplete=()=>i.close()}}},r.onerror=e=>n(r.error)}))}}h.URL_SCHEME="indexeddb://";const d=e=>{return(0,r.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(h.URL_SCHEME)?(t=e.slice(h.URL_SCHEME.length),new h(t)):null;var t};i.U3.registerSaveRouter(d),i.U3.registerLoadRouter(d);class p{constructor(){this.indexedDB=u()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(a,1);n.onupgradeneeded=()=>c(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(l,"readonly"),i=s.objectStore(l).getAll();i.onsuccess=()=>{const t={};for(const e of i.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},i.onerror=e=>(r.close(),t(i.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(h.URL_SCHEME)?t.slice(h.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(a,1);r.onupgradeneeded=()=>c(r),r.onsuccess=()=>{const s=r.result,i=s.transaction(l,"readwrite"),a=i.objectStore(l),u=a.get(e);let c;u.onsuccess=()=>{if(null==u.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=a.delete(e),i=()=>{c=s.transaction(o,"readwrite");const r=c.objectStore(o).delete(e);r.onsuccess=()=>t(u.result.modelArtifactsInfo),r.onerror=e=>n(u.error)};r.onsuccess=i,r.onerror=e=>(i(),s.close(),n(u.error))}},u.onerror=e=>(s.close(),n(u.error)),i.oncomplete=()=>{null==c?s.close():c.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}}},46784:(e,t,n)=>{"use strict";n.r(t),n.d(t,{browserFiles:()=>r.IU,browserHTTPRequest:()=>s.MP,concatenateArrayBuffers:()=>i.JY,copyModel:()=>u.ID,decodeWeights:()=>i.dI,encodeWeights:()=>i.yz,fromMemory:()=>a.nR,fromMemorySync:()=>a.f2,getLoadHandlers:()=>o.rM,getModelArtifactsForJSON:()=>i.jN,getModelArtifactsForJSONSync:()=>i.ji,getModelArtifactsInfoForJSON:()=>i.Q,getSaveHandlers:()=>o.yB,getWeightSpecs:()=>i.hu,http:()=>s.dJ,isHTTPScheme:()=>s.g3,listModels:()=>u.h1,loadWeights:()=>l.Pl,moveModel:()=>u.Ny,registerLoadRouter:()=>o.pS,registerSaveRouter:()=>o.tf,removeModel:()=>u.gw,weightsLoaderFactory:()=>l.T4,withSaveHandler:()=>a.uX,withSaveHandlerSync:()=>a.zv}),n(61044),n(28209);var r=n(23625),s=n(80731),i=n(91989),a=n(11781),o=n(36493),l=n(93120),u=n(90780)},91989:(e,t,n)=>{"use strict";n.d(t,{EZ:()=>g,JY:()=>m,Q:()=>b,Yd:()=>y,_n:()=>p,dI:()=>u,hu:()=>w,jN:()=>v,ji:()=>x,n7:()=>f,yz:()=>l});var r=n(61661),s=n(10701),i=n(20569),a=n(75771);const o=4;async function l(e,t){const n=[],r=[],s=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let i=0;i<s.length;++i){const a=s[i],l=Array.isArray(e)?e[i].tensor:e[a];if("float32"!==l.dtype&&"int32"!==l.dtype&&"bool"!==l.dtype&&"string"!==l.dtype&&"complex64"!==l.dtype)throw new Error(`Unsupported dtype in weight '${a}': ${l.dtype}`);const u={name:a,shape:l.shape,dtype:l.dtype};if("string"===l.dtype){const e=new Promise((async e=>{const t=await l.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+o*t.length,r=new Uint8Array(n);let s=0;for(let e=0;e<t.length;e++){const n=t[e],i=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(i,s),s+=o,r.set(n,s),s+=n.length}e(r)}));r.push(e)}else r.push(l.data());null!=t&&(u.group=t),n.push(u)}return{data:c(await Promise.all(r)),specs:n}}function u(e,t){const n={};let l,u=0;for(const c of t){const t=c.name,h=c.dtype,d=c.shape,p=(0,i.NA)(d);let f;if("quantization"in c){const n=c.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${c.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${c.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==h)throw new Error(`Weight ${c.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${h}.`)}const r=a.J[n.dtype],s=e.slice(u,u+p*r),i="uint8"===n.dtype?new Uint8Array(s):new Uint16Array(s);if("float32"===h)if("uint8"===n.dtype||"uint16"===n.dtype){f=new Float32Array(i.length);for(let e=0;e<i.length;e++){const t=i[e];f[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===l&&(l=_()),f=l(i)}else{if("int32"!==h)throw new Error(`Unsupported dtype in weight '${t}': ${h}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);f=new Int32Array(i.length);for(let e=0;e<i.length;e++){const t=i[e];f[e]=Math.round(t*n.scale+n.min)}}u+=p*r}else if("string"===h){const t=(0,i.NA)(c.shape);f=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(u,u+o))[0];u+=o;const n=new Uint8Array(e.slice(u,u+t));f.push(n),u+=t}}else{const i=a.J[h],o=e.slice(u,u+p*i);if("float32"===h)f=new Float32Array(o);else if("int32"===h)f=new Int32Array(o);else if("bool"===h)f=new Uint8Array(o);else{if("complex64"!==h)throw new Error(`Unsupported dtype in weight '${t}': ${h}`);{f=new Float32Array(o);const e=new Float32Array(f.length/2),i=new Float32Array(f.length/2);for(let t=0;t<e.length;t++)e[t]=f[2*t],i[t]=f[2*t+1];const a=(0,s.X)(e,d,"float32"),l=(0,s.X)(i,d,"float32");n[t]=(0,r.P)(a,l),a.dispose(),l.dispose()}}u+=p*i}"complex64"!==h&&(n[t]=(0,s.X)(f,d,h))}return n}function c(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let s=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength})),r.buffer}const h="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function d(e){return h?Buffer.byteLength(e):new Blob([e]).size}function p(e){if(h)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}function f(e){if(h){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}function m(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function g(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function y(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function x(e,t,n){const r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),r}async function v(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),x(e,n,r)}function b(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:d(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:d(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function w(e){const t=[];for(const n of e)t.push(...n.weights);return t}function _(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const s=new ArrayBuffer(4*r.length),i=new Uint32Array(s);for(let s=0;s<r.length;s++){const a=r[s],o=e[n[a>>10]+(1023&a)]+t[a>>10];i[s]=o}return new Float32Array(s)}}},28209:(e,t,n)=>{"use strict";n.d(t,{Ew:()=>y,JL:()=>v}),n(79998);var r=n(22885),s=n(20569),i=n(91989),a=n(36493);const o="/",l="tensorflowjs_models",u="info",c="model_topology",h="weight_specs",d="weight_data",p="model_metadata";function f(e){return{info:[l,e,u].join(o),topology:[l,e,c].join(o),weightSpecs:[l,e,h].join(o),weightData:[l,e,d].join(o),modelMetadata:[l,e,p].join(o)}}function m(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function g(e){const t=e.split(o);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(o)}class y{constructor(e){if(!(0,r.OB)().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=f(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=(0,i.Q)(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,(0,i._n)(e.weightData));const s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch(e){throw m(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=(0,i.n7)(a),t}}y.URL_SCHEME="localstorage://";const x=e=>{return(0,r.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(y.URL_SCHEME)?(t=e.slice(y.URL_SCHEME.length),new y(t)):null;var t};a.U3.registerSaveRouter(x),a.U3.registerLoadRouter(x);class v{constructor(){(0,s.hu)((0,r.OB)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),(0,s.hu)("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=l+o,n=o+u;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(t)&&s.endsWith(n)&&(e[g(s)]=JSON.parse(this.LS.getItem(s)))}return e}async removeModel(e){var t;const n=f(e=(t=e).startsWith(y.URL_SCHEME)?t.slice(y.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return m(n),r}}},90780:(e,t,n)=>{"use strict";n.d(t,{ID:()=>h,Ny:()=>d,gw:()=>c,h1:()=>u,xQ:()=>a});var r=n(20569),s=n(36493);const i="://";class a{constructor(){this.managers={}}static getInstance(){return null==a.instance&&(a.instance=new a),a.instance}static registerManager(e,t){(0,r.hu)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(i)&&(e=e.slice(0,e.indexOf(i))),(0,r.hu)(e.length>0,(()=>"scheme must not be an empty string."));const n=a.getInstance();(0,r.hu)(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=a.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(a.getInstance().managers)}}function o(e){if(-1===e.indexOf(i))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${a.getSchemes().join(",")}`);return{scheme:e.split(i)[0],path:e.split(i)[1]}}async function l(e,t,n=!1){(0,r.hu)(e!==t,(()=>`Old path and new path are the same: '${e}'`));const i=s.U3.getLoadHandlers(e);(0,r.hu)(i.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),(0,r.hu)(i.length<2,(()=>`Copying failed because more than one (${i.length}) load handlers for source URL ${e}.`));const l=i[0],u=s.U3.getSaveHandlers(t);(0,r.hu)(u.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),(0,r.hu)(u.length<2,(()=>`Copying failed because more than one (${i.length}) save handlers for destination URL ${t}.`));const c=u[0],h=o(e).scheme,d=o(e).path,p=h===o(e).scheme,f=await l.load();n&&p&&await a.getManager(h).removeModel(d);const m=await c.save(f);return n&&!p&&await a.getManager(h).removeModel(d),m.modelArtifactsInfo}async function u(){const e=a.getSchemes(),t={};for(const n of e){const e=await a.getManager(n).listModels();for(const r in e)t[n+i+r]=e[r]}return t}async function c(e){const t=o(e);return a.getManager(t.scheme).removeModel(t.path)}async function h(e,t){return l(e,t,!1)}async function d(e,t){return l(e,t,!0)}},11781:(e,t,n)=>{"use strict";n.d(t,{f2:()=>o,nR:()=>a,uX:()=>l,zv:()=>u});class r{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class s{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class i{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function a(e,t,n,r){return new i(o(...arguments))}function o(e,t,n,s){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new r(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new r({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new r({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:s}))}function l(e){return new s(e)}function u(e){return new s(e)}},86737:(e,t,n)=>{"use strict";n.d(t,{b:()=>s});var r=n(20569);function s(e,t,n,s){!function(e){(0,r.hu)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){(0,r.hu)(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),(0,r.hu)(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),(0,r.hu)(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,s=null==s?1:s);let i=0;return Promise.all(e.map((r=>(r.then((r=>{const a=n+ ++i/e.length*(s-n);return t(a),r})),r))))}},36493:(e,t,n)=>{"use strict";n.d(t,{U3:()=>r,pS:()=>i,rM:()=>o,tf:()=>s,yB:()=>a});class r{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==r.instance&&(r.instance=new r),r.instance}static registerSaveRouter(e){r.getInstance().saveRouters.push(e)}static registerLoadRouter(e){r.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return r.getHandlers(e,"save")}static getLoadHandlers(e,t){return r.getHandlers(e,"load",t)}static getHandlers(e,t,n){const s=[];return("load"===t?r.getInstance().loadRouters:r.getInstance().saveRouters).forEach((t=>{const r=t(e,n);null!==r&&s.push(r)})),s}}const s=e=>r.registerSaveRouter(e),i=e=>r.registerLoadRouter(e),a=e=>r.getSaveHandlers(e),o=(e,t)=>r.getLoadHandlers(e,t)},75771:(e,t,n)=>{"use strict";n.d(t,{J:()=>r});const r={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},93120:(e,t,n)=>{"use strict";n.d(t,{Pl:()=>u,T4:()=>c,aV:()=>l});var r=n(22885),s=n(20569),i=n(91989),a=n(86737),o=n(75771);async function l(e,t){null==t&&(t={});const n=null==t.fetchFunc?(0,r.OB)().platform.fetch:t.fetchFunc,s=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),i=(null==t.onProgress?await Promise.all(s):await(0,a.b)(s,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(i):await(0,a.b)(i,t.onProgress,.5,1)}async function u(e,t="",n,r){return c((e=>l(e,{requestInit:r})))(e,t,n)}function c(e){return async(t,n="",r)=>{const a=t.map((()=>!1)),l={},u=null!=r?r.map((()=>!1)):[],c=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const i="quantization"in e?e.quantization.dtype:e.dtype,h=o.J[i]*s.NA(e.shape),d=()=>{a[t]=!0,null==l[t]&&(l[t]=[]),l[t].push({manifestEntry:e,groupOffset:n,sizeBytes:h})};null!=r?r.forEach(((t,n)=>{t===e.name&&(d(),u[n]=!0)})):d(),c.push(e.name),n+=h}))})),!u.every((e=>e))){const e=r.filter(((e,t)=>!u[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${c.join(", ")}.`)}const h=a.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),d=[];h.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;d.push(t)}))}));const p=await e(d),f={};let m=0;return h.forEach((e=>{const n=t[e].paths.length;let r=0;for(let e=0;e<n;e++)r+=p[m+e].byteLength;const s=new ArrayBuffer(r),a=new Uint8Array(s);let o=0;for(let e=0;e<n;e++){const t=new Uint8Array(p[m+e]);a.set(t,o),o+=t.byteLength}l[e].forEach((e=>{const t=s.slice(e.groupOffset,e.groupOffset+e.sizeBytes),n=(0,i.dI)(t,[e.manifestEntry]);for(const e in n)f[e]=n[e]})),m+=n})),f}}},29121:(e,t,n)=>{"use strict";n.d(t,{$HU:()=>ot,$g6:()=>Y,$w:()=>X,Acj:()=>pe,BMI:()=>Ne,BiW:()=>st,Byc:()=>B,CAk:()=>_e,D2d:()=>Ft,DlI:()=>nt,Eh3:()=>R,FKq:()=>At,G3Y:()=>Yt,GBy:()=>It,Gcp:()=>Nt,HEU:()=>Z,HZH:()=>ut,Hhh:()=>Re,Hmb:()=>ht,IKK:()=>u,IMb:()=>b,J$2:()=>be,J_u:()=>ge,JhU:()=>y,L8s:()=>kt,M2y:()=>d,MIZ:()=>jt,MRv:()=>Ct,MZg:()=>Ae,NEP:()=>te,NZg:()=>Ge,O3z:()=>Lt,OAf:()=>Oe,OR:()=>oe,OU7:()=>Pe,OV7:()=>De,Omj:()=>Q,Oyi:()=>m,PYm:()=>Me,PhF:()=>bt,QCc:()=>g,QRR:()=>V,Qg5:()=>me,QiL:()=>Ze,Qvg:()=>Qt,RFZ:()=>E,ROF:()=>x,RQH:()=>St,RuY:()=>en,SX0:()=>J,SYM:()=>r,SbG:()=>ft,SpW:()=>i,T0n:()=>G,TQc:()=>Rt,TR1:()=>$,ToN:()=>Zt,Tr8:()=>Wt,Uyb:()=>ae,VGw:()=>s,Vbg:()=>Ve,VcC:()=>z,VfG:()=>Ce,W0H:()=>Ke,XLW:()=>w,XkS:()=>Gt,Xze:()=>o,Y0y:()=>re,YFo:()=>ne,YoZ:()=>ke,ZbH:()=>Te,ZjV:()=>Pt,Zz9:()=>A,_JP:()=>zt,_V0:()=>an,_Yw:()=>dt,_k9:()=>v,_tC:()=>$t,a5O:()=>Mt,aJk:()=>h,avt:()=>ye,b9H:()=>rn,bK0:()=>Bt,bV0:()=>yt,c17:()=>Be,cWu:()=>qt,cie:()=>W,cye:()=>qe,dDz:()=>rt,deh:()=>ie,dpD:()=>ct,e07:()=>gt,e6w:()=>it,e7N:()=>Se,eBW:()=>nn,eEB:()=>T,eZ0:()=>Ie,gJX:()=>M,h8e:()=>tn,hdR:()=>ee,i5y:()=>Et,iHb:()=>U,iJz:()=>fe,iWB:()=>xe,iZT:()=>de,ik2:()=>P,jMg:()=>f,jQk:()=>Ut,jQs:()=>ze,jeX:()=>le,kU:()=>Ee,kpP:()=>Jt,kuV:()=>He,luS:()=>on,lyA:()=>Qe,mKl:()=>mt,mTV:()=>Le,mc4:()=>F,mhS:()=>k,mm_:()=>a,n9L:()=>Xt,nhH:()=>Dt,nr8:()=>vt,o0g:()=>tt,o2y:()=>O,oFR:()=>wt,oHH:()=>K,oT6:()=>l,p2w:()=>_t,p4S:()=>q,pe_:()=>et,q1x:()=>he,q2K:()=>$e,q8u:()=>Ue,qWM:()=>Ye,qi_:()=>ce,qkr:()=>lt,qw7:()=>p,r7n:()=>ve,s1s:()=>Vt,sEM:()=>Ht,sHE:()=>ue,sJF:()=>c,sL$:()=>H,usg:()=>sn,uv1:()=>Xe,vFR:()=>Fe,vtC:()=>we,vwp:()=>se,w3H:()=>Ot,wUP:()=>N,wYB:()=>Tt,wYn:()=>We,we_:()=>Je,wm:()=>L,wx7:()=>Kt,x12:()=>D,xJR:()=>at,xQA:()=>xt,xnO:()=>C,y7R:()=>j,yQU:()=>je,yj2:()=>I,zbQ:()=>pt,zvY:()=>S,zws:()=>_});const r="Abs",s="Acos",i="Acosh",a="Add",o="AddN",l="All",u="Any",c="ArgMax",h="ArgMin",d="Asin",p="Asinh",f="Atan",m="Atanh",g="Atan2",y="AvgPool",x="AvgPoolGrad",v="AvgPool3D",b="AvgPool3DGrad",w="BatchMatMul",_="BatchToSpaceND",S="Bincount",T="BroadcastArgs",E="Cast",M="Ceil",C="ClipByValue",A="Complex",I="ComplexAbs",R="Concat",k="Conv2D",N="Conv2DBackpropFilter",L="Conv2DBackpropInput",D="Conv3D",O="Conv3DBackpropFilterV2",P="Conv3DBackpropInputV2",F="Cos",$="Cosh",B="Cumprod",U="Cumsum",z="CropAndResize",V="DenseBincount",G="DepthToSpace",W="DepthwiseConv2dNative",H="DepthwiseConv2dNativeBackpropFilter",j="DepthwiseConv2dNativeBackpropInput",X="Diag",q="Dilation2D",K="RealDiv",Y="Einsum",J="Elu",Z="EluGrad",Q="Erf",ee="Equal",te="Exp",ne="ExpandDims",re="Expm1",se="FFT",ie="Fill",ae="FlipLeftRight",oe="Floor",le="FloorDiv",ue="FusedBatchNorm",ce="GatherV2",he="GatherNd",de="Greater",pe="GreaterEqual",fe="Identity",me="IFFT",ge="Imag",ye="IsFinite",xe="IsInf",ve="IsNan",be="LeakyRelu",we="Less",_e="LessEqual",Se="LinSpace",Te="Log",Ee="Log1p",Me="LogicalAnd",Ce="LogicalNot",Ae="LogicalOr",Ie="LRN",Re="LRNGrad",ke="Max",Ne="Maximum",Le="MaxPool",De="MaxPoolGrad",Oe="MaxPool3D",Pe="MaxPool3DGrad",Fe="MaxPoolWithArgmax",$e="Mean",Be="Min",Ue="Minimum",ze="MirrorPad",Ve="Mod",Ge="Multinomial",We="Multiply",He="Neg",je="NotEqual",Xe="NonMaxSuppressionV3",qe="NonMaxSuppressionV4",Ke="NonMaxSuppressionV5",Ye="OnesLike",Je="OneHot",Ze="Pack",Qe="PadV2",et="Pow",tt="Prelu",nt="Prod",rt="RaggedGather",st="RaggedTensorToTensor",it="Range",at="Real",ot="Reciprocal",lt="Relu",ut="Reshape",ct="ResizeNearestNeighbor",ht="ResizeNearestNeighborGrad",dt="ResizeBilinear",pt="ResizeBilinearGrad",ft="Relu6",mt="Reverse",gt="Round",yt="Rsqrt",xt="ScatterNd",vt="SearchSorted",bt="Select",wt="Selu",_t="Slice",St="Sin",Tt="Sinh",Et="Sign",Mt="Sigmoid",Ct="Softplus",At="Sqrt",It="Sum",Rt="SpaceToBatchND",kt="SplitV",Nt="Softmax",Lt="SparseFillEmptyRows",Dt="SparseReshape",Ot="SparseSegmentMean",Pt="SparseSegmentSum",Ft="SparseToDense",$t="SquaredDifference",Bt="Square",Ut="StridedSlice",zt="StringNGrams",Vt="StringSplit",Gt="StringToHashBucketFast",Wt="Sub",Ht="Tan",jt="Tanh",Xt="Tile",qt="TopK",Kt="Transform",Yt="Transpose",Jt="Unique",Zt="Unpack",Qt="UnsortedSegmentSum",en="ZerosLike",tn="Step",nn="FromPixels",rn="RotateWithOffset",sn="_FusedMatMul",an="FusedConv2D",on="FusedDepthwiseConv2D"},26151:(e,t,n)=>{"use strict";n.d(t,{pI:()=>o,tr:()=>u,uk:()=>l,wC:()=>c});var r=n(55938),s=n(64706);const i=(0,r.R)("kernelRegistry",(()=>new Map)),a=(0,r.R)("gradRegistry",(()=>new Map));function o(e,t){const n=h(e,t);return i.get(n)}function l(e){return a.get(e)}function u(e){const t=i.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[i,a]=s,[o]=i.split("_");o===e&&n.push(a)}return n}function c(e){const{kernelName:t,backendName:n}=e,r=h(t,n);i.has(r)&&s.Z(`The kernel '${t}' for backend '${n}' is already registered`),i.set(r,e)}function h(e,t){return`${t}_${e}`}},64706:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s,c:()=>i});var r=n(22885);function s(...e){(0,r.OB)().getBool("IS_TEST")||(0,r.OB)().getBool("PROD")||console.warn(...e)}function i(...e){(0,r.OB)().getBool("IS_TEST")||(0,r.OB)().getBool("PROD")||console.log(...e)}},96235:(e,t,n)=>{"use strict";n.d(t,{W:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({abs_:function(e){const t=(0,i._1)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return r.BV.runKernel(s.yj2,e)}{const e={x:t};return r.BV.runKernel(s.SYM,e)}}})},17839:(e,t,n)=>{"use strict";n.d(t,{K:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({acos_:function(e){const t={x:(0,i._1)(e,"x","acos")};return r.BV.runKernel(s.VGw,t)}})},91470:(e,t,n)=>{"use strict";n.d(t,{_:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({acosh_:function(e){const t={x:(0,i._1)(e,"x","acosh")};return r.BV.runKernel(s.SpW,t)}})},56407:(e,t,n)=>{"use strict";n.d(t,{I:()=>o});var r=n(23926),s=n(29121),i=n(80747),a=n(43740);const o=(0,n(2668).op)({add_:function(e,t){let n=(0,a._1)(e,"a","add"),o=(0,a._1)(t,"b","add");[n,o]=(0,i.makeTypesMatch)(n,o);const l={a:n,b:o};return r.BV.runKernel(s.mm_,l)}})},13135:(e,t,n)=>{"use strict";n.d(t,{Q:()=>o});var r=n(23926),s=n(29121),i=n(43740),a=n(20569);const o=(0,n(2668).op)({addN_:function(e){a.hu(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),a.hu(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>(0,i._1)(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!a.cO(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const o=t;return r.BV.runKernel(s.Xze,o)}})},90781:(e,t,n)=>{"use strict";n.d(t,{$:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({all_:function(e,t=null,n=!1){const a={x:(0,i._1)(e,"x","all","bool")},o={axis:t,keepDims:n};return r.BV.runKernel(s.oT6,a,o)}})},92998:(e,t,n)=>{"use strict";n.d(t,{Y:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({any_:function(e,t=null,n=!1){const a={x:(0,i._1)(e,"x","any","bool")},o={axis:t,keepDims:n};return r.BV.runKernel(s.IKK,a,o)}})},40047:(e,t,n)=>{"use strict";n.d(t,{N:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({argMax_:function(e,t=0){const n={x:(0,i._1)(e,"x","argMax")},a={axis:t};return r.BV.runKernel(s.sJF,n,a)}})},27394:(e,t,n)=>{"use strict";n.d(t,{v:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({argMin_:function(e,t=0){const n={x:(0,i._1)(e,"x","argMin")},a={axis:t};return r.BV.runKernel(s.aJk,n,a)}})},87199:(e,t,n)=>{"use strict";function r(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function s(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function i(e,t,n,r=!0){const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?s.push(t[n-1]*e[n]):s.push(e[n]/t[n-1]):s.push(e[n]);return s}function a(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function o(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}n.d(t,{R7:()=>r,TK:()=>i,oP:()=>a,qX:()=>o,xw:()=>s})},72421:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({asin_:function(e){const t={x:(0,i._1)(e,"x","asin")};return r.BV.runKernel(s.M2y,t)}})},21891:(e,t,n)=>{"use strict";n.d(t,{V:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({asinh_:function(e){const t={x:(0,i._1)(e,"x","asinh")};return r.BV.runKernel(s.qw7,t)}})},77037:(e,t,n)=>{"use strict";n.d(t,{z:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({atan_:function(e){const t={x:(0,i._1)(e,"x","atan")};return r.BV.runKernel(s.jMg,t)}})},29812:(e,t,n)=>{"use strict";n.d(t,{f:()=>o});var r=n(23926),s=n(29121),i=n(80747),a=n(43740);const o=(0,n(2668).op)({atan2_:function(e,t){let n=(0,a._1)(e,"a","atan2"),o=(0,a._1)(t,"b","atan2");[n,o]=(0,i.makeTypesMatch)(n,o);const l={a:n,b:o};return r.BV.runKernel(s.QCc,l)}})},80369:(e,t,n)=>{"use strict";n.d(t,{C:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({atanh_:function(e){const t={x:(0,i._1)(e,"x","atanh")};return r.BV.runKernel(s.Oyi,t)}})},15176:(e,t,n)=>{"use strict";n.d(t,{w:()=>h});var r=n(23926),s=n(29121),i=n(43740),a=n(20569),o=n(62271),l=n(2582),u=n(2668),c=n(4968);const h=(0,u.op)({avgPool_:function(e,t,n,u,h){const d=(0,i._1)(e,"x","avgPool","float32");a.hu(l.jT(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let p=d,f=!1;3===d.rank&&(f=!0,p=(0,c.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),a.hu(4===p.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${p.rank}.`)),l.m("avgPool",u,h);const m={x:p},g={filterSize:t,strides:n,pad:u,dimRoundingMode:h};let y=r.BV.runKernel(s.JhU,m,g);return y=(0,o.p)(y,d.dtype),f?(0,c.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},61749:(e,t,n)=>{"use strict";n.d(t,{u:()=>h});var r=n(23926),s=n(29121),i=n(43740),a=n(20569),o=n(2582),l=n(62271),u=n(2668),c=n(4968);const h=(0,u.op)({avgPool3d_:function(e,t,n,u,h,d="NDHWC"){const p=(0,i._1)(e,"x","avgPool3d","float32");let f=p,m=!1;4===p.rank&&(m=!0,f=(0,c.X)(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]])),a.hu(5===f.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${f.rank}.`)),a.hu("NDHWC"===d,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${d}`)),(0,o.m)("avgPool3d",u,h);const g={x:f},y={filterSize:t,strides:n,pad:u,dimRoundingMode:h,dataFormat:d};let x=r.BV.runKernel(s._k9,g,y);return x=(0,l.p)(x,f.dtype),m?(0,c.X)(x,[x.shape[1],x.shape[2],x.shape[3],x.shape[4]]):x}})},83591:(e,t,n)=>{"use strict";n.d(t,{LJ:()=>c,Q3:()=>u,Vh:()=>i,YB:()=>s,kz:()=>a,lB:()=>l,rv:()=>o,sY:()=>h});var r=n(20569);function s(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function i(e,t,n){const r=e.length+t.length,s=[];let i=0,a=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(e[i++]):s.push(t[a++]);return s}function a(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]}function o(e,t){return i(e,t.map((e=>1)),t)}function l(e,t,n){r.hu(s(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function u(e,t){if(s(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function c(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function h(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}},7361:(e,t,n)=>{"use strict";n.d(t,{z:()=>d});var r=n(43740),s=n(56407),i=n(46884),a=n(28687),o=n(24841),l=n(2668),u=n(30625),c=n(22676),h=n(21869);const d=(0,l.op)({basicLSTMCell_:function(e,t,n,l,d,p){const f=(0,r._1)(e,"forgetBias","basicLSTMCell"),m=(0,r._1)(t,"lstmKernel","basicLSTMCell"),g=(0,r._1)(n,"lstmBias","basicLSTMCell"),y=(0,r._1)(l,"data","basicLSTMCell"),x=(0,r._1)(d,"c","basicLSTMCell"),v=(0,r._1)(p,"h","basicLSTMCell"),b=(0,i.z)([y,v],1),w=(0,a.O)(b,m),_=(0,s.I)(w,g),S=_.shape[0],T=_.shape[1]/4,E=[S,T],M=(0,c.t)(_,[0,0],E),C=(0,c.t)(_,[0,T],E),A=(0,c.t)(_,[0,2*T],E),I=(0,c.t)(_,[0,3*T],E),R=(0,s.I)((0,o.d)((0,u.X)(M),(0,h.A)(C)),(0,o.d)(x,(0,u.X)((0,s.I)(f,A))));return[R,(0,o.d)((0,h.A)(R),(0,u.X)(I))]}})},28441:(e,t,n)=>{"use strict";n.d(t,{E:()=>o});var r=n(23926),s=n(29121),i=n(43740),a=n(20569);const o=(0,n(2668).op)({batchToSpaceND_:function(e,t,n){const o=(0,i._1)(e,"x","batchToSpaceND"),l=t.reduce(((e,t)=>e*t));a.hu(o.rank>=1+t.length,(()=>`input rank is ${o.rank} but should be > than blockShape.length ${t.length}`)),a.hu(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),a.hu(o.shape[0]%l==0,(()=>`input tensor batch is ${o.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${l}`));const u={x:o},c={blockShape:t,crops:n};return r.BV.runKernel(s.zws,u,c)}})},7399:(e,t,n)=>{"use strict";n.d(t,{t:()=>c});var r=n(23926),s=n(29121),i=n(43740),a=n(20569),o=n(77545),l=n(2668),u=n(4968);const c=(0,l.op)({batchNorm_:function(e,t,n,l,c,h){null==h&&(h=.001);const d=(0,i._1)(e,"x","batchNorm"),p=(0,i._1)(t,"mean","batchNorm"),f=(0,i._1)(n,"variance","batchNorm");let m,g;null!=c&&(m=(0,i._1)(c,"scale","batchNorm")),null!=l&&(g=(0,i._1)(l,"offset","batchNorm")),a.hu(p.rank===f.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),a.hu(null==g||p.rank===g.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),a.hu(null==m||p.rank===m.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const y={x:(0,o.v)(d),scale:m,offset:g,mean:p,variance:f},x={varianceEpsilon:h},v=r.BV.runKernel(s.sHE,y,x);return(0,u.X)(v,d.shape)}})},81837:(e,t,n)=>{"use strict";n.d(t,{D:()=>a});var r=n(43740),s=n(20569),i=n(7399);const a=(0,n(2668).op)({batchNorm2d_:function(e,t,n,a,o,l){const u=(0,r._1)(e,"x","batchNorm"),c=(0,r._1)(t,"mean","batchNorm"),h=(0,r._1)(n,"variance","batchNorm");let d,p;return null!=o&&(d=(0,r._1)(o,"scale","batchNorm")),null!=a&&(p=(0,r._1)(a,"offset","batchNorm")),s.hu(2===u.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${u.rank}.`)),s.hu(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${c.rank}.`)),s.hu(2===h.rank||1===h.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${h.rank}.`)),null!=d&&s.hu(2===d.rank||1===d.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${d.rank}.`)),null!=p&&s.hu(2===p.rank||1===p.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${p.rank}.`)),(0,i.t)(u,c,h,p,d,l)}})},319:(e,t,n)=>{"use strict";n.d(t,{J:()=>a});var r=n(43740),s=n(20569),i=n(7399);const a=(0,n(2668).op)({batchNorm3d_:function(e,t,n,a,o,l){const u=(0,r._1)(e,"x","batchNorm"),c=(0,r._1)(t,"mean","batchNorm"),h=(0,r._1)(n,"variance","batchNorm");let d,p;return null!=o&&(d=(0,r._1)(o,"scale","batchNorm")),null!=a&&(p=(0,r._1)(a,"offset","batchNorm")),s.hu(3===u.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${u.rank}.`)),s.hu(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${c.rank}.`)),s.hu(3===h.rank||1===h.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${h.rank}.`)),null!=d&&s.hu(3===d.rank||1===d.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${d.rank}.`)),null!=p&&s.hu(3===p.rank||1===p.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${p.rank}.`)),(0,i.t)(u,c,h,p,d,l)}})},37969:(e,t,n)=>{"use strict";n.d(t,{p:()=>a});var r=n(43740),s=n(20569),i=n(7399);const a=(0,n(2668).op)({batchNorm4d_:function(e,t,n,a,o,l){const u=(0,r._1)(e,"x","batchNorm"),c=(0,r._1)(t,"mean","batchNorm"),h=(0,r._1)(n,"variance","batchNorm");let d,p;return null!=o&&(d=(0,r._1)(o,"scale","batchNorm")),null!=a&&(p=(0,r._1)(a,"offset","batchNorm")),s.hu(4===u.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${u.rank}.`)),s.hu(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${c.rank}.`)),s.hu(4===h.rank||1===h.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${h.rank}.`)),null!=d&&s.hu(4===d.rank||1===d.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${d.rank}.`)),null!=p&&s.hu(4===p.rank||1===p.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${p.rank}.`)),(0,i.t)(u,c,h,p,d,l)}})},77545:(e,t,n)=>{"use strict";n.d(t,{v:()=>s});var r=n(4968);function s(e){let t;return t=0===e.rank||1===e.rank?(0,r.X)(e,[1,1,1,e.size]):2===e.rank?(0,r.X)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?(0,r.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}},93865:(e,t,n)=>{"use strict";n.d(t,{y:()=>o});var r=n(23926),s=n(29121),i=n(43740),a=n(20569);const o=(0,n(2668).op)({bincount_:function(e,t,n){const o=(0,i._1)(e,"x","bincount"),l=(0,i._1)(t,"weights","bincount");a.hu("int32"===o.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${o.dtype}`)),a.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),a.hu(l.size===o.size||0===l.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${o.shape}, weights shape: ${l.shape}.`));const u={x:o,weights:l},c={size:n};return r.BV.runKernel(s.zvY,u,c)}})},5123:(e,t,n)=>{"use strict";n.d(t,{a:()=>u});var r=n(43740),s=n(20569),i=n(24926),a=n(4968),o=n(79590),l=n(66380);const u=async function(e,t,n){const u=(0,r._1)(e,"tensor","boolMask"),c=(0,r._1)(t,"mask","boolMask","bool"),h=null==n?0:n,d=c.rank,p=u.shape;s.hu(d>0,(()=>"mask cannot be scalar")),s.k5(p.slice(h,h+d),c.shape,"mask's shape must match the first K dimensions of tensor's shape,");let f=1;for(let e=h;e<h+d;e++)f*=p[e];const m=p.slice(0,h).concat([f],p.slice(h+d)),g=(0,a.X)(u,m),y=(0,a.X)(c,[-1]),x=await(0,l.i)(y),v=(0,o.L)(x,[1]),b=(0,i.I)(g,v,h);return e!==u&&u.dispose(),t!==c&&c.dispose(),v.dispose(),g.dispose(),y.dispose(),x.dispose(),b}},88194:(e,t,n)=>{"use strict";n.d(t,{X:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({broadcastArgs_:function(e,t){const n=(0,i._1)(e,"s0","broadcastArgs","int32"),a=(0,i._1)(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==a.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${a.rank}`);const o={s0:n,s1:a};return r.BV.runKernel(s.eEB,o)}})},68247:(e,t,n)=>{"use strict";n.d(t,{U:()=>u});var r=n(23926),s=n(29121),i=n(43740),a=n(8723),o=n(2668),l=n(4968);const u=(0,o.op)({broadcastTo_:function(e,t){let n=(0,i._1)(e,"broadcastTo","x");const o=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=(0,l.X)(n,e)}const u=n.shape,c=Array.from(t);for(let e=t.length-1;e>=0;e--)if(u[e]===t[e])c[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${t}].`);if(0===c.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return(0,a.d)(n);const h={x:n},d={reps:c};return r.BV.runKernel(s.n9L,h,d)}})},72200:(e,t,n)=>{"use strict";function r(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const i=n-1-s,a=e[i]||1;(t[t.length-1-s]||1)>1&&1===a&&r.unshift(i)}return r}function s(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],i=t.length-r-1,a=t[i];(null==s||1===s&&a>1)&&n.unshift(i)}return n}function i(e,t){const n=[],r=Math.max(e.length,t.length);for(let s=0;s<r;s++){let r=e[e.length-s-1];null==r&&(r=1);let i=t[t.length-s-1];if(null==i&&(i=1),1===r)n.unshift(i);else if(1===i)n.unshift(r);else{if(r!==i)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}n.r(t),n.d(t,{assertAndGetBroadcastShape:()=>i,getBroadcastDims:()=>r,getReductionAxes:()=>s})},30039:(e,t,n)=>{"use strict";n.r(t),n.d(t,{fromPixels:()=>g,fromPixelsAsync:()=>f,toPixels:()=>m});var r=n(23926),s=n(22885),i=n(29121),a=n(26151),o=n(73327),l=n(43740),u=n(62271),c=n(2668),h=n(99906);let d;function p(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,s=!1,o=!1,l=!1,u=!1,c=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)s=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)o=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)l=!0;else if(null!=e.getContext)u=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);c=!0}if(null!=(0,a.pI)(i.eBW,r.BV.backendName)){const n={pixels:e},s={numChannels:t};return r.BV.runKernel(i.eBW,n,s)}const[p,f]=o?[e.videoWidth,e.videoHeight]:[e.width,e.height];let m,g;if(u)m=e.getContext("2d").getImageData(0,0,p,f).data;else if(s||n)m=e.data;else if(l||o||c){if(null==d)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");d=new OffscreenCanvas(1,1).getContext("2d")}else d=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});d.canvas.width=p,d.canvas.height=f,d.drawImage(e,0,0,p,f),m=d.getImageData(0,0,p,f).data}if(4===t)g=new Int32Array(m);else{const e=p*f;g=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)g[n*t+e]=m[4*n+e]}const y=[f,p,t];return(0,h.w)(g,y,"int32")}async function f(e,t=3){let n=null;if((0,s.OB)().getBool("WRAP_TO_IMAGEBITMAP")&&function(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return p(n,t)}async function m(e,t){let n=(0,l._1)(e,"img","toPixels");if(!(e instanceof o.es)){const e=n;n=(0,u.p)(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,s]=n.shape.slice(0,2),i=2===n.rank?1:n.shape[2];if(i>4||2===i)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${i}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const a=await n.data(),c="float32"===n.dtype?255:1,h=new Uint8ClampedArray(s*r*4);for(let e=0;e<r*s;++e){const t=[0,0,0,255];for(let r=0;r<i;r++){const s=a[e*i+r];if("float32"===n.dtype){if(s<0||s>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${s}.`)}else if("int32"===n.dtype&&(s<0||s>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${s}.`);1===i?(t[0]=s*c,t[1]=s*c,t[2]=s*c):t[r]=s*c}const r=4*e;h[r+0]=Math.round(t[0]),h[r+1]=Math.round(t[1]),h[r+2]=Math.round(t[2]),h[r+3]=Math.round(t[3])}if(null!=t){t.width=s,t.height=r;const e=t.getContext("2d"),n=new ImageData(h,s,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),h}const g=(0,c.op)({fromPixels_:p})},72657:(e,t,n)=>{"use strict";n.d(t,{f:()=>i});var r=n(73327),s=n(20569);function i(e,t="float32",n){return t=t||"float32",s.Mu(e),new r.YD(e,t,n)}},62271:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var r=n(23926),s=n(29121),i=n(43740),a=n(20569);const o=(0,n(2668).op)({cast_:function(e,t){const n=(0,i._1)(e,"x","cast");if(!a.LP(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const o={x:n},l={dtype:t};return r.BV.runKernel(s.RFZ,o,l)}})},6825:(e,t,n)=>{"use strict";n.d(t,{m:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({ceil_:function(e){const t={x:(0,i._1)(e,"x","ceil","float32")};return r.BV.runKernel(s.gJX,t)}})},42279:(e,t,n)=>{"use strict";n.d(t,{i:()=>l});var r=n(23926),s=n(29121),i=n(43740),a=n(20569),o=n(14006);const l=(0,n(2668).op)({clipByValue_:function(e,t,n){const l=(0,i._1)(e,"x","clipByValue");if(a.hu(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return(0,o.h)(l.shape,t,l.dtype);const u={x:l},c={clipValueMin:t,clipValueMax:n};return r.BV.runKernel(s.xnO,u,c)}})},8723:(e,t,n)=>{"use strict";n.d(t,{d:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({clone_:function(e){const t={x:(0,i._1)(e,"x","clone","string_or_numeric")};return r.BV.runKernel(s.iJz,t)}})},61661:(e,t,n)=>{"use strict";n.d(t,{P:()=>o});var r=n(23926),s=n(29121),i=n(43740),a=n(20569);const o=(0,n(2668).op)({complex_:function(e,t){const n=(0,i._1)(e,"real","complex"),o=(0,i._1)(t,"imag","complex");a.k5(n.shape,o.shape,`real and imag shapes, ${n.shape} and ${o.shape}, must match in call to tf.complex().`);const l={real:n,imag:o};return r.BV.runKernel(s.Zz9,l)}})},46884:(e,t,n)=>{"use strict";n.d(t,{z:()=>l});var r=n(23926),s=n(29121),i=n(43740),a=n(20569),o=n(8723);const l=(0,n(2668).op)({concat_:function(e,t=0){(0,a.hu)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=(0,i.sI)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return(0,o.d)(n[0]);const l=n,u={axis:t};return r.BV.runKernel(s.Eh3,l,u)}})},72248:(e,t,n)=>{"use strict";n.d(t,{g:()=>s});var r=n(46884);const s=(0,n(2668).op)({concat1d_:function(e){return(0,r.z)(e,0)}})},99373:(e,t,n)=>{"use strict";n.d(t,{I:()=>s});var r=n(46884);const s=(0,n(2668).op)({concat2d_:function(e,t){return(0,r.z)(e,t)}})},8093:(e,t,n)=>{"use strict";n.d(t,{M:()=>s});var r=n(46884);const s=(0,n(2668).op)({concat3d_:function(e,t){return(0,r.z)(e,t)}})},64435:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(46884);const s=(0,n(2668).op)({concat4d_:function(e,t){return(0,r.z)(e,t)}})},30398:(e,t,n)=>{"use strict";n.d(t,{N:()=>i,o:()=>s});var r=n(20569);function s(e,t){const n=e[0].length;e.forEach(((e,t)=>{r.hu(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),r.hu(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const s=e[0];e.forEach(((e,i)=>{for(let a=0;a<n;a++)r.hu(a===t||e[a]===s[a],(()=>`Error in concat${n}D: Shape of tensors[${i}] (${e}) does not match the shape of the rest (${s}) along the non-concatenated axis ${i}.`))}))}function i(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}},11355:(e,t,n)=>{"use strict";n.d(t,{P:()=>u});var r=n(43740),s=n(20569),i=n(64794),a=n(2582),o=n(2668),l=n(4968);const u=(0,o.op)({conv1d_:function(e,t,n,o,u="NWC",c=1,h){const d=(0,r._1)(e,"x","conv1d"),p=(0,r._1)(t,"filter","conv1d");let f=d,m=!1;2===d.rank&&(m=!0,f=(0,l.X)(d,[1,d.shape[0],d.shape[1]])),s.hu(3===f.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${f.rank}.`)),s.hu(3===p.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${p.rank}.`)),a.m("conv1d",o,h),s.hu(f.shape[2]===p.shape[1],(()=>`Error in conv1d: depth of input (${f.shape[2]}) must match input depth for filter ${p.shape[1]}.`)),s.hu(a.jT(n,c),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${c}'`)),s.hu("NWC"===u,(()=>`Error in conv1d: got dataFormat of ${u} but only NWC is currently supported.`));const g=(0,l.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]]),y=(0,l.X)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),x=[1,n],v=[1,c],b=(0,i.T)(y,g,x,o,"NHWC",v,h);return m?(0,l.X)(b,[b.shape[2],b.shape[3]]):(0,l.X)(b,[b.shape[0],b.shape[2],b.shape[3]])}})},64794:(e,t,n)=>{"use strict";n.d(t,{T:()=>c});var r=n(23926),s=n(29121),i=n(43740),a=n(20569),o=n(2582),l=n(2668),u=n(4968);const c=(0,l.op)({conv2d_:function(e,t,n,l,c="NHWC",h=[1,1],d){const p=(0,i._1)(e,"x","conv2d","float32"),f=(0,i._1)(t,"filter","conv2d","float32");let m=p,g=!1;3===p.rank&&(g=!0,m=(0,u.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),a.hu(4===m.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${m.rank}.`)),a.hu(4===f.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${f.rank}.`)),o.m("conv2d",l,d);const y="NHWC"===c?m.shape[3]:m.shape[1];a.hu(y===f.shape[2],(()=>`Error in conv2d: depth of input (${y}) must match input depth for filter ${f.shape[2]}.`)),a.hu(o.jT(n,h),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${h}'`));const x={x:m,filter:f},v={strides:n,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d},b=r.BV.runKernel(s.mhS,x,v);return g?(0,u.X)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},36013:(e,t,n)=>{"use strict";n.d(t,{p:()=>u});var r=n(23926),s=n(29121),i=n(20569),a=n(2582),o=n(2668),l=n(4968);const u=(0,o.op)({conv2DBackpropFilter_:function(e,t,n,o,u,c="NHWC",h){let d=e;3===e.rank&&(d=(0,l.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let p=t;3===p.rank&&(p=(0,l.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),i.hu(4===d.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${d.shape}.`)),i.hu(4===p.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${p.shape}.`)),i.hu(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const f="NHWC"===c?d.shape[3]:d.shape[1],m="NHWC"===c?p.shape[3]:p.shape[1];i.hu(f===n[2],(()=>`Error in conv2dDerFilter: depth of input ${f}) must match input depth in filter (${n[2]}.`)),i.hu(m===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${m}) must match output depth for filter (${n[3]}).`)),a.m("conv2dDerFilter",u,h);const g={x:d,dy:p},y={strides:o,pad:u,dataFormat:c,dimRoundingMode:h,filterShape:n};return r.BV.runKernel(s.wUP,g,y)}})},39832:(e,t,n)=>{"use strict";n.d(t,{_:()=>u});var r=n(23926),s=n(29121),i=n(20569),a=n(2582),o=n(2668),l=n(4968);const u=(0,o.op)({conv2DBackpropInput_:function(e,t,n,o,u,c="NHWC",h){i.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let d=e,p=t,f=!1;3===t.rank&&(f=!0,p=(0,l.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),d=[1,e[0],e[1],e[2]]),i.hu(4===d.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${d.length}.`)),i.hu(4===p.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${p.rank}`)),i.hu(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const m="NHWC"===c?d[3]:d[1],g="NHWC"===c?p.shape[3]:p.shape[1];i.hu(m===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${m}) must match input depth for filter ${n.shape[2]}.`)),i.hu(g===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${g}) must match output depth for filter ${n.shape[3]}.`)),a.m("conv2dDerInput",u,h);const y={dy:p,filter:n},x={strides:o,pad:u,dataFormat:c,dimRoundingMode:h,inputShape:d},v=r.BV.runKernel(s.wm,y,x);return f?(0,l.X)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},71405:(e,t,n)=>{"use strict";n.d(t,{b:()=>i});var r=n(43740),s=n(39832);const i=(0,n(2668).op)({conv2dTranspose_:function(e,t,n,i,a,o){const l=(0,r._1)(e,"x","conv2dTranspose"),u=(0,r._1)(t,"filter","conv2dTranspose");return(0,s._)(n,l,u,i,a,"NHWC",o)}})},70473:(e,t,n)=>{"use strict";n.d(t,{p:()=>c});var r=n(23926),s=n(29121),i=n(43740),a=n(20569),o=n(2582),l=n(2668),u=n(4968);const c=(0,l.op)({conv3d_:function(e,t,n,l,c="NDHWC",h=[1,1,1]){const d=(0,i._1)(e,"x","conv3d"),p=(0,i._1)(t,"filter","conv3d");let f=d,m=!1;4===d.rank&&(m=!0,f=(0,u.X)(d,[1,d.shape[0],d.shape[1],d.shape[2],d.shape[3]])),a.hu(5===f.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${f.rank}.`)),a.hu(5===p.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${p.rank}.`)),a.hu(f.shape[4]===p.shape[3],(()=>`Error in conv3d: depth of input (${f.shape[4]}) must match input depth for filter ${p.shape[3]}.`)),a.hu((0,o.jT)(n,h),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${h}'`)),a.hu("NDHWC"===c,(()=>`Error in conv3d: got dataFormat of ${c} but only NDHWC is currently supported.`));const g={x:f,filter:p},y={strides:n,pad:l,dataFormat:c,dilations:h},x=r.BV.runKernel(s.x12,g,y);return m?(0,u.X)(x,[x.shape[1],x.shape[2],x.shape[3],x.shape[4]]):x}})},97594:(e,t,n)=>{"use strict";n.d(t,{_:()=>l});var r=n(23926),s=n(29121),i=n(20569),a=n(2668),o=n(4968);const l=(0,a.op)({conv3DBackpropInput_:function(e,t,n,a,l){i.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let u=e,c=t,h=!1;4===t.rank&&(h=!0,c=(0,o.X)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),u=[1,e[0],e[1],e[2],e[3]]);const d=u[4],p=c.shape[4];i.hu(5===u.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${u.length}.`)),i.hu(5===c.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${c.rank}`)),i.hu(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),i.hu(d===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${d}) must match input depth for filter ${n.shape[3]}.`)),i.hu(p===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[4]}.`));const f={dy:c,filter:n},m={pad:l,strides:a,inputShape:u},g=r.BV.runKernel(s.ik2,f,m);return h?(0,o.X)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})},11160:(e,t,n)=>{"use strict";n.d(t,{$:()=>i});var r=n(43740),s=n(97594);const i=(0,n(2668).op)({conv3dTranspose_:function(e,t,n,i,a){const o=(0,r._1)(e,"x","conv3dTranspose"),l=(0,r._1)(t,"filter","conv3dTranspose");return(0,s._)(n,o,l,i,a)}})},2582:(e,t,n)=>{"use strict";n.d(t,{I0:()=>f,Ix:()=>o,Rf:()=>s,Xw:()=>i,aO:()=>u,jT:()=>m,jw:()=>l,m:()=>y,pl:()=>a,sl:()=>g});var r=n(20569);function s(e,t,n,r,s="NHWC",i){return o(e,[...t,e[3]],n,i,r,null,null,g(s))}function i(e,t,n,r,s,i,a="channelsLast"){const[l,u]=c(t);let h;if("channelsLast"===a)h=[l,u,e[3],e[3]];else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);h=[l,u,e[1],e[1]]}return o(e,h,n,r,s,i,!1,a)}function a(e,t,n,r,s,i,a="NDHWC"){const[o,u,c]=h(t);let d,p;if("NDHWC"===a)p="channelsLast",d=[o,u,c,e[4],e[4]];else{if("NCDHW"!==a)throw new Error(`Unknown dataFormat ${a}`);p="channelsFirst",d=[o,u,c,e[1],e[1]]}return l(e,d,n,r,s,!1,p,i)}function o(e,t,n,r,s,i,a=!1,o="channelsLast"){let[l,h,f,m]=[-1,-1,-1,-1];if("channelsLast"===o)[l,h,f,m]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,m,h,f]=e}const[g,y,,x]=t,[v,b]=c(n),[w,_]=c(r),S=d(g,w),T=d(y,_),{padInfo:E,outHeight:M,outWidth:C}=function(e,t,n,r,s,i,a,o,l){let c,h,d;if("number"==typeof e){c={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=u(e,t,n));const i=e[1];return[p((e[0]-t+2*r)/n+1,s),p((i-t+2*r)/n+1,s)]}([t,n],i,r,e,o);h=s[0],d=s[1]}else if("same"===e){h=Math.ceil(t/r),d=Math.ceil(n/s);const e=Math.max(0,(h-1)*r+i-t),o=Math.max(0,(d-1)*s+a-n),l=Math.floor(e/2),u=e-l,p=Math.floor(o/2);c={top:l,bottom:u,left:p,right:o-p,type:"SAME"}}else if("valid"===e)c={top:0,bottom:0,left:0,right:0,type:"VALID"},h=Math.ceil((t-i+1)/r),d=Math.ceil((n-a+1)/s);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const u="channelsLast"===l?e[1][0]:e[2][0],f="channelsLast"===l?e[1][1]:e[2][1],m="channelsLast"===l?e[2][0]:e[3][0],g="channelsLast"===l?e[2][1]:e[3][1];c={top:u,bottom:f,left:m,right:g,type:0===u&&0===f&&0===m&&0===g?"VALID":"EXPLICIT"},h=p((t-i+u+f)/r+1,o),d=p((n-a+m+g)/s+1,o)}}return{padInfo:c,outHeight:h,outWidth:d}}(s,h,f,v,b,S,T,i,o),A=a?x*m:x;let I;return"channelsFirst"===o?I=[l,A,M,C]:"channelsLast"===o&&(I=[l,M,C,A]),{batchSize:l,dataFormat:o,inHeight:h,inWidth:f,inChannels:m,outHeight:M,outWidth:C,outChannels:A,padInfo:E,strideHeight:v,strideWidth:b,filterHeight:g,filterWidth:y,effectiveFilterHeight:S,effectiveFilterWidth:T,dilationHeight:w,dilationWidth:_,inShape:e,outShape:I,filterShape:t}}function l(e,t,n,r,s,i=!1,a="channelsLast",o){let[l,c,f,m,g]=[-1,-1,-1,-1,-1];if("channelsLast"===a)[l,c,f,m,g]=e;else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);[l,g,c,f,m]=e}const[y,x,v,,b]=t,[w,_,S]=h(n),[T,E,M]=h(r),C=d(y,T),A=d(x,E),I=d(v,M),{padInfo:R,outDepth:k,outHeight:N,outWidth:L}=function(e,t,n,r,s,i,a,o,l,c,h){let d,f,m,g;if("number"==typeof e){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const i=function(e,t,n,r,s,i){null==s&&(s=u(e,t,r));const a=e[1],o=e[2];return[p((e[0]-t+2*s)/r+1,i),p((a-t+2*s)/r+1,i),p((o-t+2*s)/r+1,i),1]}([t,n,r,1],o,0,s,e,h);f=i[0],m=i[1],g=i[2]}else if("same"===e){f=Math.ceil(t/s),m=Math.ceil(n/i),g=Math.ceil(r/a);const e=(f-1)*s+o-t,u=(m-1)*i+l-n,h=(g-1)*a+c-r,p=Math.floor(e/2),y=e-p,x=Math.floor(u/2),v=u-x,b=Math.floor(h/2);d={top:x,bottom:v,left:b,right:h-b,front:p,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);d={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},f=Math.ceil((t-o+1)/s),m=Math.ceil((n-l+1)/i),g=Math.ceil((r-c+1)/a)}return{padInfo:d,outDepth:f,outHeight:m,outWidth:g}}(s,c,f,m,w,_,S,C,A,I,o),D=i?b*g:b;let O;return"channelsFirst"===a?O=[l,D,k,N,L]:"channelsLast"===a&&(O=[l,k,N,L,D]),{batchSize:l,dataFormat:a,inDepth:c,inHeight:f,inWidth:m,inChannels:g,outDepth:k,outHeight:N,outWidth:L,outChannels:D,padInfo:R,strideDepth:w,strideHeight:_,strideWidth:S,filterDepth:y,filterHeight:x,filterWidth:v,effectiveFilterDepth:C,effectiveFilterHeight:A,effectiveFilterWidth:I,dilationDepth:T,dilationHeight:E,dilationWidth:M,inShape:e,outShape:O,filterShape:t}}function u(e,t,n,r=1){const s=d(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function c(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function h(e){return"number"==typeof e?[e,e,e]:e}function d(e,t){return t<=1?e:e+(e-1)*(t-1)}function p(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function f(e){const[t,n,r]=c(e);return 1===t&&1===n&&1===r}function m(e,t){return f(e)||f(t)}function g(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function y(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)r.hu(r.GN(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{r.hu(r.GN(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}},70173:(e,t,n)=>{"use strict";n.d(t,{m:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({cos_:function(e){const t={x:(0,i._1)(e,"x","cos","float32")};return r.BV.runKernel(s.mc4,t)}})},2699:(e,t,n)=>{"use strict";n.d(t,{f:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({cosh_:function(e){const t={x:(0,i._1)(e,"x","cosh","float32")};return r.BV.runKernel(s.TR1,t)}})},9640:(e,t,n)=>{"use strict";n.d(t,{$:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({cumprod_:function(e,t=0,n=!1,a=!1){const o={x:(0,i._1)(e,"x","cumprod")},l={axis:t,exclusive:n,reverse:a};return r.BV.runKernel(s.Byc,o,l)}})},37405:(e,t,n)=>{"use strict";n.d(t,{z:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({cumsum_:function(e,t=0,n=!1,a=!1){const o={x:(0,i._1)(e,"x","cumsum")},l={axis:t,exclusive:n,reverse:a};return r.BV.runKernel(s.iHb,o,l)}})},75746:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var r=n(23926),s=n(29121),i=n(43740),a=n(20569);const o=(0,n(2668).op)({denseBincount_:function(e,t,n,o=!1){const l=(0,i._1)(e,"x","denseBincount"),u=(0,i._1)(t,"weights","denseBincount");a.hu("int32"===l.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${l.dtype}`)),a.hu(l.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${l.rank}.`)),a.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),a.hu(u.size===l.size||0===u.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${l.shape}, weights shape: ${u.shape}.`));const c={x:l,weights:u},h={size:n,binaryOutput:o};return r.BV.runKernel(s.QRR,c,h)}})},89112:(e,t,n)=>{"use strict";n.d(t,{n:()=>o});var r=n(23926),s=n(29121),i=n(43740),a=n(20569);const o=(0,n(2668).op)({depthToSpace_:function(e,t,n="NHWC"){const o=(0,i._1)(e,"x","depthToSpace","float32"),l="NHWC"===n?o.shape[1]:o.shape[2],u="NHWC"===n?o.shape[2]:o.shape[3],c="NHWC"===n?o.shape[3]:o.shape[1];a.hu(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),a.hu(l*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${l} and ${t}  for depthToSpace with input shape\n    ${o.shape}`)),a.hu(u*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${u} and ${t} for depthToSpace with input shape\n        ${o.shape}`)),a.hu(c%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${c} for depthToSpace with input shape ${o.shape}`));const h={x:o},d={blockSize:t,dataFormat:n};return r.BV.runKernel(s.T0n,h,d)}})},64718:(e,t,n)=>{"use strict";n.d(t,{B:()=>c});var r=n(23926),s=n(29121),i=n(43740),a=n(20569),o=n(2582),l=n(2668),u=n(4968);const c=(0,l.op)({depthwiseConv2d_:function(e,t,n,l,c="NHWC",h=[1,1],d){const p=(0,i._1)(e,"x","depthwiseConv2d","float32"),f=(0,i._1)(t,"filter","depthwiseConv2d","float32");let m=p,g=!1;3===p.rank&&(g=!0,m=(0,u.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),a.hu(4===m.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${m.rank}.`)),a.hu(4===f.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${f.rank}.`));const y="NHWC"===c?m.shape[3]:m.shape[1];a.hu(y===f.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${y}) must match the inChannels dimension in filter ${f.shape[2]}.`)),o.m("depthwiseConv2d",l,d);const x={x:m,filter:f},v={strides:n,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d},b=r.BV.runKernel(s.cie,x,v);return g?(0,u.X)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},88098:(e,t,n)=>{"use strict";n.d(t,{z:()=>o});var r=n(23926),s=n(29121),i=n(2668),a=n(4968);const o=(0,i.op)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,i,o,l=[1,1],u){let c=e;3===e.rank&&(c=(0,a.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let h=t;3===h.rank&&(h=(0,a.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const d={x:c,dy:h},p={strides:i,pad:o,dimRoundingMode:u,dilations:l,filterShape:n};return r.BV.runKernel(s.sL$,d,p)}})},54375:(e,t,n)=>{"use strict";n.d(t,{v:()=>o});var r=n(23926),s=n(29121),i=n(2668),a=n(4968);const o=(0,i.op)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,i,o,l=[1,1],u){let c=t,h=!1;3===t.rank&&(h=!0,c=(0,a.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const d={dy:c,filter:n},p={strides:i,pad:o,dimRoundingMode:u,dilations:l,inputShape:e},f=r.BV.runKernel(s.y7R,d,p);return h?(0,a.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},31118:(e,t,n)=>{"use strict";n.d(t,{K:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({diag_:function(e){const t={x:(0,i._1)(e,"x","diag")};return r.BV.runKernel(s.$w,t)}})},70557:(e,t,n)=>{"use strict";n.d(t,{W:()=>u});var r=n(23926),s=n(29121),i=n(43740),a=n(20569),o=n(2668),l=n(4968);const u=(0,o.op)({dilation2d_:function(e,t,n,o,u=[1,1],c="NHWC"){const h=(0,i._1)(e,"x","dilation2d"),d=(0,i._1)(t,"filter","dilation2d");a.hu(3===h.rank||4===h.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${h.rank}.`)),a.hu(3===d.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${d.rank}.`)),a.hu("NHWC"===c,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${c}`));let p=h,f=!1;3===h.rank&&(p=(0,l.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]]),f=!0);const m={x:p,filter:d},g={strides:n,pad:o,dilations:u},y=r.BV.runKernel(s.p4S,m,g);return f?(0,l.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},41274:(e,t,n)=>{"use strict";n.d(t,{h:()=>l});var r=n(23926),s=n(29121),i=n(80747),a=n(43740),o=n(9165);const l=(0,n(2668).op)({div_:function(e,t){let n=(0,a._1)(e,"a","div"),l=(0,a._1)(t,"b","div");if([n,l]=(0,i.makeTypesMatch)(n,l),"int32"===n.dtype&&"int32"===l.dtype)return(0,o.q)(n,l);const u={a:n,b:l};return r.BV.runKernel(s.oHH,u,{})}})},49322:(e,t,n)=>{"use strict";n.d(t,{N:()=>c});var r=n(80747),s=n(43740),i=n(41274),a=n(26477),o=n(2668),l=n(95912),u=n(6577);const c=(0,o.op)({divNoNan_:function(e,t){let n=(0,s._1)(e,"a","div"),o=(0,s._1)(t,"b","div");[n,o]=(0,r.makeTypesMatch)(n,o);const c=(0,i.h)(n,o),h=(0,u.P)(c),d=(0,a.D)(o,h);return(0,l.a)(d,h,c)}})},30548:(e,t,n)=>{"use strict";n.d(t,{A:()=>l});var r=n(43740),s=n(20569),i=n(28687),a=n(2668),o=n(4968);const l=(0,a.op)({dot_:function(e,t){const n=(0,r._1)(e,"t1","dot"),a=(0,r._1)(t,"t2","dot");s.hu(!(1!==n.rank&&2!==n.rank||1!==a.rank&&2!==a.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${a.rank}.`));const l=1===n.rank?n.size:n.shape[1],u=1===a.rank?a.size:a.shape[0];if(s.hu(l===u,(()=>`Error in dot: inner dimensions of inputs must match, but got ${l} and ${u}.`)),1===n.rank&&1===a.rank){const e=(0,o.X)(n,[1,-1]),t=(0,o.X)(a,[-1,1]),r=(0,i.O)(e,t);return(0,o.X)(r,[])}if(1===n.rank&&2===a.rank){const e=(0,o.X)(n,[1,-1]),t=(0,o.X)(a,[a.shape[0],a.shape[1]]),r=(0,i.O)(e,t);return(0,o.X)(r,[r.size])}if(2===n.rank&&1===a.rank){const e=(0,o.X)(a,[-1,1]),t=(0,i.O)(n,e);return(0,o.X)(t,[t.size])}{const e=(0,o.X)(a,[a.shape[0],a.shape[1]]);return(0,i.O)(n,e)}}})},36165:(e,t,n)=>{"use strict";n.d(t,{r:()=>p});var r=n(73327),s=n(43740),i=n(20569),a=n(56407),o=n(41274),l=n(66791),u=n(26943),c=n(24841),h=n(2668),d=n(75002);const p=(0,h.op)({dropout_:function(e,t,n,h){const p=(0,s._1)(e,"x","dropout");if(i.hu("float32"===p.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${p.dtype} tensor instead.`)),i.hu(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof r.es?p.clone():p;const f=(0,l.k)(p,n),m=1-t,g=(0,o.h)((0,u.G)((0,a.I)((0,d.L)(f,0,1,"float32",h),m)),m);return(0,c.d)(p,g)}})},66791:(e,t,n)=>{"use strict";n.d(t,{k:()=>s});var r=n(20569);function s(e,t){if(null==t)return e.shape.slice();if(r.cO(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}},94653:(e,t,n)=>{"use strict";n.d(t,{W:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({einsum_:function(e,...t){const n=t.map(((e,t)=>(0,i._1)(e,`tensors${t}`,"einsum"))),a={equation:e};return r.BV.runKernel(s.$g6,n,a)}})},83233:(e,t,n)=>{"use strict";n.d(t,{p:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({elu_:function(e){const t={x:(0,i._1)(e,"x","elu","float32")};return r.BV.runKernel(s.SX0,t)}})},26477:(e,t,n)=>{"use strict";n.d(t,{D:()=>l});var r=n(23926),s=n(29121),i=n(80747),a=n(43740),o=n(72200);const l=(0,n(2668).op)({equal_:function(e,t){let n=(0,a._1)(e,"a","equal","string_or_numeric"),l=(0,a._1)(t,"b","equal","string_or_numeric");[n,l]=(0,i.makeTypesMatch)(n,l),(0,o.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return r.BV.runKernel(s.hdR,u)}})},34650:(e,t,n)=>{"use strict";n.d(t,{q:()=>l});var r=n(23926),s=n(29121),i=n(43740),a=n(20569),o=n(62271);const l=(0,n(2668).op)({erf_:function(e){let t=(0,i._1)(e,"x","erf");a.hu("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=(0,o.p)(t,"float32"));const n={x:t};return r.BV.runKernel(s.Omj,n)}})},52176:(e,t,n)=>{"use strict";n.d(t,{Aj:()=>s,IA:()=>r,Kh:()=>a,Qy:()=>o,eh:()=>l,py:()=>i});const r=.3275911,s=.254829592,i=-.284496736,a=1.421413741,o=-1.453152027,l=1.061405429},31954:(e,t,n)=>{"use strict";n.d(t,{d:()=>s});var r=n(3561);const s=(0,n(2668).op)({euclideanNorm_:function(e,t=null,n=!1){return(0,r.K)(e,"euclidean",t,n)}})},44842:(e,t,n)=>{"use strict";n.d(t,{Q:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({exp_:function(e){const t={x:(0,i._1)(e,"x","exp")};return r.BV.runKernel(s.NEP,t)}})},81300:(e,t,n)=>{"use strict";n.d(t,{d:()=>o});var r=n(23926),s=n(29121),i=n(43740),a=n(20569);const o=(0,n(2668).op)({expandDims_:function(e,t=0){const n=(0,i._1)(e,"x","expandDims","string_or_numeric");a.hu(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const o={input:n},l={dim:t};return r.BV.runKernel(s.YFo,o,l)}})},53426:(e,t,n)=>{"use strict";n.d(t,{t:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({expm1_:function(e){const t={x:(0,i._1)(e,"x","expm1")};return r.BV.runKernel(s.Y0y,t)}})},66557:(e,t,n)=>{"use strict";n.d(t,{i:()=>l});var r=n(72657),s=n(81300),i=n(2668),a=n(4968),o=n(47501);const l=(0,i.op)({eye_:function(e,t,n,i="float32"){null==t&&(t=e);const l=(0,r.f)([e,t],i),u=e<=t?e:t;for(let e=0;e<u;++e)l.set(1,e,e);const c=(0,a.X)(l.toTensor(),[e,t]);if(null==n)return c;if(1===n.length)return(0,o.G)((0,s.d)(c,0),[n[0],1,1]);if(2===n.length)return(0,o.G)((0,s.d)((0,s.d)(c,0),0),[n[0],n[1],1,1]);if(3===n.length)return(0,o.G)((0,s.d)((0,s.d)((0,s.d)(c,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}})},14006:(e,t,n)=>{"use strict";n.d(t,{h:()=>i});var r=n(23926),s=n(29121);function i(e,t,n){const i={shape:e,value:t,dtype:n};return r.BV.runKernel(s.deh,{},i)}},26943:(e,t,n)=>{"use strict";n.d(t,{G:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({floor_:function(e){const t={x:(0,i._1)(e,"x","floor","float32")};return r.BV.runKernel(s.OR,t)}})},9165:(e,t,n)=>{"use strict";n.d(t,{q:()=>o});var r=n(23926),s=n(29121),i=n(80747),a=n(43740);const o=(0,n(2668).op)({floorDiv_:function(e,t){let n=(0,a._1)(e,"a","floorDiv"),o=(0,a._1)(t,"b","floorDiv");[n,o]=(0,i.makeTypesMatch)(n,o);const l={a:n,b:o};return r.BV.runKernel(s.jeX,l)}})},89966:(e,t,n)=>{"use strict";n.d(t,{T:()=>x});var r=n(23926),s=n(30633),i=n(29121),a=n(80747),o=n(43740),l=n(20569),u=n(56407),c=n(72200),h=n(64794),d=n(36013),p=n(39832),f=n(2582),m=n(19323),g=n(2668),y=n(4968);const x=(0,g.op)({fusedConv2d_:function({x:e,filter:t,strides:n,pad:g,dataFormat:x="NHWC",dilations:v=[1,1],dimRoundingMode:b,bias:w,activation:_="linear",preluActivationWeights:S,leakyreluAlpha:T}){if(_=_||"linear",!1===(0,m.uy)(r.BV.state.gradientDepth,_)){l.hu("NHWC"===x,(()=>`Error in fused conv2d: got dataFormat of ${x} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let r=(0,h.T)(e,t,n,g,x,v,b);return null!=w&&(r=(0,u.I)(r,w)),(0,m.QH)(r,_,S,T)}const E=(0,o._1)(e,"x","conv2d","float32"),M=(0,o._1)(t,"filter","conv2d","float32");let C=E,A=!1;3===E.rank&&(A=!0,C=(0,y.X)(E,[1,E.shape[0],E.shape[1],E.shape[2]])),l.hu(4===C.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${C.rank}.`)),l.hu(4===M.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${M.rank}.`)),f.m("fused conv2d",g,b);const I="NHWC"===x?C.shape[3]:C.shape[1];l.hu(M.shape[2]===I,(()=>`Error in conv2d: depth of input (${I}) must match input depth for filter ${M.shape[2]}.`)),l.hu(f.jT(n,v),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${v}'`));const R=f.Ix(C.shape,M.shape,n,v,g,b);let k,N;if(null!=w&&(k=(0,o._1)(w,"bias","fused conv2d"),[k]=(0,a.makeTypesMatch)(k,E),"NHWC"===x?c.assertAndGetBroadcastShape(R.outShape,k.shape):(l.hu(k.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${k.shape.length}.`)),l.hu(0===k.shape.length||k.shape[0]===R.outChannels||1===k.shape[0],(()=>`Error in fused conv2d: bias shape (${k.shape}) is not compatible with the number of output channels (${R.outChannels})`)))),null!=S){const e=S.shape;if(l.hu(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)l.hu(1===e[0]||e[0]===R.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${R.outChannels}).`));else if(3===e.length)try{c.assertAndGetBroadcastShape(e,R.outShape)}catch(t){const n=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${R.outShape}).`;throw Error(n)}N=(0,o._1)(S,"prelu weights","fused conv2d")}const L=(e,t)=>{l.hu("NHWC"===x,(()=>`Error in gradient of fused conv2D: got dataFormat of ${x} but only NHWC is currently supported.`));const[r,s,i,a]=t,o=(0,m.Fr)(e,i,_);l.hu(f.I0(v),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${v}'`));const u=[(0,p._)(s.shape,o,r,n,g),(0,d.p)(s,o,r.shape,n,g)];if(null!=a){const e=(0,m.pf)(a,o);u.push(e)}return u},D={x:C,filter:M,bias:k,preluActivationWeights:N},O={strides:n,pad:g,dataFormat:x,dilations:v,dimRoundingMode:b,activation:_,leakyreluAlpha:T};if(null==w){const e=(0,s.cb)(((e,t,n)=>{let s=r.BV.runKernel(i._V0,D,O);return n([t,e,s]),A&&(s=(0,y.X)(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:L}}));return e(C,M)}{const e=(0,s.cb)(((e,t,n,s)=>{let a=r.BV.runKernel(i._V0,D,O);return s([t,e,a,n]),A&&(a=(0,y.X)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:L}}));return e(C,M,k)}}})},73211:(e,t,n)=>{"use strict";n.d(t,{B:()=>x});var r=n(23926),s=n(30633),i=n(29121),a=n(80747),o=n(43740),l=n(20569),u=n(56407),c=n(72200),h=n(2582),d=n(64718),p=n(88098),f=n(54375),m=n(19323),g=n(2668),y=n(4968);const x=(0,g.op)({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:g,dataFormat:x="NHWC",dilations:v=[1,1],dimRoundingMode:b,bias:w,activation:_="linear",preluActivationWeights:S,leakyreluAlpha:T}){if(!1===(0,m.uy)(r.BV.state.gradientDepth,_)){let r=(0,d.B)(e,t,n,g,x,v,b);return null!=w&&(r=(0,u.I)(r,w)),(0,m.QH)(r,_,S,T)}const E=(0,o._1)(e,"x","depthwiseConv2d","float32"),M=(0,o._1)(t,"filter","depthwiseConv2d","float32");let C=E,A=!1;3===E.rank&&(A=!0,C=(0,y.X)(E,[1,E.shape[0],E.shape[1],E.shape[2]])),l.hu(4===C.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${C.rank}.`)),l.hu(4===M.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${M.rank}.`)),l.hu(C.shape[3]===M.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${C.shape[3]}) must match the inChannels dimension in filter ${M.shape[2]}.`)),null==v&&(v=[1,1]),l.hu(h.jT(n,v),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${v}'`)),h.m("fused depthwiseConv2d",g,b);const I=h.Ix(C.shape,M.shape,n,v,g,b,!0);let R,k;null!=w&&(R=(0,o._1)(w,"bias","fused conv2d"),[R]=(0,a.makeTypesMatch)(R,E),c.assertAndGetBroadcastShape(I.outShape,R.shape)),null!=S&&(k=(0,o._1)(S,"prelu weights","fused depthwiseConv2d"));const N=(e,t)=>{l.hu(h.I0(v),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${v}'`));const[r,s,i,a]=t,o=(0,m.Fr)(e,i,_),u=(0,f.v)(s.shape,o,r,n,g,v,b),c=(0,p.z)(s,o,r.shape,n,g,v,b);return null!=a?[u,c,(0,m.pf)(R,o)]:[u,c]},L={x:C,filter:M,bias:R,preluActivationWeights:k},D={strides:n,pad:g,dataFormat:x,dilations:v,dimRoundingMode:b,activation:_,leakyreluAlpha:T};if(null==w){const e=(0,s.cb)(((e,t,n)=>{let s=r.BV.runKernel(i.luS,L,D);return n([t,e,s]),A&&(s=(0,y.X)(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:N}}));return e(C,M)}{const e=(0,s.cb)(((e,t,n,s)=>{let a=r.BV.runKernel(i.luS,L,D);return s([t,e,a,n]),A&&(a=(0,y.X)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:N}}));return e(C,M,R)}}})},35901:(e,t,n)=>{"use strict";n.d(t,{O:()=>m});var r=n(23926),s=n(30633),i=n(29121),a=n(80747),o=n(43740),l=n(20569),u=n(56407),c=n(72200),h=n(19323),d=n(28687),p=n(2668),f=n(4968);const m=(0,p.op)({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:p=!1,bias:m,activation:g="linear",preluActivationWeights:y,leakyreluAlpha:x=.2}){if(!1===(0,h.uy)(r.BV.state.gradientDepth,g)){let r=(0,d.O)(e,t,n,p);return null!=m&&(r=(0,u.I)(r,m)),(0,h.QH)(r,g,y,x)}let v=(0,o._1)(e,"a","fused matMul"),b=(0,o._1)(t,"b","fused matMul");[v,b]=(0,a.makeTypesMatch)(v,b);const w=n?v.shape[v.rank-2]:v.shape[v.rank-1],_=p?b.shape[b.rank-1]:b.shape[b.rank-2],S=n?v.shape[v.rank-1]:v.shape[v.rank-2],T=p?b.shape[b.rank-2]:b.shape[b.rank-1],E=v.shape.slice(0,-2),M=b.shape.slice(0,-2),C=l.NA(E),A=l.NA(M);l.hu(w===_,(()=>`Error in fused matMul: inner shapes (${w}) and (${_}) of Tensors with shapes ${v.shape} and ${b.shape} and transposeA=${n} and transposeB=${p} must match.`));const I=c.assertAndGetBroadcastShape(v.shape.slice(0,-2),b.shape.slice(0,-2)).concat([S,T]),R=n?(0,f.X)(v,[C,w,S]):(0,f.X)(v,[C,S,w]),k=p?(0,f.X)(b,[A,T,_]):(0,f.X)(b,[A,_,T]);let N,L;null!=m&&(N=(0,o._1)(m,"bias","fused matMul"),[N]=(0,a.makeTypesMatch)(N,v),c.assertAndGetBroadcastShape(I,N.shape)),null!=y&&(L=(0,o._1)(y,"prelu weights","fused matMul"));const D=(e,t)=>{const[r,s,i,a]=t,o=(0,h.Fr)((0,f.X)(e,i.shape),i,g);let l,u;return n||p?!n&&p?(l=(0,d.O)(o,s,!1,!1),u=(0,d.O)(o,r,!0,!1)):n&&!p?(l=(0,d.O)(s,o,!1,!0),u=(0,d.O)(r,o,!1,!1)):(l=(0,d.O)(s,o,!0,!0),u=(0,d.O)(o,r,!0,!0)):(l=(0,d.O)(o,s,!1,!0),u=(0,d.O)(r,o,!0,!1)),null!=m?[l,u,(0,h.pf)(a,o)]:[l,u]},O={a:R,b:k,bias:N,preluActivationWeights:L},P={transposeA:n,transposeB:p,activation:g,leakyreluAlpha:x};if(null==m){const e=(0,s.cb)(((e,t,n)=>{const s=r.BV.runKernel(i.usg,O,P);return n([e,t,s]),{value:(0,f.X)(s,I),gradFunc:D}}));return e(R,k)}{const e=(0,s.cb)(((e,t,n,s)=>{const a=r.BV.runKernel(i.usg,O,P);return s([e,t,a,n]),{value:(0,f.X)(a,I),gradFunc:D}}));return e(R,k,N)}}})},13882:(e,t,n)=>{"use strict";n.r(t),n.d(t,{conv2d:()=>r.T,depthwiseConv2d:()=>s.B,matMul:()=>i.O});var r=n(89966),s=n(73211),i=n(35901)},19323:(e,t,n)=>{"use strict";n.d(t,{Fr:()=>f,QH:()=>g,pf:()=>m,uy:()=>y});var r=n(72200),s=n(83233),i=n(99133),a=n(24841),o=n(98151),l=n(7409),u=n(83582),c=n(4968),h=n(30625),d=n(71901),p=n(15475);function f(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return(0,a.d)(e,(0,d.N)(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function m(e,t){let n=t;const s=r.getReductionAxes(e.shape,t.shape);return s.length>0&&(n=(0,p.S)(n,s)),(0,c.X)(n,e.shape)}function g(e,t,n,r){if("linear"===t)return e;if("relu"===t)return(0,l.U)(e);if("elu"===t)return(0,s.p)(e);if("relu6"===t)return(0,u.b)(e);if("prelu"===t)return(0,o.A)(e,n);if("leakyrelu"===t)return(0,i.h)(e,r);if("sigmoid"===t)return(0,h.X)(e);throw new Error(`Unknown fused activation ${t}.`)}const y=(e,t)=>!(e>0)||"linear"===t},24926:(e,t,n)=>{"use strict";n.d(t,{I:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({gather_:function(e,t,n=0,a=0){const o={x:(0,i._1)(e,"x","gather"),indices:(0,i._1)(t,"indices","gather","int32")},l={axis:n,batchDims:a};return r.BV.runKernel(s.qi_,o,l)}})},87494:(e,t,n)=>{"use strict";n.d(t,{d:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({gatherND_:function(e,t){const n=(0,i._1)(t,"indices","gatherND","int32"),a={params:(0,i._1)(e,"x","gatherND","string_or_numeric"),indices:n};return r.BV.runKernel(s.q1x,a)}})},37410:(e,t,n)=>{"use strict";n.d(t,{prepareAndValidate:()=>s});var r=n(20569);function s(e,t){const n=e.shape.length,s=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${n}`);if(0===(0,r.NA)(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const i=t.shape,a=i[i.length-1];let o=1;for(let e=0;e<i.length-1;++e)o*=i[e];const l=e.shape,u=i.slice();u.pop();let c=1;for(let e=a;e<n;++e)c*=l[e],u.push(l[e]);const h=[...(0,r.e3)(e.shape).map((e=>e/c)),1].slice(0,a);return[u,o,c,h]}},20636:(e,t,n)=>{"use strict";n.d(t,{p:()=>l});var r=n(23926),s=n(29121),i=n(80747),a=n(43740),o=n(72200);const l=(0,n(2668).op)({greater_:function(e,t){let n=(0,a._1)(e,"a","greater","string_or_numeric"),l=(0,a._1)(t,"b","greater","string_or_numeric");[n,l]=(0,i.makeTypesMatch)(n,l),(0,o.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return r.BV.runKernel(s.iZT,u)}})},17630:(e,t,n)=>{"use strict";n.d(t,{b:()=>l});var r=n(23926),s=n(29121),i=n(80747),a=n(43740),o=n(72200);const l=(0,n(2668).op)({greaterEqual_:function(e,t){let n=(0,a._1)(e,"a","greaterEqual","string_or_numeric"),l=(0,a._1)(t,"b","greaterEqual","string_or_numeric");[n,l]=(0,i.makeTypesMatch)(n,l),(0,o.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return r.BV.runKernel(s.Acj,u)}})},64386:(e,t,n)=>{"use strict";n.d(t,{a:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({imag_:function(e){const t={input:(0,i._1)(e,"input","imag")};return r.BV.runKernel(s.J_u,t)}})},61066:(e,t,n)=>{"use strict";n.d(t,{B:()=>o});var r=n(23926),s=n(29121),i=n(43740),a=n(20569);const o=(0,n(2668).op)({cropAndResize_:function(e,t,n,o,l="bilinear",u=0){const c=(0,i._1)(e,"image","cropAndResize"),h=(0,i._1)(t,"boxes","cropAndResize","float32"),d=(0,i._1)(n,"boxInd","cropAndResize","int32"),p=h.shape[0];a.hu(4===c.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${c.rank}.`)),a.hu(2===h.rank&&4===h.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${p},4] but had shape ${h.shape}.`)),a.hu(1===d.rank&&d.shape[0]===p,(()=>`Error in cropAndResize: boxInd must be have size [${p}] but had shape ${h.shape}.`)),a.hu(2===o.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${o.length}.`)),a.hu(o[0]>=1&&o[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${o}`)),a.hu("bilinear"===l||"nearest"===l,(()=>`method must be bilinear or nearest, but was ${l}`));const f={image:c,boxes:h,boxInd:d},m={method:l,extrapolationValue:u,cropSize:o};return r.BV.runKernel(s.VcC,f,m)}})},90824:(e,t,n)=>{"use strict";n.d(t,{V:()=>o});var r=n(23926),s=n(29121),i=n(43740),a=n(20569);const o=(0,n(2668).op)({flipLeftRight_:function(e){const t=(0,i._1)(e,"image","flipLeftRight","float32");a.hu(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return r.BV.runKernel(s.Uyb,n,{})}})},16114:(e,t,n)=>{"use strict";n.d(t,{F:()=>o});var r=n(43740),s=n(20569),i=n(2668),a=n(47501);const o=(0,i.op)({grayscaleToRGB_:function(e){const t=(0,r._1)(e,"image","grayscaleToRGB"),n=t.rank-1,i=t.shape[n];s.hu(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),s.hu(1===i,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${i}.`));const o=new Array(t.rank);return o.fill(1,0,n),o[n]=3,(0,a.G)(t,o)}})},99009:(e,t,n)=>{"use strict";n.d(t,{o:()=>o});var r=n(23926),s=n(29121),i=n(43740),a=n(69869);const o=(0,n(2668).op)({nonMaxSuppression_:function(e,t,n,o=.5,l=Number.NEGATIVE_INFINITY){const u=(0,i._1)(e,"boxes","nonMaxSuppression","float32"),c=(0,i._1)(t,"scores","nonMaxSuppression","float32"),h=(0,a.e)(u,c,n,o,l),d={maxOutputSize:n=h.maxOutputSize,iouThreshold:o=h.iouThreshold,scoreThreshold:l=h.scoreThreshold};return r.BV.runKernel(s.uv1,{boxes:u,scores:c},d)}})},56526:(e,t,n)=>{"use strict";n.d(t,{V:()=>o});var r=n(12667),s=n(43740),i=n(69869),a=n(46092);const o=async function(e,t,n,o=.5,l=Number.NEGATIVE_INFINITY){const u=(0,s._1)(e,"boxes","nonMaxSuppressionAsync"),c=(0,s._1)(t,"scores","nonMaxSuppressionAsync"),h=(0,i.e)(u,c,n,o,l);n=h.maxOutputSize,o=h.iouThreshold,l=h.scoreThreshold;const d=await Promise.all([u.data(),c.data()]),p=d[0],f=d[1],{selectedIndices:m}=(0,r.GP)(p,f,n,o,l);return u!==e&&u.dispose(),c!==t&&c.dispose(),(0,a.R)(m,"int32")}},63765:(e,t,n)=>{"use strict";n.d(t,{q:()=>o});var r=n(23926),s=n(29121),i=n(43740),a=n(69869);const o=(0,n(2668).op)({nonMaxSuppressionPadded_:function(e,t,n,o=.5,l=Number.NEGATIVE_INFINITY,u=!1){const c=(0,i._1)(e,"boxes","nonMaxSuppression"),h=(0,i._1)(t,"scores","nonMaxSuppression"),d=(0,a.e)(c,h,n,o,l,null),p={boxes:c,scores:h},f={maxOutputSize:d.maxOutputSize,iouThreshold:d.iouThreshold,scoreThreshold:d.scoreThreshold,padToMaxOutputSize:u},m=r.BV.runKernel(s.cye,p,f);return{selectedIndices:m[0],validOutputs:m[1]}}})},88500:(e,t,n)=>{"use strict";n.d(t,{N:()=>l});var r=n(12667),s=n(43740),i=n(69869),a=n(99494),o=n(46092);const l=async function(e,t,n,l=.5,u=Number.NEGATIVE_INFINITY,c=!1){const h=(0,s._1)(e,"boxes","nonMaxSuppressionAsync"),d=(0,s._1)(t,"scores","nonMaxSuppressionAsync"),p=(0,i.e)(h,d,n,l,u,null),f=p.maxOutputSize,m=p.iouThreshold,g=p.scoreThreshold,[y,x]=await Promise.all([h.data(),d.data()]),{selectedIndices:v,validOutputs:b}=(0,r.qP)(y,x,f,m,g,c);return h!==e&&h.dispose(),d!==t&&d.dispose(),{selectedIndices:(0,o.R)(v,"int32"),validOutputs:(0,a.i)(b,"int32")}}},91424:(e,t,n)=>{"use strict";n.d(t,{t:()=>o});var r=n(23926),s=n(29121),i=n(43740),a=n(69869);const o=(0,n(2668).op)({nonMaxSuppressionWithScore_:function(e,t,n,o=.5,l=Number.NEGATIVE_INFINITY,u=0){const c=(0,i._1)(e,"boxes","nonMaxSuppression"),h=(0,i._1)(t,"scores","nonMaxSuppression"),d=(0,a.e)(c,h,n,o,l,u),p={boxes:c,scores:h},f={maxOutputSize:n=d.maxOutputSize,iouThreshold:o=d.iouThreshold,scoreThreshold:l=d.scoreThreshold,softNmsSigma:u=d.softNmsSigma},m=r.BV.runKernel(s.W0H,p,f);return{selectedIndices:m[0],selectedScores:m[1]}}})},18135:(e,t,n)=>{"use strict";n.d(t,{B:()=>o});var r=n(12667),s=n(43740),i=n(69869),a=n(46092);const o=async function(e,t,n,o=.5,l=Number.NEGATIVE_INFINITY,u=0){const c=(0,s._1)(e,"boxes","nonMaxSuppressionAsync"),h=(0,s._1)(t,"scores","nonMaxSuppressionAsync"),d=(0,i.e)(c,h,n,o,l,u);n=d.maxOutputSize,o=d.iouThreshold,l=d.scoreThreshold,u=d.softNmsSigma;const p=await Promise.all([c.data(),h.data()]),f=p[0],m=p[1],{selectedIndices:g,selectedScores:y}=(0,r.pA)(f,m,n,o,l,u);return c!==e&&c.dispose(),h!==t&&h.dispose(),{selectedIndices:(0,a.R)(g,"int32"),selectedScores:(0,a.R)(y)}}},13305:(e,t,n)=>{"use strict";n.d(t,{I:()=>u});var r=n(23926),s=n(29121),i=n(43740),a=n(20569),o=n(2668),l=n(4968);const u=(0,o.op)({resizeBilinear_:function(e,t,n=!1,o=!1){const u=(0,i._1)(e,"images","resizeBilinear");a.hu(3===u.rank||4===u.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${u.rank}.`)),a.hu(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),a.hu(!1===o||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let c=u,h=!1;3===u.rank&&(h=!0,c=(0,l.X)(u,[1,u.shape[0],u.shape[1],u.shape[2]]));const[]=t,d={images:c},p={alignCorners:n,halfPixelCenters:o,size:t},f=r.BV.runKernel(s._Yw,d,p);return h?(0,l.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},95098:(e,t,n)=>{"use strict";n.d(t,{j:()=>u});var r=n(23926),s=n(29121),i=n(43740),a=n(20569),o=n(2668),l=n(4968);const u=(0,o.op)({resizeNearestNeighbor_:function(e,t,n=!1,o=!1){const u=(0,i._1)(e,"images","resizeNearestNeighbor");a.hu(3===u.rank||4===u.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${u.rank}.`)),a.hu(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),a.hu("float32"===u.dtype||"int32"===u.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),a.hu(!1===o||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let c=u,h=!1;3===u.rank&&(h=!0,c=(0,l.X)(u,[1,u.shape[0],u.shape[1],u.shape[2]]));const[]=t,d={images:c},p={alignCorners:n,halfPixelCenters:o,size:t},f=r.BV.runKernel(s.dpD,d,p);return h?(0,l.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},26466:(e,t,n)=>{"use strict";n.d(t,{f:()=>o});var r=n(23926),s=n(29121),i=n(43740),a=n(20569);const o=(0,n(2668).op)({rotateWithOffset_:function(e,t,n=0,o=.5){const l=(0,i._1)(e,"image","rotateWithOffset","float32");a.hu(4===l.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${l.rank}.`));const u={image:l},c={radians:t,fillValue:n,center:o};return r.BV.runKernel(s.b9H,u,c)}})},92381:(e,t,n)=>{"use strict";n.d(t,{L:()=>S});var r=n(46092),s=n(2668),i=n(62271),a=n(28644),o=n(93865),l=n(50624),u=n(20636),c=n(15475),h=n(56407),d=n(24841),p=n(41274),f=n(70827),m=n(97809),g=n(95912),y=n(14006),x=n(22676),v=n(47245),b=n(10701),w=n(20569),_=n(43740);const S=(0,s.op)({threshold_:function(e,t="binary",n=!1,s=.5){const S=(0,_._1)(e,"image","threshold"),T=S.shape[0]*S.shape[1];let E,M,C,A,I=(0,d.d)((0,r.R)([s]),255);if(w.hu(3===S.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${S.rank}.`)),w.hu(3===S.shape[2]||1===S.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${S.shape[2]}.`)),w.hu("int32"===S.dtype||"float32"===S.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${S.dtype}.`)),w.hu("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===S.shape[2]){[E,M,C]=(0,a.V)(S,[1,1,1],-1);const e=(0,d.d)(E,.2989),t=(0,d.d)(M,.587),n=(0,d.d)(C,.114);A=(0,h.I)((0,h.I)(e,t),n)}else A=e;"otsu"===t&&(I=function(e,t){let n,s,i,a,o,l,m=(0,r.R)([-1]),b=(0,r.R)([0]),w=(0,r.R)([0]);for(let _=0;_<e.size-1;_++){n=(0,x.t)(e,0,_+1),s=(0,x.t)(e,_+1),o=(0,p.h)((0,c.S)(n),t),l=(0,p.h)((0,c.S)(s),t);const S=(0,c.S)((0,d.d)(n,(0,v.w)(0,n.size)));i=(0,p.h)(S,(0,c.S)(n));const T=(0,y.h)(s.shape,n.size),E=(0,h.I)((0,v.w)(0,s.size),T),M=(0,d.d)(s,E);a=(0,p.h)((0,c.S)(M),(0,c.S)(s));const C=(0,f.l)(i,a),A=(0,f.l)(i,a),I=(0,d.d)(o,l);w=(0,d.d)((0,d.d)(I,C),A);const R=(0,u.p)(w,b);b=(0,g.a)(R,w,b),m=(0,g.a)(R,(0,r.R)([_]),m)}return m}((0,o.y)((0,i.p)((0,m.N)(A),"int32"),(0,b.X)([]),256),T));const R=n?(0,l.z)(A,I):(0,u.p)(A,I);return(0,i.p)((0,d.d)(R,255),"int32")}})},81034:(e,t,n)=>{"use strict";n.d(t,{v:()=>o});var r=n(23926),s=n(29121),i=n(43740),a=n(20569);const o=(0,n(2668).op)({transform_:function(e,t,n="nearest",o="constant",l=0,u){const c=(0,i._1)(e,"image","transform","float32"),h=(0,i._1)(t,"transforms","transform","float32");a.hu(4===c.rank,(()=>`Error in transform: image must be rank 4,but got rank ${c.rank}.`)),a.hu(2===h.rank&&(h.shape[0]===c.shape[0]||1===h.shape[0])&&8===h.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),a.hu(null==u||2===u.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${u}.`));const d={image:c,transforms:h},p={interpolation:n,fillMode:o,fillValue:l,outputShape:u};return r.BV.runKernel(s.wx7,d,p)}})},92166:(e,t,n)=>{"use strict";n.d(t,{V:()=>a});var r=n(43740),s=n(20569),i=n(10701);const a=async function(e,t,n=1){const a=(0,r._1)(e,"predictions","inTopK"),o=(0,r._1)(t,"targets","inTopK");(0,s.hu)(a.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${a.rank}`)),(0,s.hu)(a.rank-1===o.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${a.rank} and targets rank ${o.rank}`)),(0,s.k5)(a.shape.slice(0,a.shape.length-1),o.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const l=a.shape[a.shape.length-1];(0,s.hu)(n>0&&n<=l,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${l}), but got ${n}`));const u=await a.data(),c=await o.data(),[h,d]=[u.length/l,l],p=(0,s.WP)("bool",h);for(let e=0;e<h;e++){const t=e*d,r=u.subarray(t,t+d),s=[];for(let e=0;e<r.length;e++)s.push({value:r[e],index:e});s.sort(((e,t)=>t.value-e.value)),p[e]=0;for(let t=0;t<n;t++)if(s[t].index===c[e]){p[e]=1;break}}return e!==a&&a.dispose(),t!==o&&o.dispose(),(0,i.X)(p,o.shape,"bool")}},13963:(e,t,n)=>{"use strict";n.d(t,{x:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({isFinite_:function(e){const t={x:(0,i._1)(e,"x","isFinite")};return r.BV.runKernel(s.avt,t)}})},4365:(e,t,n)=>{"use strict";n.d(t,{U:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({isInf_:function(e){const t={x:(0,i._1)(e,"x","isInf")};return r.BV.runKernel(s.iWB,t)}})},96230:(e,t,n)=>{"use strict";n.d(t,{i:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({isNaN_:function(e){const t={x:(0,i._1)(e,"x","isNaN")};return r.BV.runKernel(s.r7n,t)}})},99133:(e,t,n)=>{"use strict";n.d(t,{h:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({leakyRelu_:function(e,t=.2){const n={x:(0,i._1)(e,"x","leakyRelu")},a={alpha:t};return r.BV.runKernel(s.J$2,n,a)}})},86573:(e,t,n)=>{"use strict";n.d(t,{d:()=>l});var r=n(23926),s=n(29121),i=n(80747),a=n(43740),o=n(72200);const l=(0,n(2668).op)({less_:function(e,t){let n=(0,a._1)(e,"a","less","string_or_numeric"),l=(0,a._1)(t,"b","less","string_or_numeric");[n,l]=(0,i.makeTypesMatch)(n,l),(0,o.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return r.BV.runKernel(s.vtC,u)}})},50624:(e,t,n)=>{"use strict";n.d(t,{z:()=>l});var r=n(23926),s=n(29121),i=n(80747),a=n(43740),o=n(72200);const l=(0,n(2668).op)({lessEqual_:function(e,t){let n=(0,a._1)(e,"a","lessEqual","string_or_numeric"),l=(0,a._1)(t,"b","lessEqual","string_or_numeric");[n,l]=(0,i.makeTypesMatch)(n,l),(0,o.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return r.BV.runKernel(s.CAk,u)}})},601:(e,t,n)=>{"use strict";n.d(t,{P:()=>y});var r=n(43740),s=n(20569),i=n(17630),a=n(50624),o=n(2856),l=n(2668),u=n(47245),c=n(4968),h=n(99494),d=n(82991),p=n(70827),f=n(24136),m=n(95912),g=n(59640);const y=(0,l.op)({bandPart_:function(e,t,n){(0,s.hu)(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),(0,s.hu)(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const l=(0,r._1)(e,"a","bandPart");(0,s.hu)(l.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${l.rank}.`));const y=l.shape,[x,v]=l.shape.slice(-2);if(!(t<=x))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${x}).`);if(!(n<=v))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${v}).`);t<0&&(t=x),n<0&&(n=v);const b=(0,c.X)((0,u.w)(0,x,1,"int32"),[-1,1]),w=(0,u.w)(0,v,1,"int32"),_=(0,p.l)(b,w),S=(0,o.H)((0,a.z)(_,(0,h.i)(+t,"int32")),(0,i.b)(_,(0,h.i)(-n,"int32"))),T=(0,g.l)([x,v],l.dtype);return(0,c.X)((0,d.k)((0,f.H)((0,c.X)(l,[-1,x,v])).map((e=>(0,m.a)(S,e,T)))),y)}})},25453:(e,t,n)=>{"use strict";n.d(t,{G:()=>f});var r=n(23926),s=n(20569),i=n(41274),a=n(24841),o=n(3561),l=n(2668),u=n(28644),c=n(79590),h=n(82991),d=n(70827),p=n(15475);const f=(0,l.op)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,(0,s.hu)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)(0,s.hu)(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=(0,u.V)(e,e.shape[0],0).map((e=>(0,c.L)(e,[0])));(0,s.hu)(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],l=e;for(let t=0;t<e.length;++t)n.push(r.BV.tidy((()=>{let e=l[t];if(t>0)for(let r=0;r<t;++r){const t=(0,a.d)((0,p.S)((0,a.d)(n[r],e)),n[r]);e=(0,d.l)(e,t)}return(0,i.h)(e,(0,o.K)(e,"euclidean"))})));return t?(0,h.k)(n,0):n}})},32512:(e,t,n)=>{"use strict";n.d(t,{qr:()=>E});var r=n(23926),s=n(4368),i=n(20569),a=n(8723),o=n(46884),l=n(41274),u=n(66557),c=n(20636),h=n(28687),d=n(24841),p=n(17370),f=n(3561),m=n(2668),g=n(4968),y=n(22676),x=n(82991),v=n(70827),b=n(24376),w=n(89065),_=n(24136),S=n(95912);function T(e,t=!1){return r.BV.tidy((()=>{(0,i.hu)(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],m=e.shape[1];let g=(0,u.i)(n),x=(0,a.d)(e);const _=(0,b.o)([[1]],[1,1]);let T=(0,a.d)(_);const E=n>=m?m:n;for(let e=0;e<E;++e){const t=x,i=T,u=g;[T,x,g]=r.BV.tidy((()=>{const t=(0,y.t)(x,[e,e],[n-e,1]),r=(0,f.K)(t),s=(0,y.t)(x,[e,e],[1,1]),i=(0,S.a)((0,c.p)(s,0),(0,b.o)([[-1]]),(0,b.o)([[1]])),u=(0,v.l)(s,(0,d.d)(i,r)),E=(0,l.h)(t,u);T=1===E.shape[0]?(0,a.d)(_):(0,o.z)([_,(0,y.t)(E,[1,0],[E.shape[0]-1,E.shape[1]])],0);const M=(0,p.W)((0,l.h)((0,h.O)(i,u),r)),C=(0,y.t)(x,[e,0],[n-e,m]),A=(0,d.d)(M,T),I=(0,w.p)(T);if(0===e)x=(0,v.l)(C,(0,h.O)(A,(0,h.O)(I,C)));else{const t=(0,v.l)(C,(0,h.O)(A,(0,h.O)(I,C)));x=(0,o.z)([(0,y.t)(x,[0,0],[e,m]),t],0)}const R=(0,w.p)(A),k=(0,y.t)(g,[0,e],[n,g.shape[1]-e]);if(0===e)g=(0,v.l)(k,(0,h.O)((0,h.O)(k,T),R));else{const t=(0,v.l)(k,(0,h.O)((0,h.O)(k,T),R));g=(0,o.z)([(0,y.t)(g,[0,0],[n,e]),t],1)}return[T,x,g]})),(0,s.B9)([t,i,u])}return!t&&n>m&&(g=(0,y.t)(g,[0,0],[n,m]),x=(0,y.t)(x,[0,0],[m,m])),[g,x]}))}const E=(0,m.op)({qr_:function(e,t=!1){if((0,i.hu)(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return T(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=(0,_.H)((0,g.X)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],i=[];return r.forEach((e=>{const[n,r]=T(e,t);s.push(n),i.push(r)})),[(0,g.X)((0,x.k)(s,0),e.shape),(0,g.X)((0,x.k)(i,0),e.shape)]}}})},14135:(e,t,n)=>{"use strict";n.d(t,{S:()=>i});var r=n(23926),s=n(29121);function i(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const i={start:e,stop:t,num:n};return r.BV.runKernel(s.e7N,{},i)}},79648:(e,t,n)=>{"use strict";n.d(t,{G:()=>u});var r=n(23926),s=n(29121),i=n(43740),a=n(20569),o=n(2668),l=n(4968);const u=(0,o.op)({localResponseNormalization_:function(e,t=5,n=1,o=1,u=.5){const c=(0,i._1)(e,"x","localResponseNormalization");a.hu(4===c.rank||3===c.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${c.rank}.`)),a.hu(a.GN(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let h=c,d=!1;3===c.rank&&(d=!0,h=(0,l.X)(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const p={x:h},f={depthRadius:t,bias:n,alpha:o,beta:u},m=r.BV.runKernel(s.eZ0,p,f);return d?(0,l.X)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},82597:(e,t,n)=>{"use strict";n.d(t,{c:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({log_:function(e){const t={x:(0,i._1)(e,"x","log","float32")};return r.BV.runKernel(s.ZbH,t)}})},17474:(e,t,n)=>{"use strict";n.d(t,{K:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({log1p_:function(e){const t={x:(0,i._1)(e,"x","log1p")};return r.BV.runKernel(s.kU,t)}})},13888:(e,t,n)=>{"use strict";n.d(t,{e:()=>c});var r=n(30633),s=n(43740),i=n(24841),a=n(17370),o=n(2668),l=n(30625),u=n(3694);const c=(0,o.op)({logSigmoid_:function(e){const t=(0,s._1)(e,"x","logSigmoid");return(0,r.cb)((e=>({value:(0,a.W)((0,u.W)((0,a.W)(e))),gradFunc:t=>(0,i.d)(t,(0,l.X)((0,a.W)(e)))})))(t)}})},31510:(e,t,n)=>{"use strict";n.d(t,{C:()=>p});var r=n(30633),s=n(43740),i=n(62271),a=n(44842),o=n(82597),l=n(83307),u=n(24841),c=n(2668),h=n(70827),d=n(15475);const p=(0,c.op)({logSoftmax_:function(e,t=-1){const n=(0,s._1)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return(0,r.cb)(((e,n)=>{const r=(0,l.F)(e,t,!0),s=(0,h.l)(e,r),c=(0,h.l)((0,i.p)(s,"float32"),(0,o.c)((0,d.S)((0,a.Q)(s),t,!0)));return n([c]),{value:c,gradFunc:(e,n)=>{const[r]=n,s=(0,a.Q)(r);return(0,h.l)(e,(0,u.d)((0,d.S)(e,t,!0),s))}}}))(n)}})},11391:(e,t,n)=>{"use strict";n.d(t,{l:()=>f});var r=n(43740),s=n(20569),i=n(56407),a=n(83591),o=n(44842),l=n(82597),u=n(83307),c=n(2668),h=n(4968),d=n(70827),p=n(15475);const f=(0,c.op)({logSumExp_:function(e,t=null,n=!1){const c=(0,r._1)(e,"x","logSumExp"),f=(0,s.EC)(t,c.shape),m=(0,u.F)(c,f,!0),g=(0,d.l)(c,m),y=(0,o.Q)(g),x=(0,p.S)(y,f),v=(0,l.c)(x),b=(0,i.I)((0,h.X)(m,v.shape),v);if(n){const e=(0,a.rv)(b.shape,f);return(0,h.X)(b,e)}return b}})},2856:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var r=n(23926),s=n(29121),i=n(43740),a=n(72200);const o=(0,n(2668).op)({logicalAnd_:function(e,t){const n=(0,i._1)(e,"a","logicalAnd","bool"),o=(0,i._1)(t,"b","logicalAnd","bool");(0,a.assertAndGetBroadcastShape)(n.shape,o.shape);const l={a:n,b:o};return r.BV.runKernel(s.PYm,l)}})},38651:(e,t,n)=>{"use strict";n.d(t,{h:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({logicalNot_:function(e){const t={x:(0,i._1)(e,"x","logicalNot","bool")};return r.BV.runKernel(s.VfG,t)}})},15750:(e,t,n)=>{"use strict";n.d(t,{K:()=>o});var r=n(23926),s=n(29121),i=n(43740),a=n(72200);const o=(0,n(2668).op)({logicalOr_:function(e,t){const n=(0,i._1)(e,"a","logicalOr","bool"),o=(0,i._1)(t,"b","logicalOr","bool");(0,a.assertAndGetBroadcastShape)(n.shape,o.shape);const l={a:n,b:o};return r.BV.runKernel(s.MZg,l)}})},10596:(e,t,n)=>{"use strict";n.d(t,{e:()=>l});var r=n(43740),s=n(72200),i=n(2856),a=n(38651),o=n(15750);const l=(0,n(2668).op)({logicalXor_:function(e,t){const n=(0,r._1)(e,"a","logicalXor","bool"),l=(0,r._1)(t,"b","logicalXor","bool");return(0,s.assertAndGetBroadcastShape)(n.shape,l.shape),(0,i.H)((0,o.K)(e,t),(0,a.h)((0,i.H)(e,t)))}})},49876:(e,t,n)=>{"use strict";var r;n.d(t,{I:()=>r}),function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(r||(r={}))},41326:(e,t,n)=>{"use strict";n.d(t,{O:()=>c});var r=n(43740),s=n(20569),i=n(96235),a=n(49876),o=n(2668),l=n(70827),u=n(36142);const c=(0,o.op)({absoluteDifference_:function(e,t,n,o=a.I.SUM_BY_NONZERO_WEIGHTS){const c=(0,r._1)(e,"labels","absoluteDifference"),h=(0,r._1)(t,"predictions","absoluteDifference");let d=null;null!=n&&(d=(0,r._1)(n,"weights","absoluteDifference")),(0,s.k5)(c.shape,h.shape,"Error in absoluteDifference: ");const p=(0,i.W)((0,l.l)(c,h));return(0,u.m)(p,d,o)}})},36142:(e,t,n)=>{"use strict";n.d(t,{m:()=>f});var r=n(43740),s=n(62271),i=n(41274),a=n(49876),o=n(75130),l=n(24841),u=n(16500),c=n(44917),h=n(2668),d=n(99494),p=n(15475);const f=(0,h.op)({computeWeightedLoss_:function(e,t,n=a.I.SUM_BY_NONZERO_WEIGHTS){const h=(0,r._1)(e,"losses","computeWeightedLoss");let f=null;null!=t&&(f=(0,r._1)(t,"weights","computeWeightedLoss"));const m=null==f?h:(0,l.d)(h,f);if(n===a.I.NONE)return m;if(n===a.I.SUM)return(0,p.S)(m);if(n===a.I.MEAN){if(null==f)return(0,o.J)(m);{const e=h.size/f.size,t=(0,i.h)((0,p.S)(m),(0,p.S)(f));return e>1?(0,i.h)(t,(0,d.i)(e)):t}}if(n===a.I.SUM_BY_NONZERO_WEIGHTS){if(null==f)return(0,i.h)((0,p.S)(m),(0,d.i)(h.size));{const e=(0,l.d)(f,(0,c.i)(h.shape)),t=(0,s.p)((0,p.S)((0,u.Q)(e,(0,d.i)(0))),"float32");return(0,i.h)((0,p.S)(m),t)}}throw Error(`Unknown reduction: ${n}`)}})},77789:(e,t,n)=>{"use strict";n.d(t,{Z:()=>d});var r=n(43740),s=n(20569),i=n(49876),a=n(24841),o=n(2668),l=n(99494),u=n(70827),c=n(15475),h=n(36142);const d=(0,o.op)({cosineDistance_:function(e,t,n,o,d=i.I.SUM_BY_NONZERO_WEIGHTS){const p=(0,r._1)(e,"labels","cosineDistance"),f=(0,r._1)(t,"predictions","cosineDistance");let m=null;null!=o&&(m=(0,r._1)(o,"weights","cosineDistance")),(0,s.k5)(p.shape,f.shape,"Error in cosineDistance: ");const g=(0,l.i)(1),y=(0,u.l)(g,(0,c.S)((0,a.d)(p,f),n,!0));return(0,h.m)(y,m,d)}})},29599:(e,t,n)=>{"use strict";n.d(t,{O:()=>d});var r=n(43740),s=n(20569),i=n(49876),a=n(24841),o=n(2668),l=n(7409),u=n(99494),c=n(70827),h=n(36142);const d=(0,o.op)({hingeLoss_:function(e,t,n,o=i.I.SUM_BY_NONZERO_WEIGHTS){let d=(0,r._1)(e,"labels","hingeLoss");const p=(0,r._1)(t,"predictions","hingeLoss");let f=null;null!=n&&(f=(0,r._1)(n,"weights","hingeLoss")),(0,s.k5)(d.shape,p.shape,"Error in hingeLoss: ");const m=(0,u.i)(1);d=(0,c.l)((0,a.d)((0,u.i)(2),d),m);const g=(0,l.U)((0,c.l)(m,(0,a.d)(d,p)));return(0,h.m)(g,f,o)}})},95317:(e,t,n)=>{"use strict";n.d(t,{H:()=>m});var r=n(43740),s=n(20569),i=n(96235),a=n(56407),o=n(49876),l=n(24513),u=n(24841),c=n(2668),h=n(99494),d=n(50248),p=n(70827),f=n(36142);const m=(0,c.op)({huberLoss_:function(e,t,n,c=1,m=o.I.SUM_BY_NONZERO_WEIGHTS){const g=(0,r._1)(e,"labels","huberLoss"),y=(0,r._1)(t,"predictions","huberLoss");let x=null;null!=n&&(x=(0,r._1)(n,"weights","huberLoss")),(0,s.k5)(g.shape,y.shape,"Error in huberLoss: ");const v=(0,h.i)(c),b=(0,i.W)((0,p.l)(y,g)),w=(0,l.L)(b,v),_=(0,p.l)(b,w),S=(0,a.I)((0,u.d)((0,h.i)(.5),(0,d.h)(w)),(0,u.d)(v,_));return(0,f.m)(S,x,m)}})},4824:(e,t,n)=>{"use strict";n.d(t,{g:()=>f});var r=n(43740),s=n(20569),i=n(56407),a=n(82597),o=n(49876),l=n(24841),u=n(17370),c=n(2668),h=n(99494),d=n(70827),p=n(36142);const f=(0,c.op)({logLoss_:function(e,t,n,c=1e-7,f=o.I.SUM_BY_NONZERO_WEIGHTS){const m=(0,r._1)(e,"labels","logLoss"),g=(0,r._1)(t,"predictions","logLoss");let y=null;null!=n&&(y=(0,r._1)(n,"weights","logLoss")),(0,s.k5)(m.shape,g.shape,"Error in logLoss: ");const x=(0,h.i)(1),v=(0,h.i)(c),b=(0,u.W)((0,l.d)(m,(0,a.c)((0,i.I)(g,v)))),w=(0,l.d)((0,d.l)(x,m),(0,a.c)((0,i.I)((0,d.l)(x,g),v))),_=(0,d.l)(b,w);return(0,p.m)(_,y,f)}})},42695:(e,t,n)=>{"use strict";n.d(t,{F:()=>u});var r=n(43740),s=n(20569),i=n(49876),a=n(2668),o=n(15265),l=n(36142);const u=(0,a.op)({meanSquaredError_:function(e,t,n,a=i.I.SUM_BY_NONZERO_WEIGHTS){const u=(0,r._1)(e,"labels","meanSquaredError"),c=(0,r._1)(t,"predictions","meanSquaredError");let h=null;null!=n&&(h=(0,r._1)(n,"weights","meanSquaredError")),(0,s.k5)(u.shape,c.shape,"Error in meanSquaredError: ");const d=(0,o.$)(u,c);return(0,l.m)(d,h,a)}})},75706:(e,t,n)=>{"use strict";n.d(t,{f:()=>y});var r=n(43740),s=n(20569),i=n(96235),a=n(56407),o=n(44842),l=n(17474),u=n(49876),c=n(24841),h=n(17370),d=n(2668),p=n(7409),f=n(99494),m=n(70827),g=n(36142);const y=(0,d.op)({sigmoidCrossEntropy_:function(e,t,n,d=0,y=u.I.SUM_BY_NONZERO_WEIGHTS){let x=(0,r._1)(e,"multiClassLabels","sigmoidCrossEntropy");const v=(0,r._1)(t,"logits","sigmoidCrossEntropy");let b=null;if(null!=n&&(b=(0,r._1)(n,"weights","sigmoidCrossEntropy")),(0,s.k5)(x.shape,v.shape,"Error in sigmoidCrossEntropy: "),d>0){const e=(0,f.i)(d),t=(0,f.i)(1),n=(0,f.i)(.5);x=(0,a.I)((0,c.d)(x,(0,m.l)(t,e)),(0,c.d)(n,e))}const w=function(e,t){const n=(0,r._1)(e,"labels","sigmoidCrossEntropyWithLogits"),u=(0,r._1)(t,"logits","sigmoidCrossEntropyWithLogits");(0,s.k5)(n.shape,u.shape,"Error in sigmoidCrossEntropyWithLogits: ");const d=(0,p.U)(u),f=(0,c.d)(u,n),g=(0,l.K)((0,o.Q)((0,h.W)((0,i.W)(u))));return(0,a.I)((0,m.l)(d,f),g)}(x,v);return(0,g.m)(w,b,y)}})},67740:(e,t,n)=>{"use strict";n.d(t,{E:()=>w});var r=n(30633),s=n(43740),i=n(20569),a=n(56407),o=n(83591),l=n(62271),u=n(41274),c=n(44842),h=n(11391),d=n(49876),p=n(24841),f=n(17370),m=n(2668),g=n(4968),y=n(99494),x=n(70827),v=n(15475),b=n(36142);const w=(0,m.op)({softmaxCrossEntropy_:function(e,t,n,m=0,w=d.I.SUM_BY_NONZERO_WEIGHTS){let _=(0,s._1)(e,"onehotLabels","softmaxCrossEntropy");const S=(0,s._1)(t,"logits","softmaxCrossEntropy");let T=null;if(null!=n&&(T=(0,s._1)(n,"weights","softmaxCrossEntropy")),(0,i.k5)(_.shape,S.shape,"Error in softmaxCrossEntropy: "),m>0){const e=(0,y.i)(m),t=(0,y.i)(1),n=(0,y.i)(_.shape[1]);_=(0,a.I)((0,p.d)(_,(0,x.l)(t,e)),(0,u.h)(e,n))}const E=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const s=(0,r.cb)(((e,t,r)=>{const s=(0,h.l)(t,[n],!0),i=(0,x.l)((0,l.p)(t,"float32"),s);r([e,i]);const a=(0,f.W)((0,p.d)(i,e));return{value:(0,v.S)(a,[n]),gradFunc:(e,t)=>{const[r,s]=t,i=(0,o.rv)(e.shape,[n]);return[(0,p.d)((0,g.X)(e,i),(0,x.l)((0,l.p)(r,"float32"),(0,c.Q)(s))),(0,p.d)((0,g.X)(e,i),(0,x.l)((0,c.Q)(s),(0,l.p)(r,"float32")))]}}}));return s(e,t)}(_,S);return(0,b.m)(E,T,w)}})},94608:(e,t,n)=>{"use strict";n.d(t,{e:()=>s});var r=n(43336);function s(e,t){return(0,r.z)(e,t,"left")}},28687:(e,t,n)=>{"use strict";n.d(t,{O:()=>o});var r=n(23926),s=n(29121),i=n(80747),a=n(43740);const o=(0,n(2668).op)({matMul_:function(e,t,n=!1,o=!1){let l=(0,a._1)(e,"a","matMul"),u=(0,a._1)(t,"b","matMul");[l,u]=(0,i.makeTypesMatch)(l,u);const c={a:l,b:u},h={transposeA:n,transposeB:o};return r.BV.runKernel(s.XLW,c,h)}})},83307:(e,t,n)=>{"use strict";n.d(t,{F:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({max_:function(e,t=null,n=!1){const a={x:(0,i._1)(e,"x","max")},o={reductionIndices:t,keepDims:n};return r.BV.runKernel(s.YoZ,a,o)}})},21174:(e,t,n)=>{"use strict";n.d(t,{_:()=>c});var r=n(23926),s=n(29121),i=n(43740),a=n(20569),o=n(2582),l=n(2668),u=n(4968);const c=(0,l.op)({maxPool_:function(e,t,n,l,c){const h=(0,i._1)(e,"x","maxPool");let d=h,p=!1;3===h.rank&&(p=!0,d=(0,u.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),a.hu(4===d.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${d.rank}.`)),a.hu(o.jT(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),o.m("maxPool",l,c);const f={x:d},m={filterSize:t,strides:n,pad:l,dimRoundingMode:c},g=r.BV.runKernel(s.mTV,f,m);return p?(0,u.X)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},25020:(e,t,n)=>{"use strict";n.d(t,{Y:()=>c});var r=n(23926),s=n(29121),i=n(43740),a=n(20569),o=n(2582),l=n(2668),u=n(4968);const c=(0,l.op)({maxPool3d_:function(e,t=[1,1,1],n,l,c,h="NDHWC"){const d=(0,i._1)(e,"x","maxPool3d");let p=d,f=!1;4===d.rank&&(f=!0,p=(0,u.X)(d,[1,d.shape[0],d.shape[1],d.shape[2],d.shape[3]])),a.hu(5===p.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${p.rank}.`)),a.hu("NDHWC"===h,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${h}`)),(0,o.m)("maxPool3d",l,c);const m={x:p},g={filterSize:t,strides:n,pad:l,dimRoundingMode:c,dataFormat:h},y=r.BV.runKernel(s.OAf,m,g);return f?(0,u.X)(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}})},96877:(e,t,n)=>{"use strict";n.d(t,{I:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({maxPoolWithArgmax_:function(e,t,n,a,o=!1){const l={x:(0,i._1)(e,"x","maxPoolWithArgmax")},u={filterSize:t,strides:n,pad:a,includeBatchInIndex:o},c=r.BV.runKernel(s.vFR,l,u);return{result:c[0],indexes:c[1]}}})},80632:(e,t,n)=>{"use strict";n.d(t,{g:()=>u});var r=n(23926),s=n(29121),i=n(80747),a=n(43740),o=n(72200),l=n(62271);const u=(0,n(2668).op)({maximum_:function(e,t){let n=(0,a._1)(e,"a","maximum"),u=(0,a._1)(t,"b","maximum");[n,u]=(0,i.makeTypesMatch)(n,u),"bool"===n.dtype&&(n=(0,l.p)(n,"int32"),u=(0,l.p)(u,"int32")),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape);const c={a:n,b:u};return r.BV.runKernel(s.BMI,c)}})},75130:(e,t,n)=>{"use strict";n.d(t,{J:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({mean_:function(e,t=null,n=!1){const a={x:(0,i._1)(e,"x","mean")},o={axis:t,keepDims:n};return r.BV.runKernel(s.q2K,a,o)}})},82541:(e,t,n)=>{"use strict";n.d(t,{r:()=>u});var r=n(28687),s=n(44917),i=n(4968),a=n(73327),o=n(43740),l=n(20569);function u(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let u=(0,o._1)(e,"x","meshgrid",e instanceof a.es?e.dtype:"float32");if(void 0===t)return[u];let c=(0,o._1)(t,"y","meshgrid",t instanceof a.es?t.dtype:"float32");const h=(0,l.NA)(u.shape),d=(0,l.NA)(c.shape);return"xy"===n?(u=(0,i.X)(u,[1,-1]),c=(0,i.X)(c,[-1,1]),[(0,r.O)((0,s.i)([d,1],u.dtype),u),(0,r.O)(c,(0,s.i)([1,h],c.dtype))]):(u=(0,i.X)(u,[-1,1]),c=(0,i.X)(c,[1,-1]),[(0,r.O)(u,(0,s.i)([1,d],u.dtype)),(0,r.O)((0,s.i)([h,1],c.dtype),c)])}},25735:(e,t,n)=>{"use strict";n.d(t,{V:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({min_:function(e,t=null,n=!1){const a={x:(0,i._1)(e,"x","min")},o={axis:t,keepDims:n};return r.BV.runKernel(s.c17,a,o)}})},24513:(e,t,n)=>{"use strict";n.d(t,{L:()=>u});var r=n(23926),s=n(29121),i=n(80747),a=n(43740),o=n(72200),l=n(62271);const u=(0,n(2668).op)({minimum_:function(e,t){let n=(0,a._1)(e,"a","minimum"),u=(0,a._1)(t,"b","minimum");[n,u]=(0,i.makeTypesMatch)(n,u),"bool"===n.dtype&&(n=(0,l.p)(n,"int32"),u=(0,l.p)(u,"int32")),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape);const c={a:n,b:u};return r.BV.runKernel(s.q8u,c)}})},71483:(e,t,n)=>{"use strict";n.d(t,{V:()=>o});var r=n(23926),s=n(29121),i=n(43740),a=n(20569);const o=(0,n(2668).op)({mirrorPad_:function(e,t,n){a.hu("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const o=(0,i._1)(e,"x","mirrorPad");if(0===o.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");a.hu(t.length===o.rank,(()=>`Padding doesn't match input. Must be ${o.rank}. Got ${t.length}.`));const l="reflect"===n?1:0;for(let e=0;e<o.rank;e++)a.hu(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),a.hu(t[e][0]>=0&&t[e][0]<=o.shape[e]-l&&t[e][1]>=0&&t[e][1]<=o.shape[e]-l,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${o.shape[e]-l} or less than 0 for input of shape ${o.shape}`));const u={paddings:t,mode:n},c={x:o};return r.BV.runKernel(s.jQs,c,u)}})},85228:(e,t,n)=>{"use strict";n.d(t,{w:()=>o});var r=n(23926),s=n(29121),i=n(80747),a=n(43740);const o=(0,n(2668).op)({mod_:function(e,t){let n=(0,a._1)(e,"a","mod"),o=(0,a._1)(t,"b","mod");[n,o]=(0,i.makeTypesMatch)(n,o);const l={a:n,b:o};return r.BV.runKernel(s.Vbg,l)}})},73276:(e,t,n)=>{"use strict";n.d(t,{G:()=>d});var r=n(43740),s=n(20569),i=n(83591),a=n(62271),o=n(75130),l=n(2668),u=n(4968),c=n(50248),h=n(70827);const d=(0,l.op)({moments_:function(e,t=null,n=!1){e=(0,r._1)(e,"x","moments");const l=(0,s.EC)(t,e.shape),d=(0,o.J)(e,l,n);let p=d.shape;n||(p=(0,i.rv)(d.shape,l));const f=(0,c.h)((0,h.l)((0,a.p)(e,"float32"),(0,u.X)(d,p)));return{mean:d,variance:(0,o.J)(f,l,n)}}})},96476:(e,t,n)=>{"use strict";n.d(t,{p:()=>p});var r=n(80747),s=n(43740),i=n(20569),a=n(56407),o=n(41274),l=n(24841),u=n(2668),c=n(33453),h=n(99494),d=n(70827);const p=(0,u.op)({movingAverage_:function(e,t,n,u,p=!0){const f=(0,s._1)(e,"v","movingAverage"),m=(0,s._1)(t,"x","movingAverage"),g=(0,s._1)(n,"decay","movingAverage");(0,r.assertTypesMatch)(f,m),i.hu(i.cO(f.shape,m.shape),(()=>"Shape mismatch in v and x"));const y=(0,h.i)(1),x=(0,d.l)(y,g);let v=(0,l.d)((0,d.l)(m,f),x);if(p){i.hu(null!=u,(()=>"When using zeroDebias: true, step is required."));const e=(0,s._1)(u,"step","movingAverage");v=(0,o.h)(v,(0,d.l)(y,(0,c.s)(g,e)))}return(0,a.I)(f,v)}})},24841:(e,t,n)=>{"use strict";n.d(t,{d:()=>o});var r=n(23926),s=n(29121),i=n(80747),a=n(43740);const o=(0,n(2668).op)({mul_:function(e,t){let n=(0,a._1)(e,"a","mul"),o=(0,a._1)(t,"b","mul");[n,o]=(0,i.makeTypesMatch)(n,o);const l={a:n,b:o};return r.BV.runKernel(s.wYn,l)}})},78656:(e,t,n)=>{"use strict";n.d(t,{r:()=>s});var r=n(43740);const s=(0,n(2668).op)({multiRNNCell_:function(e,t,n,s){const i=(0,r._1)(t,"data","multiRNNCell"),a=(0,r.sI)(n,"c","multiRNNCell"),o=(0,r.sI)(s,"h","multiRNNCell");let l=i;const u=[];for(let t=0;t<e.length;t++){const n=e[t](l,a[t],o[t]);u.push(n[0]),u.push(n[1]),l=n[1]}const c=[],h=[];for(let e=0;e<u.length;e+=2)c.push(u[e]),h.push(u[e+1]);return[c,h]}})},90686:(e,t,n)=>{"use strict";n.d(t,{S:()=>l});var r=n(23926),s=n(29121),i=n(43740),a=n(2668),o=n(4968);const l=(0,a.op)({multinomial_:function(e,t,n,a=!1){const l=(0,i._1)(e,"logits","multinomial"),u=l.size,c=l.rank;if(u<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${u}.`);if(c>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${c}`);n=n||Math.random();const h={logits:1===c?(0,o.X)(l,[1,-1]):l},d={numSamples:t,seed:n,normalized:a},p=r.BV.runKernel(s.NZg,h,d);return 1===c?(0,o.X)(p,[p.size]):p}})},17370:(e,t,n)=>{"use strict";n.d(t,{W:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({neg_:function(e){const t={x:(0,i._1)(e,"x","neg")};return r.BV.runKernel(s.kuV,t)}})},69869:(e,t,n)=>{"use strict";n.d(t,{e:()=>s});var r=n(20569);function s(e,t,n,s,i,a){null==s&&(s=.5),null==i&&(i=Number.NEGATIVE_INFINITY),null==a&&(a=0);const o=e.shape[0];return n=Math.min(n,o),r.hu(0<=s&&s<=1,(()=>`iouThreshold must be in [0, 1], but was '${s}'`)),r.hu(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),r.hu(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),r.hu(1===t.rank,(()=>"scores must be a 1D tensor")),r.hu(t.shape[0]===o,(()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`)),r.hu(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:s,scoreThreshold:i,softNmsSigma:a}}},3561:(e,t,n)=>{"use strict";n.d(t,{K:()=>y});var r=n(43740),s=n(20569),i=n(96235),a=n(83591),o=n(83307),l=n(25735),u=n(2668),c=n(33453),h=n(4968),d=n(99494),p=n(13261),f=n(50248),m=n(15475);function g(e,t,n=null){if(0===e.rank)return(0,i.W)(e);if(1!==e.rank&&null===n)return g((0,h.X)(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return(0,m.S)((0,i.W)(e),n);if(t===1/0)return(0,o.F)((0,i.W)(e),n);if(t===-1/0)return(0,l.V)((0,i.W)(e),n);if("euclidean"===t||2===t)return(0,p._)((0,m.S)((0,c.s)((0,i.W)(e),(0,d.i)(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return(0,o.F)((0,m.S)((0,i.W)(e),n[0]),n[1]-1);if(t===1/0)return(0,o.F)((0,m.S)((0,i.W)(e),n[1]),n[0]);if(t===-1/0)return(0,l.V)((0,m.S)((0,i.W)(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return(0,p._)((0,m.S)((0,f.h)(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const y=(0,u.op)({norm_:function(e,t="euclidean",n=null,i=!1){const o=g(e=(0,r._1)(e,"x","norm"),t,n);let l=o.shape;if(i){const t=(0,s.EC)(n,e.shape);l=a.rv(o.shape,t)}return(0,h.X)(o,l)}})},16500:(e,t,n)=>{"use strict";n.d(t,{Q:()=>l});var r=n(23926),s=n(29121),i=n(80747),a=n(43740),o=n(72200);const l=(0,n(2668).op)({notEqual_:function(e,t){let n=(0,a._1)(e,"a","notEqual","string_or_numeric"),l=(0,a._1)(t,"b","notEqual","string_or_numeric");[n,l]=(0,i.makeTypesMatch)(n,l),(0,o.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return r.BV.runKernel(s.yQU,u)}})},76708:(e,t,n)=>{"use strict";n.d(t,{l:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({oneHot_:function(e,t,n=1,a=0,o="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const l={indices:(0,i._1)(e,"indices","oneHot","int32")},u={dtype:o,depth:t,onValue:n,offValue:a};return r.BV.runKernel(s.we_,l,u)}})},44917:(e,t,n)=>{"use strict";n.d(t,{i:()=>o});var r=n(23926),s=n(20569),i=n(61661),a=n(59640);function o(e,t="float32"){if("complex64"===t){const t=o(e,"float32"),n=(0,a.l)(e,"float32");return(0,i.P)(t,n)}const n=(0,s.p8)((0,s.NA)(e),t);return r.BV.makeTensor(n,e,t)}},7846:(e,t,n)=>{"use strict";n.d(t,{J:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({onesLike_:function(e){const t={x:(0,i._1)(e,"x","onesLike")};return r.BV.runKernel(s.qWM,t)}})},2668:(e,t,n)=>{"use strict";n.d(t,{op:()=>a,z:()=>i});var r=n(23926),s=n(20569);const i="__op";function a(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const a=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=i;const o=(...e)=>{r.BV.startScope(n);try{const t=a(...e);return(0,s.tI)(t)&&console.error("Cannot return a Promise inside of tidy."),r.BV.endScope(t),t}catch(e){throw r.BV.endScope(null),e}};return Object.defineProperty(o,"name",{value:n,configurable:!0}),o}},77912:(e,t,n)=>{"use strict";n.d(t,{$6P:()=>l.$,$Gn:()=>j.$,$QV:()=>G.$,$gW:()=>ft.$,$i:()=>rn.$,$r2:()=>kr,AEp:()=>dn.A,AKD:()=>te.A,AL3:()=>ht.A,B10:()=>Y.B,BHj:()=>Rr,Bfx:()=>xn.B,C80:()=>g.C,CmS:()=>Ie.C,CnO:()=>Ht.C,DgJ:()=>se.D,Dxk:()=>_.D,E4h:()=>b.E,Fp7:()=>Fe.F,G9k:()=>Ee.G,GRh:()=>zn.G,GWj:()=>de.G,GYS:()=>Ct.G,GaM:()=>Mn.G,Gg6:()=>bn.G,Gi7:()=>qe.G,HHK:()=>En.H,HvI:()=>ke.H,IHx:()=>a.I,Ip$:()=>Ue.I,Iqj:()=>fe.I,Izb:()=>P.I,J69:()=>Ve.J,JY5:()=>S.J,JpU:()=>nt.J,K5V:()=>Le.K,KOy:()=>Dn.K,Ka3:()=>J.K,Khb:()=>s.K,Krr:()=>Ce.K,L9e:()=>sn.L,LGj:()=>bt.L,LTh:()=>He.L,M25:()=>St.M,MB5:()=>Nr,MNy:()=>F.M,N2O:()=>rt.N,N89:()=>mt.N,NMM:()=>Nt.N,NTj:()=>ee.N,NXj:()=>ln.N,Nbs:()=>on.N,NqF:()=>c.N,O$l:()=>Ut.O,ODp:()=>Ft.O,OI3:()=>Pe.O,ORZ:()=>hn.O,P84:()=>kn.P,PAt:()=>B.P,PYB:()=>L.P,QBD:()=>o.Q,QEs:()=>Qt.Q,Qqt:()=>oe.Q,Quu:()=>Qe.Q,RRF:()=>fn.R,R_K:()=>zt.R,S0v:()=>dt.S,SDf:()=>At.S,SJ_:()=>Je.S,SX3:()=>Te.S,SmN:()=>Wt.S,Smz:()=>cn.S,Sxn:()=>Jt.S,TN_:()=>gt.T,Tek:()=>U.T,Two:()=>Sn.T,U8D:()=>Ot.U,UFq:()=>C.U,UWc:()=>ve.U,UYe:()=>Tt.U,U_I:()=>Pt.U,V3u:()=>Vn.V,VD$:()=>Cn.V,VV$:()=>We.V,VdP:()=>je.V,VfV:()=>p.V,Vl2:()=>en.V,W76:()=>Ze.W,WVs:()=>pt.W,WYO:()=>ne.W,WmZ:()=>Z.W,WnP:()=>r.W,Wvh:()=>qt.W,XAC:()=>Xt.X,XD2:()=>$t.X,XLQ:()=>Mt.X,XeE:()=>pn.X,XsQ:()=>M.X,Xu6:()=>_n.X,Xxe:()=>Bt.X,YQQ:()=>Be.Y,YjB:()=>u.Y,ZRM:()=>d.Z,Z_8:()=>Dr,ZaL:()=>$.Z,__u:()=>i._,_b3:()=>tn._,_sB:()=>$e._,anm:()=>Nn.a,arb:()=>An.a,asL:()=>ye.a,bc:()=>z.b,bp0:()=>Lt.b,brS:()=>ge.b,btT:()=>Et.b,cM7:()=>Me.c,d2q:()=>ae.d,d9m:()=>_e.d,d9v:()=>N.d,dC7:()=>Ke.d,d_R:()=>ut.d,dbB:()=>Bn.d,diP:()=>It.d,dt4:()=>le.d,e_t:()=>Ae.e,eab:()=>Oe.e,egP:()=>De.e,ers:()=>$n.e,f3b:()=>A.f,f9Y:()=>H.f,fBT:()=>Kt.f,fvJ:()=>m.f,gME:()=>O.g,gWQ:()=>ze.g,h62:()=>nn.h,hJK:()=>Ne.h,hg7:()=>wn.h,hi7:()=>we.h,hiC:()=>Q.h,hlL:()=>he.h,i2d:()=>be.i,iD$:()=>Dt.i,iUl:()=>k.i,iUs:()=>tt.i,imm:()=>Wn,itS:()=>In.i,iyy:()=>ce.i,jZU:()=>Gt.j,knu:()=>an.k,koy:()=>at.k,kp_:()=>Yt.k,kwC:()=>_t.k,lGY:()=>lt.l,l_t:()=>Re.l,lfX:()=>et.l,lls:()=>Rn.l,luU:()=>un.l,mCk:()=>W.m,mDi:()=>R.m,mG2:()=>kt.m,mew:()=>zn.m,nGf:()=>xt.n,nTT:()=>K.n,odF:()=>mn.o,op:()=>Gn.op,p0P:()=>jt.p,p3b:()=>T.p,p4s:()=>Ln.p,pNR:()=>it.p,pUJ:()=>Tn.p,p_:()=>On.p,pdZ:()=>V.p,pjt:()=>me.p,pju:()=>I.p,ppE:()=>q.p,pyx:()=>re.p,qNN:()=>ie.q,qPi:()=>pe.q,rVs:()=>Lr,rq4:()=>Ye.r,ruB:()=>vt.r,rvX:()=>Un.r,ry_:()=>Ge.r,sQ3:()=>ct.s,snQ:()=>Pn.s,sx7:()=>Rt.s,t$B:()=>ue.t,t1L:()=>ot.t,tPi:()=>Vt.t,tdS:()=>Ir,tgs:()=>w.t,uN7:()=>Ar,uR5:()=>x.u,vHJ:()=>h.v,vku:()=>st.v,w6H:()=>wt.w,wOQ:()=>gn.w,wQq:()=>Xe.w,wS1:()=>y.w,wx0:()=>Zt.w,wzB:()=>yt.w,xVT:()=>xe.x,xZs:()=>vn.x,yE8:()=>E.y,yXz:()=>yn.y,z4N:()=>f.z,zEQ:()=>v.z,zN1:()=>Se.z,zbp:()=>X.z,zcT:()=>Fn.z,zoF:()=>D.z,zvA:()=>Gn.z});var r=n(96235),s=n(17839),i=n(91470),a=n(56407),o=n(13135),l=n(90781),u=n(92998),c=n(40047),h=n(27394),d=n(72421),p=n(21891),f=n(77037),m=n(29812),g=n(80369),y=n(15176),x=n(61749),v=n(7361),b=n(28441),w=n(7399),_=n(81837),S=n(319),T=n(37969),E=n(93865),M=n(88194),C=n(68247),A=n(72657),I=n(62271),R=n(6825),k=n(42279),N=n(8723),L=n(61661),D=n(46884),O=n(72248),P=n(99373),F=n(8093),$=n(64435),B=n(11355),U=n(64794),z=n(71405),V=n(70473),G=n(11160),W=n(70173),H=n(2699),j=n(9640),X=n(37405),q=n(75746),K=n(89112),Y=n(64718),J=n(31118),Z=n(70557),Q=n(41274),ee=n(49322),te=n(30548),ne=n(94653),re=n(83233),se=n(26477),ie=n(34650),ae=n(31954),oe=n(44842),le=n(81300),ue=n(53426),ce=n(66557),he=n(14006),de=n(26943),pe=n(9165),fe=n(24926),me=n(20636),ge=n(17630),ye=n(64386),xe=n(13963),ve=n(4365),be=n(96230),we=n(99133),_e=n(86573),Se=n(50624),Te=n(14135),Ee=n(79648),Me=n(82597),Ce=n(17474),Ae=n(13888),Ie=n(31510),Re=n(11391),ke=n(2856),Ne=n(38651),Le=n(15750),De=n(10596),Oe=n(94608),Pe=n(28687),Fe=n(83307),$e=n(21174),Be=n(25020),Ue=n(96877),ze=n(80632),Ve=n(75130),Ge=n(82541),We=n(25735),He=n(24513),je=n(71483),Xe=n(85228),qe=n(73276),Ke=n(24841),Ye=n(78656),Je=n(90686),Ze=n(17370),Qe=n(16500),et=n(76708),tt=n(44917),nt=n(7846),rt=n(43916),st=n(39682),it=n(66896),at=n(82795),ot=n(43256),lt=n(38543),ut=n(85860),ct=n(33453),ht=n(98151),dt=n(29798),pt=n(49451),ft=n(92517),mt=n(18478),gt=n(16634),yt=n(90800),xt=n(18558),vt=n(12470),bt=n(75002),wt=n(47245),_t=n(60766),St=n(19036),Tt=n(7409),Et=n(83582),Mt=n(4968),Ct=n(57486),At=n(56893),It=n(36548),Rt=n(67338),kt=n(43267),Nt=n(97809),Lt=n(32634),Dt=n(99494),Ot=n(55503),Pt=n(68678),Ft=n(36567),$t=n(30625),Bt=n(34434),Ut=n(99331),zt=n(83254),Vt=n(22676),Gt=n(43370),Wt=n(51804),Ht=n(15638),jt=n(6322),Xt=n(80682),qt=n(3694),Kt=n(27918),Yt=n(7020),Jt=n(88447),Zt=n(84415),Qt=n(13710),en=n(28644),tn=n(13261),nn=n(50248),rn=n(15265),sn=n(79590),an=n(82991),on=n(71901),ln=n(55158),un=n(70827),cn=n(15475),hn=n(61173),dn=n(21869),pn=n(10701),fn=n(46092),mn=n(24376),gn=n(99906),yn=n(89450),xn=n(34106),vn=n(58782),bn=n(47501),wn=n(43243),_n=n(43596),Sn=n(49608),Tn=n(98749),En=n(24136),Mn=n(64978),Cn=n(40812),An=n(95912),In=n(66380),Rn=n(59640),kn=n(6577),Nn=n(5123),Ln=n(89065),Dn=n(3561),On=n(96476),Pn=n(63100),Fn=n(43336),$n=n(98296),Bn=n(87494),Un=n(36165),zn=n(1347),Vn=n(92166),Gn=n(2668),Wn=n(13882),Hn=n(42975),jn=n(97107),Xn=n(85078),qn=n(52415),Kn=n(61066),Yn=n(90824),Jn=n(16114),Zn=n(26466),Qn=n(99009),er=n(56526),tr=n(91424),nr=n(18135),rr=n(63765),sr=n(88500),ir=n(13305),ar=n(95098),or=n(92381),lr=n(81034),ur=n(601),cr=n(25453),hr=n(32512),dr=n(41326),pr=n(36142),fr=n(77789),mr=n(29599),gr=n(95317),yr=n(4824),xr=n(42695),vr=n(75706),br=n(67740),wr=n(89083),_r=n(97092),Sr=n(78022),Tr=n(70436),Er=n(4716),Mr=n(57207),Cr=n(42722);const Ar={fft:Yt.k,ifft:Jt.S,rfft:Qt.Q,irfft:Zt.w},Ir={hammingWindow:Hn.f,hannWindow:jn.l,frame:Xn.W,stft:qn.Z},Rr={flipLeftRight:Yn.V,grayscaleToRGB:Jn.F,resizeNearestNeighbor:ar.j,resizeBilinear:ir.I,rotateWithOffset:Zn.f,cropAndResize:Kn.B,nonMaxSuppression:Qn.o,nonMaxSuppressionAsync:er.V,nonMaxSuppressionWithScore:tr.t,nonMaxSuppressionWithScoreAsync:nr.B,nonMaxSuppressionPadded:rr.q,nonMaxSuppressionPaddedAsync:sr.N,threshold:or.L,transform:lr.v},kr={bandPart:ur.P,gramSchmidt:cr.G,qr:hr.qr},Nr={absoluteDifference:dr.O,computeWeightedLoss:pr.m,cosineDistance:fr.Z,hingeLoss:mr.O,huberLoss:gr.H,logLoss:yr.g,meanSquaredError:xr.F,sigmoidCrossEntropy:vr.f,softmaxCrossEntropy:br.E},Lr={sparseFillEmptyRows:wr.M,sparseReshape:_r.x,sparseSegmentMean:Sr.S,sparseSegmentSum:Tr.l},Dr={stringNGrams:Er.l,stringSplit:Mr.S,stringToHashBucketFast:Cr.I}},43916:(e,t,n)=>{"use strict";n.d(t,{N:()=>l});var r=n(43740),s=n(20569),i=n(28687),a=n(2668),o=n(4968);const l=(0,a.op)({outerProduct_:function(e,t){const n=(0,r._1)(e,"v1","outerProduct"),a=(0,r._1)(t,"v2","outerProduct");s.hu(1===n.rank&&1===a.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${a.rank}.`));const l=(0,o.X)(n,[-1,1]),u=(0,o.X)(a,[1,-1]);return(0,i.O)(l,u)}})},39682:(e,t,n)=>{"use strict";n.d(t,{v:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({pad_:function(e,t,n=0){const a=(0,i._1)(e,"x","pad");if(0===a.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const o={paddings:t,constantValue:n},l={x:a};return r.BV.runKernel(s.lyA,l,o)}})},66896:(e,t,n)=>{"use strict";n.d(t,{p:()=>a});var r=n(20569),s=n(2668),i=n(39682);const a=(0,s.op)({pad1d_:function(e,t,n=0){return(0,r.hu)(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),(0,i.v)(e,[t],n)}})},82795:(e,t,n)=>{"use strict";n.d(t,{k:()=>a});var r=n(20569),s=n(2668),i=n(39682);const a=(0,s.op)({pad2d_:function(e,t,n=0){return(0,r.hu)(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,i.v)(e,t,n)}})},43256:(e,t,n)=>{"use strict";n.d(t,{t:()=>a});var r=n(20569),s=n(2668),i=n(39682);const a=(0,s.op)({pad3d_:function(e,t,n=0){return(0,r.hu)(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,i.v)(e,t,n)}})},38543:(e,t,n)=>{"use strict";n.d(t,{l:()=>a});var r=n(20569),s=n(2668),i=n(39682);const a=(0,s.op)({pad4d_:function(e,t,n=0){return(0,r.hu)(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,i.v)(e,t,n)}})},85860:(e,t,n)=>{"use strict";n.d(t,{d:()=>d});var r=n(43740),s=n(20569),i=n(15176),a=n(28441),o=n(2582),l=n(21174),u=n(2668),c=n(4968),h=n(27918);const d=(0,u.op)({pool_:function(e,t,n,u,d,p,f){null==d&&(d=[1,1]),null==p&&(p=1),0===u&&(u="valid");const m=(0,r._1)(e,"x","maxPool");let g=m,y=!1;3===m.rank&&(y=!0,g=(0,c.X)(m,[1,m.shape[0],m.shape[1],m.shape[2]])),s.hu(o.jT(p,d),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${p} and dilations '${d}'`));const x=o.Xw(g.shape,t,p,d,u),v=[x.dilationHeight,x.dilationWidth];let b;b="same"===u?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),s=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],s[t]]))}([x.filterHeight,x.filterWidth],v):[[0,0],[0,0]];const w=1===v[0]&&1===v[1],[_,S]=function(e,t,n){const r=n.map((e=>e[0])),s=n.map((e=>e[1])),i=e.concat(r,s),a=t.map(((e,t)=>(e-i[t]%e)%e)),o=s.map(((e,t)=>e+a[t]));return[t.map(((e,t)=>[r[t],o[t]])),t.map(((e,t)=>[0,a[t]]))]}([x.inHeight,x.inWidth],v,b),T=w?u:"valid",E=w?g:(0,h.f)(g,v,_),M=("avg"===n?()=>(0,i.w)(E,t,p,T,f):()=>(0,l._)(E,t,p,T,f))(),C=w?M:(0,a.E)(M,v,S);return y?(0,c.X)(C,[C.shape[1],C.shape[2],C.shape[3]]):C}})},33453:(e,t,n)=>{"use strict";n.d(t,{s:()=>o});var r=n(23926),s=n(29121),i=n(80747),a=n(43740);const o=(0,n(2668).op)({pow_:function(e,t){let n=(0,a._1)(e,"base","pow"),o=(0,a._1)(t,"exp","pow");[n,o]=(0,i.makeTypesMatch)(n,o);const l={a:n,b:o};return r.BV.runKernel(s.pe_,l)}})},98151:(e,t,n)=>{"use strict";n.d(t,{A:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({prelu_:function(e,t){const n={x:(0,i._1)(e,"x","prelu"),alpha:(0,i._1)(t,"alpha","prelu")};return r.BV.runKernel(s.o0g,n)}})},29798:(e,t,n)=>{"use strict";function r(e,t=!1){console.log(e.toString(t))}n.d(t,{S:()=>r})},49451:(e,t,n)=>{"use strict";n.d(t,{W:()=>o});var r=n(23926),s=n(29121),i=n(43740),a=n(62271);const o=(0,n(2668).op)({prod_:function(e,t=null,n=!1){let o=(0,i._1)(e,"x","prod");"bool"===o.dtype&&(o=(0,a.p)(o,"int32"));const l={x:o},u={axis:t,keepDims:n};return r.BV.runKernel(s.DlI,l,u)}})},92517:(e,t,n)=>{"use strict";n.d(t,{$:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({raggedGather_:function(e,t,n,a){const o={paramsNestedSplits:e.map(((e,t)=>(0,i._1)(e,`tensors${t}`,"raggedGather","int32"))),paramsDenseValues:(0,i._1)(t,"paramsDenseValues","raggedGather"),indices:(0,i._1)(n,"indices","raggedGather","int32")},l={outputRaggedRank:a},u=r.BV.runKernel(s.dDz,o,l);return{outputNestedSplits:u.slice(0,u.length-1),outputDenseValues:u[u.length-1]}}})},18478:(e,t,n)=>{"use strict";n.d(t,{N:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({raggedTensorToTensor_:function(e,t,n,a,o){const l=(0,i._1)(e,"shape","raggedTensorToTensor","int32"),u=(0,i._1)(t,"values","raggedTensorToTensor"),c={shape:l,values:u,defaultValue:(0,i._1)(n,"defaultValue","raggedTensorToTensor",u.dtype),rowPartitionTensors:a.map(((e,t)=>(0,i._1)(e,`tensors${t}`,"raggedTensorToTensor","int32")))},h={rowPartitionTypes:o};return r.BV.runKernel(s.BiW,c,h)}})},74825:(e,t,n)=>{"use strict";var r;function s(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let s=1;s<n.length;++s){const i=n[s],a=r[r.length-n.length+s],o=r[a];if(i>=0)if(o>=0){if(o!==i)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${s+e}] = ${i} but shape[${s+e}] = ${o}`)}else r[a]=i}return r}function i(e){const t={FIRST_DIM_SIZE:r.FIRST_DIM_SIZE,VALUE_ROWIDS:r.VALUE_ROWIDS,ROW_LENGTHS:r.ROW_LENGTHS,ROW_SPLITS:r.ROW_SPLITS,ROW_LIMITS:r.ROW_LIMITS,ROW_STARTS:r.ROW_STARTS},n=[];for(const r of e){if(!(r in t))break;n.push(t[r])}return n}function a(e){return 0===e.length?0:e[0]===r.FIRST_DIM_SIZE?e.length-1:e.length}function o(e,t){if(null==e||null==t)return;const n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(n,r-1);++s){const n=e[s],r=t[s+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${s-e.length}] = ${n} but ragged tensor input.flatValues.shape[${s-e.length}] = ${r}`)}}n.d(t,{Qd:()=>s,Qh:()=>a,Ys:()=>o,b2:()=>r,zb:()=>i}),function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(r||(r={}))},16634:(e,t,n)=>{"use strict";n.d(t,{T:()=>i});var r=n(23926),s=n(20569);const i=(0,n(2668).op)({rand_:function(e,t,n){const i=(0,s.NA)(e);let a=null;if(null==n||"float32"===n)a=new Float32Array(i);else if("int32"===n)a=new Int32Array(i);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(i)}for(let e=0;e<i;e++)a[e]=t();return r.BV.makeTensor(a,e,n)}})},56845:(e,t,n)=>{"use strict";n.d(t,{T9:()=>i,Yi:()=>s,wv:()=>a});var r=n(36377);class s{constructor(e,t,n,s,i){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=i||Math.random();this.random=r.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,i;do{r=2*this.random()-1,s=2*this.random()-1,i=r*r+s*s}while(i>=1||0===i);const a=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*r*a,t=this.mean+this.stdDev*s*a,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class i{constructor(e,t,n,i){this.alpha=e,this.beta=1/t,this.dtype=n;const a=i||Math.random();this.randu=r.alea(a.toString()),this.randn=new s(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,s,i;for(;;){do{r=this.randn.nextValue(),i=1+this.c*r}while(i<=0);if(i*=i*i,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-i+Math.log(i)),s=this.randu(),s<t||Math.log(s)<n)break}return i=1/this.beta*this.d*i,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class a{constructor(e=0,t=1,n,s){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==s&&(s=Math.random()),"number"==typeof s&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=r.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}},90800:(e,t,n)=>{"use strict";n.d(t,{w:()=>a});var r=n(72657),s=n(2668),i=n(56845);const a=(0,s.op)({randomGamma_:function(e,t,n=1,s="float32",a){if(null==n&&(n=1),null==s&&(s="float32"),"float32"!==s&&"int32"!==s)throw new Error(`Unsupported data type ${s}`);const o=new i.T9(t,n,s,a),l=(0,r.f)(e,s);for(let e=0;e<l.values.length;e++)l.values[e]=o.nextValue();return l.toTensor()}})},18558:(e,t,n)=>{"use strict";n.d(t,{n:()=>a});var r=n(72657),s=n(2668),i=n(56845);const a=(0,s.op)({randomNormal_:function(e,t=0,n=1,s,a){if(null!=s&&"bool"===s)throw new Error(`Unsupported data type ${s}`);const o=new i.Yi(t,n,s,!1,a),l=(0,r.f)(e,s);for(let e=0;e<l.values.length;e++)l.values[e]=o.nextValue();return l.toTensor()}})},12470:(e,t,n)=>{"use strict";n.d(t,{r:()=>i});var r=n(2668),s=n(18558);const i=(0,r.op)({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return(0,s.n)(e,0,1,t,n)}})},75002:(e,t,n)=>{"use strict";n.d(t,{L:()=>a});var r=n(72657),s=n(2668),i=n(56845);const a=(0,s.op)({randomUniform_:function(e,t=0,n=1,s="float32",a){const o=(0,r.f)(e,s),l=new i.wv(t,n,null,a);for(let e=0;e<o.values.length;e++)o.values[e]=l.nextValue();return o.toTensor()}})},47245:(e,t,n)=>{"use strict";n.d(t,{w:()=>i});var r=n(23926),s=n(29121);function i(e,t,n=1,i="float32"){if(0===n)throw new Error("Cannot have a step of zero");const a={start:e,stop:t,step:n,dtype:i};return r.BV.runKernel(s.e6w,{},a)}},60766:(e,t,n)=>{"use strict";n.d(t,{k:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({real_:function(e){const t={input:(0,i._1)(e,"input","real")};return r.BV.runKernel(s.xJR,t)}})},19036:(e,t,n)=>{"use strict";n.d(t,{M:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({reciprocal_:function(e){const t={x:(0,i._1)(e,"x","reciprocal")};return r.BV.runKernel(s.$HU,t)}})},25466:(e,t,n)=>{"use strict";n.d(t,{A:()=>i,g:()=>s});var r=n(20569);const s=30;function i(e){return e<=s?e:(0,r.jP)(e,Math.floor(Math.sqrt(e)))}},7409:(e,t,n)=>{"use strict";n.d(t,{U:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({relu_:function(e){const t={x:(0,i._1)(e,"x","relu")};return r.BV.runKernel(s.qkr,t)}})},83582:(e,t,n)=>{"use strict";n.d(t,{b:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({relu6_:function(e){const t={x:(0,i._1)(e,"x","relu6")};return r.BV.runKernel(s.SbG,t)}})},4968:(e,t,n)=>{"use strict";n.d(t,{X:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({reshape_:function(e,t){const n={x:(0,i._1)(e,"x","reshape","string_or_numeric")},a={shape:t};return r.BV.runKernel(s.HZH,n,a)}})},57486:(e,t,n)=>{"use strict";n.d(t,{G:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({reverse_:function(e,t){const n={x:(0,i._1)(e,"x","reverse")},a={dims:t};return r.BV.runKernel(s.mKl,n,a)}})},56893:(e,t,n)=>{"use strict";n.d(t,{S:()=>o});var r=n(43740),s=n(20569),i=n(2668),a=n(57486);const o=(0,i.op)({reverse1d_:function(e){const t=(0,r._1)(e,"x","reverse");return s.hu(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),(0,a.G)(t,0)}})},36548:(e,t,n)=>{"use strict";n.d(t,{d:()=>o});var r=n(43740),s=n(20569),i=n(2668),a=n(57486);const o=(0,i.op)({reverse2d_:function(e,t){const n=(0,r._1)(e,"x","reverse");return s.hu(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),(0,a.G)(n,t)}})},67338:(e,t,n)=>{"use strict";n.d(t,{s:()=>o});var r=n(43740),s=n(20569),i=n(2668),a=n(57486);const o=(0,i.op)({reverse3d_:function(e,t){const n=(0,r._1)(e,"x","reverse");return s.hu(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),(0,a.G)(n,t)}})},43267:(e,t,n)=>{"use strict";n.d(t,{m:()=>o});var r=n(43740),s=n(20569),i=n(2668),a=n(57486);const o=(0,i.op)({reverse4d_:function(e,t){const n=(0,r._1)(e,"x","reverse");return s.hu(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),(0,a.G)(n,t)}})},29645:(e,t,n)=>{"use strict";function r(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}n.d(t,{Q:()=>r})},97809:(e,t,n)=>{"use strict";n.d(t,{N:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({round_:function(e){const t={x:(0,i._1)(e,"x","round")};return r.BV.runKernel(s.e07,t)}})},32634:(e,t,n)=>{"use strict";n.d(t,{b:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({rsqrt_:function(e){const t={x:(0,i._1)(e,"x","rsqrt","float32")};return r.BV.runKernel(s.bV0,t)}})},99494:(e,t,n)=>{"use strict";n.d(t,{i:()=>i});var r=n(20569),s=n(57852);function i(e,t){if(((0,r.fU)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&(0,r.fU)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,s.H)(e,[],[],t)}},63100:(e,t,n)=>{"use strict";n.d(t,{s:()=>l});var r=n(23926),s=n(29121),i=n(43740),a=n(2668),o=n(33028);const l=(0,a.op)({scatterND_:function(e,t,n){const a=(0,i._1)(e,"indices","scatterND","int32"),l=(0,i._1)(t,"updates","scatterND");o.validateInput(l,a,n);const u={indices:a,updates:l},c={shape:n};return r.BV.runKernel(s.xQA,u,c)}})},33028:(e,t,n)=>{"use strict";n.d(t,{calculateShapes:()=>a,validateInput:()=>i,validateUpdateShape:()=>s});var r=n(20569);function s(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(i+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(i+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(i+" update.rank != "+(s+e.length-r));for(let e=0;e<s;++e)if(n.shape[e]!==t.shape[e])throw new Error(i+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-s;++t)if(n.shape[t+s]!==e[t+r])throw new Error(i+` updates.shape[${t+s}] (${n.shape[t+s]}) != shape[${t+s}] (${e[t+s]})`)}function i(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}s(n,t,e)}function a(e,t,n){const s=t.shape.length,i=s>1?t.shape[s-1]:1,a=n.length;let o=1;for(let e=i;e<a;++e)o*=n[e];const l=i<1?1:i;return{sliceRank:i,numUpdates:(0,r.NA)(t.shape)/l,sliceSize:o,strides:[...(0,r.e3)(n.slice(0,i)),1],outputSize:(0,r.NA)(n)}}},43336:(e,t,n)=>{"use strict";n.d(t,{z:()=>c});var r=n(23926),s=n(29121),i=n(43740),a=n(20569),o=n(2668),l=n(4968);const u=2147483648,c=(0,o.op)({searchSorted_:function(e,t,n="left"){const o=(0,i._1)(e,"sortedSequence","searchSorted"),c=(0,i._1)(t,"values","searchSorted"),h=o.shape[o.shape.length-1],d=c.shape[c.shape.length-1],p=(0,l.X)(o,[-1,h]),f=(0,l.X)(c,[-1,d]);if(p.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(p.shape[0]!==f.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if((0,a.NA)(f.shape)>=u)throw new Error("values tensor size must less than 2147483648");if(p.shape[1]>=u)throw new Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${p.shape[1]}`);const m={sortedSequence:p,values:f},g={side:n};return r.BV.runKernel(s.nr8,m,g)}})},14931:(e,t,n)=>{"use strict";n.r(t),n.d(t,{collectGatherOpShapeInfo:()=>o,computeOutShape:()=>a,segOpComputeOptimalWindowSize:()=>i});var r=n(20569),s=n(25466);function i(e,t){let n,i=!1;for(e<=s.g?(n=e,i=!0):n=(0,r.jP)(e,Math.floor(Math.sqrt(e)));!i;)n>t||n===e?i=!0:n=(0,r.jP)(e,n+1);return n}function a(e,t,n){const r=[],s=e.length;for(let i=0;i<s;i++)i!==t?r.push(e[i]):r.push(n);return r}function o(e,t,n,r){const s=t.shape.length,i=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>i)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${i}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const a=e.shape[n],o=[];let l=1,u=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=r;e<s;e++)o.push(t.shape[e]);for(let t=n+1;t<i;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:a,outputShape:o}}},55503:(e,t,n)=>{"use strict";n.d(t,{U:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({selu_:function(e){const t={x:(0,i._1)(e,"x","selu")};return r.BV.runKernel(s.oFR,t)}})},43179:(e,t,n)=>{"use strict";n.d(t,{$:()=>s,y:()=>r});const r=1.7580993408473768,s=1.0507009873554805},68678:(e,t,n)=>{"use strict";n.d(t,{U:()=>u});var r=n(43740),s=n(20569),i=n(64794),a=n(64718),o=n(2668),l=n(4968);const u=(0,o.op)({separableConv2d_:function(e,t,n,o,u,c=[1,1],h="NHWC"){const d=(0,r._1)(e,"x","separableConv2d"),p=(0,r._1)(t,"depthwiseFilter","separableConv2d"),f=(0,r._1)(n,"pointwiseFilter","separableConv2d");let m=d,g=!1;if(3===d.rank&&(g=!0,m=(0,l.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),"NCHW"===h)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");s.hu(4===m.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${m.rank}.`)),s.hu(4===p.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${p.rank}.`)),s.hu(4===f.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${p.rank}.`)),s.hu(1===f.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${f.shape[0]}.`)),s.hu(1===f.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${f.shape[1]}.`));const y=p.shape[2],x=p.shape[3];s.hu(f.shape[2]===y*x,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${y*x}, but got ${f.shape[2]}.`));const v=(0,a.B)(m,p,o,u,h,c),b=(0,i.T)(v,f,1,"valid",h);return g?(0,l.X)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},36567:(e,t,n)=>{"use strict";n.d(t,{O:()=>a});var r=n(73327),s=n(43740),i=n(20569);const a=async function(e,t){const n=(0,s._1)(e,"x","setdiff1d"),a=(0,s._1)(t,"y","setdiff1d");i.hu(n.dtype===a.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${a.dtype}).`)),i.hu(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),i.hu(1===a.rank,(()=>`y should be 1D tensor, but got y (${a.shape}).`));const o=await n.data(),l=await a.data(),u=new Set(l);let c=0;for(let e=0;e<o.length;e++)u.has(o[e])||c++;const h=new r.YD([c],n.dtype),d=new r.YD([c],"int32");for(let e=0,t=0;e<o.length;e++)u.has(o[e])||(h.values[t]=o[e],d.values[t]=e,t++);return[h.toTensor(),d.toTensor()]}},30625:(e,t,n)=>{"use strict";n.d(t,{X:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({sigmoid_:function(e){const t={x:(0,i._1)(e,"x","sigmoid","float32")};return r.BV.runKernel(s.a5O,t)}})},34434:(e,t,n)=>{"use strict";n.d(t,{X:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({sign_:function(e){const t={x:(0,i._1)(e,"x","sign")};return r.BV.runKernel(s.i5y,t)}})},85078:(e,t,n)=>{"use strict";n.d(t,{W:()=>u});var r=n(46884),s=n(14006),i=n(2668),a=n(4968),o=n(22676),l=n(24376);const u=(0,i.op)({frame_:function(e,t,n,i=!1,u=0){let c=0;const h=[];for(;c+t<=e.size;)h.push((0,o.t)(e,c,t)),c+=n;if(i)for(;c<e.size;){const i=c+t-e.size,a=(0,r.z)([(0,o.t)(e,c,t-i),(0,s.h)([i],u)]);h.push(a),c+=n}return 0===h.length?(0,l.o)([],[0,t]):(0,a.X)((0,r.z)(h),[h.length,t])}})},42975:(e,t,n)=>{"use strict";n.d(t,{f:()=>i});var r=n(2668),s=n(1347);const i=(0,r.op)({hammingWindow_:function(e){return(0,s.m)(e,.54,.46)}})},97107:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var r=n(2668),s=n(1347);const i=(0,r.op)({hannWindow_:function(e){return(0,s.m)(e,.5,.5)}})},52415:(e,t,n)=>{"use strict";n.d(t,{Z:()=>u});var r=n(24841),s=n(2668),i=n(1347),a=n(13710),o=n(85078),l=n(97107);const u=(0,s.op)({stft_:function(e,t,n,s,u=l.l){null==s&&(s=(0,i.G)(t));const c=(0,o.W)(e,t,n),h=(0,r.d)(c,u(t));return(0,a.Q)(h,s)}})},1347:(e,t,n)=>{"use strict";n.d(t,{G:()=>s,m:()=>i});var r=n(46092);function s(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function i(e,t,n){const s=1-e%2,i=new Float32Array(e);for(let r=0;r<e;++r){const a=2*Math.PI*r/(e+s-1);i[r]=t-n*Math.cos(a)}return(0,r.R)(i,"float32")}},99331:(e,t,n)=>{"use strict";n.d(t,{O:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({sin_:function(e){const t={x:(0,i._1)(e,"x","sin","float32")};return r.BV.runKernel(s.RQH,t)}})},83254:(e,t,n)=>{"use strict";n.d(t,{R:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({sinh_:function(e){const t={x:(0,i._1)(e,"x","sinh")};return r.BV.runKernel(s.wYB,t)}})},22676:(e,t,n)=>{"use strict";n.d(t,{t:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({slice_:function(e,t,n){const a=(0,i._1)(e,"x","slice","string_or_numeric");if(0===a.rank)throw new Error("Slicing scalar is not possible");const o={x:a},l={begin:t,size:n};return r.BV.runKernel(s.p2w,o,l)}})},43370:(e,t,n)=>{"use strict";n.d(t,{j:()=>o});var r=n(43740),s=n(20569),i=n(2668),a=n(22676);const o=(0,i.op)({slice1d_:function(e,t,n){const i=(0,r._1)(e,"x","slice1d");return s.hu(1===i.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${i.rank} tensor`)),(0,a.t)(i,[t],[n])}})},51804:(e,t,n)=>{"use strict";n.d(t,{S:()=>o});var r=n(43740),s=n(20569),i=n(2668),a=n(22676);const o=(0,i.op)({slice2d_:function(e,t,n){const i=(0,r._1)(e,"x","slice2d");return s.hu(2===i.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${i.rank} tensor`)),(0,a.t)(i,t,n)}})},15638:(e,t,n)=>{"use strict";n.d(t,{C:()=>o});var r=n(43740),s=n(20569),i=n(2668),a=n(22676);const o=(0,i.op)({slice3d_:function(e,t,n){const i=(0,r._1)(e,"x","slice3d");return s.hu(3===i.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${i.rank} tensor`)),(0,a.t)(i,t,n)}})},6322:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var r=n(43740),s=n(20569),i=n(2668),a=n(22676);const o=(0,i.op)({slice4d_:function(e,t,n){const i=(0,r._1)(e,"x","slice4d");return s.hu(4===i.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${i.rank} tensor`)),(0,a.t)(i,t,n)}})},37650:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assertParamsValid:()=>a,computeFlatOffset:()=>v,computeOutShape:()=>l,getNormalizedAxes:()=>d,isSliceContinous:()=>x,maskToAxes:()=>o,parseSliceParams:()=>b,sliceInfo:()=>w,startForAxis:()=>g,startIndicesWithElidedDims:()=>p,stopForAxis:()=>y,stopIndicesWithElidedDims:()=>f,stridesForAxis:()=>m,stridesWithElidedDims:()=>u});var r=n(20569);const s=-2,i=-1;function a(e,t,n){const s=e.shape.length;r.hu(s===t.length,(()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`)),r.hu(s===n.length,(()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`));for(let i=0;i<s;++i)r.hu(t[i]+n[i]<=e.shape[i],(()=>`Error in slice${s}D: begin[${i}] + size[${i}] (${t[i]+n[i]}) would overflow input.shape[${i}] (${e.shape[i]})`))}function o(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function l(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function u(e,t,n,r){const s=[...e];for(let e=s.length;e<r.length;e++)s.push(1);for(let e=0;e<n;e++)0===e?s[t]=1:(s.splice(t,0,1),s.pop());return s}function c(e,t,n){return n<=e?n:n-(t-1)}function h(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function d(e,t,n,r,s,i,a,o,l){const c=e.length;let h=new Array(c),d=new Array(c),x=new Array(c);if(t.length&&n>0){const l=t[0],c=n+1;h=p(a,l,c,r,e),d=f(o,l,c,s,e),x=u(i,l,c,e)}else for(let t=0;t<c;t++)h[t]=g(a,r,i,e,t,l),d[t]=y(o,s,i,e,t,l),x[t]=m(i,t,l);return{begin:h,end:d,strides:x}}function p(e,t,n,r,s){const i=[...s],a=h(n,t);for(let s=0;s<i.length;s++)if(a.indexOf(s)>-1)i[s]=0;else{const a=c(t,n,s);let o=r[a];e&1<<a&&(o=0),i[s]=o}return i}function f(e,t,n,s,i){const a=[...i],o=h(n,t);for(let r=0;r<a.length;r++)if(o.indexOf(r)>-1)a[r]=Number.MAX_SAFE_INTEGER;else{const i=c(t,n,r);let o=s[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),a[r]=o}for(let e=0;e<a.length;e++){const t=i[e];a[e]<0&&(a[e]+=t),a[e]=r.uZ(0,a[e],i[e])}return a}function m(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function g(e,t,n,s,i,a){let o=t[i];const l=n[i]||1;(e&1<<i||a&1<<i||null==o)&&(o=l>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=s[i];return o<0&&(o+=u),o=r.uZ(0,o,u-1),o}function y(e,t,n,s,i,a){let o=t[i];const l=n[i]||1;(e&1<<i||a&1<<i||null==o)&&(o=l>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=s[i];return o<0&&(o+=u),o=l>0?r.uZ(0,o,u):r.uZ(-1,o,u-1),o}function x(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function v(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function b(e,t,n){let s;const i=e.shape.length;let a;return s="number"==typeof t?[t,...new Array(i-1).fill(0)]:t.length<i?t.concat(new Array(i-t.length).fill(0)):t.slice(),s.forEach((e=>{r.hu(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(i).fill(-1):"number"==typeof n?[n,...new Array(i-1).fill(-1)]:n.length<i?n.concat(new Array(i-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(r.hu(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-s[n]))),[s,a]}function w(e,t,n,r,a,o,l,u,c){let h;if(null==r?(h=new Array(t.length),h.fill(1)):h=r,null!=l&&0!=(l&l-1))throw new Error("Multiple ellipses in slice is not allowed.");let d=!1;const p={dims:h.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:h.slice(),beginMask:a,endMask:o,ellipsisMask:l,newAxisMask:u,shrinkAxisMask:c};for(let e=0;e<p.dims;e++)d&&0!=(1<<e&u)&&p.numAddAxisAfterEllipsis++,1<<e&l&&(d=!0);d||(p.ellipsisMask|=1<<p.dims,p.dims++);const f={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const s=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<s;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(s),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(i),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(p,f);let m=!0,g=!0,y=!0;const x=[],v=[];for(let t=0;t<e.length;++t){if(0===f.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(f.shrinkAxisMask&1<<t),r=e[t];if(-1===r){x.push(n?1:-1);continue}const s=[f.beginMask&1<<t,f.endMask&1<<t],i=[f.strides[t]>0?0:-1,f.strides[t]>0?r:r-1];if(n&&f.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");y=y&&1===f.strides[t];const a=!!(f.beginMask&1<<t&&f.endMask&1<<t);if(f.beginValid&&f.endValid){if(n){const e=f.begin[t]<0?r+f.begin[t]:f.begin[t];if(f.begin[t]=e,f.end[t]=f.begin[t]+1,e<0||e>=r)throw Error(`slice index ${f.begin[t]} of dimension ${t} out of bounds.`)}else f.begin[t]=_(f.begin[t],0,f.strides[t],r,s,i),f.end[t]=_(f.end[t],1,f.strides[t],r,s,i);const e=1===f.strides[t]&&0===f.begin[t]&&f.end[t]===r;m=m&&e,g=g&&(0===t&&1===f.strides[t]||e)}else m=m&&1===f.strides[t]&&a,g=g&&(0===t&&1===f.strides[t]||a);let o,l=!1;if(f.beginValid&&f.endValid?(o=f.end[t]-f.begin[t],l=!0):n?(o=1,l=!0):a&&r>=0&&(o=f.strides[t]<0?-r:r,l=!0),l){let e;e=0===o||o<0!=f.strides[t]<0?0:Math.trunc(o/f.strides[t])+(o%f.strides[t]!=0?1:0),x.push(e)}else x.push(-1)}for(let e=0;e<f.finalShapeGatherIndices.length;++e){const t=f.finalShapeGatherIndices[e];t>=0?v.push(x[t]):t===s&&v.push(1)}return{finalShapeSparse:v.filter(((e,t)=>f.finalShapeGatherIndices[t]!==s)),finalShape:v,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:f.begin,end:f.end,strides:f.strides}}function _(e,t,n,r,s,i){if(s[t])return n>0?i[t]:i[t+1&1];{const t=e<0?r+e:e;return t<i[0]?i[0]:t>i[1]?i[1]:t}}},80682:(e,t,n)=>{"use strict";n.d(t,{X:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({softmax_:function(e,t=-1){const n=(0,i._1)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const a={logits:n},o={dim:t};return r.BV.runKernel(s.Gcp,a,o)}})},3694:(e,t,n)=>{"use strict";n.d(t,{W:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({softplus_:function(e){const t={x:(0,i._1)(e,"x","softplus")};return r.BV.runKernel(s.MRv,t)}})},27918:(e,t,n)=>{"use strict";n.d(t,{f:()=>o});var r=n(23926),s=n(29121),i=n(43740),a=n(20569);const o=(0,n(2668).op)({spaceToBatchND_:function(e,t,n){const o=(0,i._1)(e,"x","spaceToBatchND");a.hu(o.rank>=1+t.length,(()=>`input rank ${o.rank} should be > than [blockShape] ${t.length}`)),a.hu(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),a.hu(o.shape.reduce(((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]==0:e),!0),(()=>`input spatial dimensions ${o.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const l={x:o},u={blockShape:t,paddings:n};return r.BV.runKernel(s.TQc,l,u)}})},89083:(e,t,n)=>{"use strict";n.d(t,{M:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({sparseFillEmptyRows_:function(e,t,n,a){const o=(0,i._1)(e,"indices","sparseFillEmptyRows","int32"),l=(0,i._1)(t,"values","sparseFillEmptyRows"),u=(0,i._1)(n,"denseShape","sparseFillEmptyRows","int32"),c=(0,i._1)(a,"defaultValue","sparseFillEmptyRows",l.dtype);if(2!==o.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${o.shape}`);if(1!==l.rank)throw new Error(`Values should be Tensor1D but received shape ${l.shape}`);if(1!==u.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${u.shape}`);if(0!==c.rank)throw new Error(`Default value should be a scalar but received shape ${c.shape}`);const h={indices:o,values:l,denseShape:u,defaultValue:c},d=r.BV.runKernel(s.O3z,h);return{outputIndices:d[0],outputValues:d[1],emptyRowIndicator:d[2],reverseIndexMap:d[3]}}})},90820:(e,t,n)=>{"use strict";function r(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function s(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function i(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}n.d(t,{E3:()=>s,I_:()=>i,h:()=>r})},97092:(e,t,n)=>{"use strict";n.d(t,{x:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({sparseReshape_:function(e,t,n){const a=(0,i._1)(e,"inputIndices","sparseReshape","int32"),o=(0,i._1)(t,"inputShape","sparseReshape","int32"),l=(0,i._1)(n,"newShape","sparseReshape","int32");if(2!==a.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==o.rank)throw new Error(`Input shape should be Tensor1D but received shape ${o.shape}`);if(1!==l.rank)throw new Error(`New shape should be Tensor1D but received shape ${l.shape}`);const u={inputIndices:a,inputShape:o,newShape:l},c=r.BV.runKernel(s.nhH,u);return{outputIndices:c[0],outputShape:c[1]}}})},49139:(e,t,n)=>{"use strict";n.d(t,{Y6:()=>i,aY:()=>l,rP:()=>a,y5:()=>s,yv:()=>o});var r=n(20569);function s(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function i(e,t){return`size ${e} must be non-negative, not ${t}`}function a(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function o(e,t){return`Input to reshape is a SparseTensor with ${(0,r.NA)(e)}\n  dense values, but the requested shape requires a multiple of ${(0,r.NA)(t)}. inputShape=${e} outputShape= ${t}`}function l(e,t){return`Input to reshape is a tensor with ${(0,r.NA)(e)} dense values, but the requested shape has ${(0,r.NA)(t)}. inputShape=${e} outputShape=${t}`}},78022:(e,t,n)=>{"use strict";n.d(t,{S:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({sparseSegmentMean_:function(e,t,n){const a=(0,i._1)(e,"data","sparseSegmentMean"),o=(0,i._1)(t,"indices","sparseSegmentMean","int32"),l=(0,i._1)(n,"segmentIds","sparseSegmentMean","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==o.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${o.shape}`);if(1!==l.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${l.shape}`);const u={data:a,indices:o,segmentIds:l};return r.BV.runKernel(s.w3H,u)}})},88153:(e,t,n)=>{"use strict";function r(){return"segment ids must be >= 0"}function s(){return"segment ids are not increasing"}function i(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function a(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}n.d(t,{GW:()=>i,N5:()=>r,XL:()=>s,u6:()=>a})},70436:(e,t,n)=>{"use strict";n.d(t,{l:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({sparseSegmentSum_:function(e,t,n){const a=(0,i._1)(e,"data","sparseSegmentSum"),o=(0,i._1)(t,"indices","sparseSegmentSum","int32"),l=(0,i._1)(n,"segmentIds","sparseSegmentSum","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==o.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${o.shape}`);if(1!==l.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${l.shape}`);const u={data:a,indices:o,segmentIds:l};return r.BV.runKernel(s.ZjV,u)}})},98296:(e,t,n)=>{"use strict";n.d(t,{e:()=>o});var r=n(23926),s=n(29121),i=n(15689),a=n(43740);const o=(0,n(2668).op)({sparseToDense_:function(e,t,n,o=0){const l=(0,a._1)(e,"sparseIndices","sparseToDense","int32"),u=(0,a._1)(t,"sparseValues","sparseToDense","string_or_numeric"),c=(0,a._1)(o,"defaultValue","sparseToDense",u.dtype);i.b(l,u,n,c);const h={sparseIndices:l,sparseValues:u,defaultValue:c},d={outputShape:n};return r.BV.runKernel(s.D2d,h,d)}})},15689:(e,t,n)=>{"use strict";function r(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const s=e.rank>0?e.shape[0]:1,i=e.rank>1?e.shape[1]:1;if(n.length!==i)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${i}.`);const a=t.size;if(0!==t.rank&&(1!==t.rank||a!==s))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${s}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}n.d(t,{b:()=>r})},7020:(e,t,n)=>{"use strict";n.d(t,{k:()=>a});var r=n(23926),s=n(29121),i=n(20569);const a=(0,n(2668).op)({fft_:function(e){(0,i.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return r.BV.runKernel(s.vwp,t)}})},88447:(e,t,n)=>{"use strict";n.d(t,{S:()=>a});var r=n(23926),s=n(29121),i=n(20569);const a=(0,n(2668).op)({ifft_:function(e){(0,i.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return r.BV.runKernel(s.Qg5,t)}})},84415:(e,t,n)=>{"use strict";n.d(t,{w:()=>f});var r=n(61661),s=n(46884),i=n(64386),a=n(24841),o=n(2668),l=n(60766),u=n(4968),c=n(57486),h=n(99494),d=n(22676),p=n(88447);const f=(0,o.op)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let o;if(t<=2){const r=(0,u.X)(e,[n,t]);o=(0,p.S)(r)}else{const f=[n,2*(t-1)],m=(0,u.X)((0,l.k)(e),[n,t]),g=(0,u.X)((0,i.a)(e),[n,t]),y=(0,c.G)((0,d.t)(m,[0,1],[n,t-2]),1),x=(0,a.d)((0,c.G)((0,d.t)(g,[0,1],[n,t-2]),1),(0,h.i)(-1)),v=(0,s.z)([m,y],1),b=(0,s.z)([g,x],1),w=(0,u.X)((0,r.P)(v,b),[f[0],f[1]]);o=(0,p.S)(w)}if(o=(0,l.k)(o),3===e.rank&&0!==e.shape[0]){const t=o,n=e.shape[0];o=(0,u.X)(o,[n,o.shape[0]/n,o.shape[1]]),t.dispose()}return o}})},13710:(e,t,n)=>{"use strict";n.d(t,{Q:()=>m});var r=n(20569),s=n(61661),i=n(46884),a=n(64386),o=n(2668),l=n(60766),u=n(4968),c=n(22676),h=n(28644),d=n(59640),p=n(6577),f=n(7020);const m=(0,o.op)({rfft_:function(e,t){(0,r.hu)("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const o=e.size/n;let m;if(null!=t&&t<n){const r=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,m=(0,c.t)(e,r,s),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,m=(0,i.z)([e,(0,d.l)(r)],e.shape.length-1),n=t}else m=e;const g=(0,p.P)(m),y=(0,u.X)((0,s.P)(m,g),[o,n]),x=(0,f.k)(y),v=Math.floor(n/2)+1,b=(0,l.k)(x),w=(0,a.a)(x),_=(0,h.V)(b,[v,n-v],b.shape.length-1),S=(0,h.V)(w,[v,n-v],w.shape.length-1),T=m.shape.slice();return T[m.shape.length-1]=v,(0,u.X)((0,s.P)(_[0],S[0]),T)}})},28644:(e,t,n)=>{"use strict";n.d(t,{V:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({split_:function(e,t,n=0){const a={x:(0,i._1)(e,"x","split")},o={numOrSizeSplits:t,axis:n};return r.BV.runKernel(s.L8s,a,o)}})},34099:(e,t,n)=>{"use strict";n.d(t,{O:()=>s});var r=n(20569);function s(e,t,n=0){let s=[];if("number"==typeof t)(0,r.hu)(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),s=new Array(t).fill(e.shape[n]/t);else{const i=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);(0,r.hu)(i<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}(0,r.hu)(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),s=t}return s}},13261:(e,t,n)=>{"use strict";n.d(t,{_:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({sqrt_:function(e){const t={x:(0,i._1)(e,"x","sqrt","float32")};return r.BV.runKernel(s.FKq,t)}})},50248:(e,t,n)=>{"use strict";n.d(t,{h:()=>i});var r=n(23926),s=n(43740);const i=(0,n(2668).op)({square_:function(e){const t=(0,s._1)(e,"x","square");return r.BV.runKernel("Square",{x:t},{})}})},15265:(e,t,n)=>{"use strict";n.d(t,{$:()=>l});var r=n(23926),s=n(29121),i=n(80747),a=n(43740),o=n(72200);const l=(0,n(2668).op)({squaredDifference_:function(e,t){let n=(0,a._1)(e,"a","squaredDifference"),l=(0,a._1)(t,"b","squaredDifference");[n,l]=(0,i.makeTypesMatch)(n,l),(0,o.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return r.BV.runKernel(s._tC,u,{})}})},79590:(e,t,n)=>{"use strict";n.d(t,{L:()=>o});var r=n(43740),s=n(20569),i=n(2668),a=n(4968);const o=(0,i.op)({squeeze_:function(e,t){const n=(0,r._1)(e,"x","squeeze","string_or_numeric");return(0,a.X)(n,(0,s.bp)(n.shape,t).newShape)}})},82991:(e,t,n)=>{"use strict";n.d(t,{k:()=>o});var r=n(23926),s=n(29121),i=n(43740),a=n(20569);const o=(0,n(2668).op)({stack_:function(e,t=0){const n=(0,i.sI)(e,"tensors","stack","string_or_numeric");a.hu(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&a.hu(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const o=n,l={axis:t};return r.BV.runKernel(s.QiL,o,l)}})},71901:(e,t,n)=>{"use strict";n.d(t,{N:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({step_:function(e,t=0){const n={x:(0,i._1)(e,"x","step")},a={alpha:t};return r.BV.runKernel(s.h8e,n,a)}})},55158:(e,t,n)=>{"use strict";n.d(t,{N:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({stridedSlice_:function(e,t,n,a,o=0,l=0,u=0,c=0,h=0){const d={x:(0,i._1)(e,"x","stridedSlice","string_or_numeric")},p={begin:t,end:n,strides:a,beginMask:o,endMask:l,ellipsisMask:u,newAxisMask:c,shrinkAxisMask:h};return r.BV.runKernel(s.jQk,d,p)}})},4716:(e,t,n)=>{"use strict";n.d(t,{l:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({stringNGrams_:function(e,t,n,a,o,l,u,c){const h=(0,i._1)(e,"data","stringNGrams","string");if("string"!==h.dtype)throw new Error("Data must be of datatype string");if(1!==h.shape.length)throw new Error(`Data must be a vector, saw: ${h.shape}`);const d=(0,i._1)(t,"dataSplits","stringNGrams");if("int32"!==d.dtype)throw new Error("Data splits must be of datatype int32");const p={separator:n,nGramWidths:a,leftPad:o,rightPad:l,padWidth:u,preserveShortSequences:c},f={data:h,dataSplits:d},m=r.BV.runKernel(s._JP,f,p);return{nGrams:m[0],nGramsSplits:m[1]}}})},57207:(e,t,n)=>{"use strict";n.d(t,{S:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({stringSplit_:function(e,t,n=!0){const a=(0,i._1)(e,"input","stringSplit","string"),o=(0,i._1)(t,"delimiter","stringSplit","string");if(1!==a.rank)throw new Error(`Input should be Tensor1D but received shape ${a.shape}`);if(0!==o.rank)throw new Error(`Delimiter should be a scalar but received shape ${o.shape}`);const l={skipEmpty:n},u={input:a,delimiter:o},c=r.BV.runKernel(s.s1s,u,l);return{indices:c[0],values:c[1],shape:c[2]}}})},42722:(e,t,n)=>{"use strict";n.d(t,{I:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({stringToHashBucketFast_:function(e,t){const n=(0,i._1)(e,"input","stringToHashBucketFast","string"),a={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const o={input:n};return r.BV.runKernel(s.XkS,o,a)}})},70827:(e,t,n)=>{"use strict";n.d(t,{l:()=>o});var r=n(23926),s=n(29121),i=n(80747),a=n(43740);const o=(0,n(2668).op)({sub_:function(e,t){let n=(0,a._1)(e,"a","sub"),o=(0,a._1)(t,"b","sub");[n,o]=(0,i.makeTypesMatch)(n,o);const l={a:n,b:o};return r.BV.runKernel(s.Tr8,l)}})},15475:(e,t,n)=>{"use strict";n.d(t,{S:()=>o});var r=n(23926),s=n(29121),i=n(43740),a=n(62271);const o=(0,n(2668).op)({sum_:function(e,t=null,n=!1){let o=(0,i._1)(e,"x","sum");"bool"===o.dtype&&(o=(0,a.p)(o,"int32"));const l={x:o},u={axis:t,keepDims:n};return r.BV.runKernel(s.GBy,l,u)}})},61173:(e,t,n)=>{"use strict";n.d(t,{O:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({tan_:function(e){const t={x:(0,i._1)(e,"x","tan","float32")};return r.BV.runKernel(s.sEM,t)}})},21869:(e,t,n)=>{"use strict";n.d(t,{A:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({tanh_:function(e){const t={x:(0,i._1)(e,"x","tanh","float32")};return r.BV.runKernel(s.MIZ,t)}})},10701:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var r=n(43740),s=n(57852);function i(e,t,n){const i=(0,r.C)(e,n);return(0,s.H)(e,t,i,n)}},46092:(e,t,n)=>{"use strict";n.d(t,{R:()=>a});var r=n(43740),s=n(20569),i=n(57852);function a(e,t){(0,s.Cq)(e);const n=(0,r.C)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,i.H)(e,null,n,t)}},24376:(e,t,n)=>{"use strict";n.d(t,{o:()=>a});var r=n(43740),s=n(20569),i=n(57852);function a(e,t,n){if((0,s.Cq)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const a=(0,r.C)(e,n);if(2!==a.length&&1!==a.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,i.H)(e,t,a,n)}},99906:(e,t,n)=>{"use strict";n.d(t,{w:()=>a});var r=n(43740),s=n(20569),i=n(57852);function a(e,t,n){if((0,s.Cq)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const a=(0,r.C)(e,n);if(3!==a.length&&1!==a.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,i.H)(e,t,a,n)}},89450:(e,t,n)=>{"use strict";n.d(t,{y:()=>a});var r=n(43740),s=n(20569),i=n(57852);function a(e,t,n){if((0,s.Cq)(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const a=(0,r.C)(e,n);if(4!==a.length&&1!==a.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return(0,i.H)(e,t,a,n)}},34106:(e,t,n)=>{"use strict";n.d(t,{B:()=>a});var r=n(43740),s=n(20569),i=n(57852);function a(e,t,n){if((0,s.Cq)(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const a=(0,r.C)(e,n);if(5!==a.length&&1!==a.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return(0,i.H)(e,t,a,n)}},58782:(e,t,n)=>{"use strict";n.d(t,{x:()=>a});var r=n(43740),s=n(20569),i=n(57852);function a(e,t,n){if((0,s.Cq)(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const a=(0,r.C)(e,n);if(6!==a.length&&1!==a.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||a,(0,i.H)(e,t,a,n)}},57852:(e,t,n)=>{"use strict";n.d(t,{H:()=>a});var r=n(23926),s=n(20569),i=n(59155);function a(e,t,n,a){if(null==a&&(a=(0,s.D2)(e)),"complex64"===a)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!(0,s.fU)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){(0,s.Mu)(t);const e=(0,s.NA)(t),r=(0,s.NA)(n);(0,s.hu)(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],i=e!==n.length-1||r!==(0,s.NA)(t.slice(e));(0,s.hu)(n[e]===t[e]||!i,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return(0,s.fU)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==a?(0,i.toTypedArray)(e,a):(0,s.xH)(e,[],!0),r.BV.makeTensor(e,t,a)}},47501:(e,t,n)=>{"use strict";n.d(t,{G:()=>o});var r=n(23926),s=n(29121),i=n(43740),a=n(20569);const o=(0,n(2668).op)({tile_:function(e,t){const n=(0,i._1)(e,"x","tile","string_or_numeric");a.hu(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const o={x:n},l={reps:t};return r.BV.runKernel(s.n9L,o,l)}})},43243:(e,t,n)=>{"use strict";n.d(t,{h:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({topk_:function(e,t=1,n=!0){const a=(0,i._1)(e,"x","topk");if(0===a.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const o=a.shape[a.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${t}`);const l={x:a},u={k:t,sorted:n},[c,h]=r.BV.runKernel(s.cWu,l,u);return{values:c,indices:h}}})},89065:(e,t,n)=>{"use strict";n.d(t,{p:()=>p});var r=n(23926),s=n(4368),i=n(29121),a=n(43740),o=n(20569),l=n(61661),u=n(64386),c=n(17370),h=n(2668),d=n(60766);const p=(0,h.op)({transpose_:function(e,t,n){const h=(0,a._1)(e,"x","transpose");if(null==t&&(t=h.shape.map(((e,t)=>t)).reverse()),o.hu(h.rank===t.length,(()=>`Error in transpose: rank of input ${h.rank} must match length of perm ${t}.`)),t.forEach((e=>{o.hu(e>=0&&e<h.rank,(()=>"All entries in 'perm' must be between 0 and "+(h.rank-1)+` but got ${t}`))})),h.rank<=1)return h.clone();const p={x:h},f={perm:t};return"complex64"===h.dtype?(0,s.lu)((()=>{let e=(0,d.k)(h),t=(0,u.a)(h);return e=r.BV.runKernel(i.G3Y,{x:e},f),t=r.BV.runKernel(i.G3Y,{x:t},f),n&&(t=(0,c.W)(t)),(0,l.P)(e,t)})):r.BV.runKernel(i.G3Y,p,f)}})},43596:(e,t,n)=>{"use strict";n.d(t,{X:()=>a});var r=n(72657),s=n(2668),i=n(56845);const a=(0,s.op)({truncatedNormal_:function(e,t=0,n=1,s,a){if(null!=s&&"bool"===s)throw new Error("Unsupported data type $ { dtype }");const o=new i.Yi(t,n,s,!0,a),l=(0,r.f)(e,s);for(let e=0;e<l.values.length;e++)l.values[e]=o.nextValue();return l.toTensor()}})},49608:(e,t,n)=>{"use strict";n.d(t,{T:()=>o});var r=n(23926),s=n(29121),i=n(43740),a=n(20569);const o=(0,n(2668).op)({unique_:function(e,t=0){const n=(0,i._1)(e,"x","unique","string_or_numeric");(0,a.hu)(n.rank>0,(()=>"The input tensor must be at least 1D"));const o={x:n},l={axis:t},[u,c]=r.BV.runKernel(s.kpP,o,l);return{values:u,indices:c}}})},98749:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var r=n(23926),s=n(29121),i=n(43740),a=n(20569);const o=(0,n(2668).op)({unsortedSegmentSum_:function(e,t,n){const o=(0,i._1)(e,"x","unsortedSegmentSum"),l=(0,i._1)(t,"segmentIds","unsortedSegmentSum","int32");(0,a.hu)((0,a.GN)(n),(()=>"numSegments must be of dtype int"));const u={x:o,segmentIds:l},c={numSegments:n};return r.BV.runKernel(s.Qvg,u,c)}})},24136:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var r=n(23926),s=n(29121),i=n(43740),a=n(20569);const o=(0,n(2668).op)({unstack_:function(e,t=0){const n=(0,i._1)(e,"x","unstack","string_or_numeric");a.hu(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const o={value:n},l={axis:t};return r.BV.runKernel(s.ToN,o,l)}})},64978:(e,t,n)=>{"use strict";n.d(t,{G:()=>s});var r=n(43336);function s(e,t){return(0,r.z)(e,t,"right")}},40812:(e,t,n)=>{"use strict";n.d(t,{V:()=>s});var r=n(23926);function s(e,t=!0,n,s){return r.BV.makeVariable(e,t,n,s)}},95912:(e,t,n)=>{"use strict";n.d(t,{a:()=>l});var r=n(23926),s=n(29121),i=n(43740),a=n(68247),o=n(72200);const l=(0,n(2668).op)({where_:function(e,t,n){const l=(0,i._1)(t,"a","where"),u=(0,i._1)(n,"b","where"),c=(0,i._1)(e,"condition","where","bool"),h=(0,o.assertAndGetBroadcastShape)((0,o.assertAndGetBroadcastShape)(c.shape,l.shape),u.shape),d={condition:(0,a.U)(c,h),t:(0,a.U)(l,h),e:(0,a.U)(u,h)};return r.BV.runKernel(s.PhF,d)}})},66380:(e,t,n)=>{"use strict";n.d(t,{i:()=>i});var r=n(48333),s=n(43740);const i=async function(e){const t=(0,s._1)(e,"condition","whereAsync","bool"),n=await t.data(),i=(0,r.Z)(t.shape,n);return e!==t&&t.dispose(),i}},59640:(e,t,n)=>{"use strict";n.d(t,{l:()=>a});var r=n(23926),s=n(20569),i=n(61661);function a(e,t="float32"){if("complex64"===t){const t=a(e,"float32"),n=a(e,"float32");return(0,i.P)(t,n)}const n=(0,s.wT)((0,s.NA)(e),t);return r.BV.makeTensor(n,e,t)}},6577:(e,t,n)=>{"use strict";n.d(t,{P:()=>a});var r=n(23926),s=n(29121),i=n(43740);const a=(0,n(2668).op)({zerosLike_:function(e){const t={x:(0,i._1)(e,"x","zerosLike")};return r.BV.runKernel(s.RuY,t)}})},26480:(e,t,n)=>{"use strict";n(79998);var r=n(22885),s=n(61044),i=n(28209),a=n(90780);class o{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){window&&(0,r.OB)().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{e.source===window&&e.data.name===this.messageName&&(e.stopPropagation(),(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))}),!0))):setTimeout(e,t)}}if((0,r.OB)().get("IS_BROWSER")){(0,r.OB)().setPlatform("browser",new o);try{a.xQ.registerManager(i.Ew.URL_SCHEME,new i.JL)}catch(e){}try{a.xQ.registerManager(s.ns.URL_SCHEME,new s.y$)}catch(e){}}},35221:(e,t,n)=>{"use strict";var r=n(22885);let s;(0,r.OB)().get("IS_NODE")&&!(0,r.OB)().get("IS_BROWSER")&&(0,r.OB)().setPlatform("node",new class{constructor(){this.util=n(48628),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=(0,r.OB)().global.fetch?(0,r.OB)().global.fetch(e,t):(null==s&&(s=n(75410)),s(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}})},52368:(e,t,n)=>{"use strict";n.d(t,{Q1:()=>a});var r=n(22885),s=n(59155),i=n(20569);class a{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new l)}profileKernel(e,t,n){let i;const a=()=>{i=n()};let l;const u=s.now();if(this.backendTimer.timerAvailable())l=this.backendTimer.time(a);else{a();for(const e of i)e.dataSync();l=Promise.resolve({kernelMs:s.now()-u})}if((0,r.OB)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<i.length;t++){const n=i[t];n.data().then((t=>{o(t,n.dtype,e)}))}return{kernelName:e,outputs:i,inputs:t,timeMs:l.then((e=>e.kernelMs)),extraInfo:l.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:i}=e;n.forEach((e=>{Promise.all([e.data(),r,i]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function o(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class l{logKernelProfile(e,t,n,r,s,a){const o="number"==typeof r?i.oj(`${r}ms`,9):r.error,l=i.oj(e,25),u=t.rank,c=t.size,h=i.oj(t.shape.toString(),14);let d="";for(const e in s){const n=s[e];if(null!=n){const r=n.shape||t.shape,s=r.length;d+=`${e}: ${s}D ${s>0?r:""} `}}console.log(`%c${l}\t%c${o}\t%c${u}D ${h}\t%c${c}\t%c${d}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}},50223:(e,t,n)=>{"use strict";n.d(t,{C:()=>s,_:()=>i});var r=n(20569);function s(e,t,n){const r={},s={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const i=e[n],a=i.inputs;for(const e in a){const n=a[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){i.outputs.forEach((e=>r[e.id]=!0)),o=!0,s[i.id]=!0;break}if(o)break}}const i={};i[n.id]=!0;const a={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(i[n.outputs[e].id]){for(const e in r)i[r[e].id]=!0,a[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(s[n.id]&&a[n.id]){const e={};for(const t in n.inputs){const s=n.inputs[t];r[s.id]&&(e[t]=s)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}function i(e,t,n,s){for(let i=t.length-1;i>=0;i--){const a=t[i],o=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?o.push(n):o.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const l=a.gradient(o);for(const t in a.inputs){if(!(t in l))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(l)}.`);const i=n((()=>l[t]()));if("float32"!==i.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${i.dtype}'`);const o=a.inputs[t];if(!r.cO(i.shape,o.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${i.shape}', which does not match the shape of the input '${o.shape}'`);if(null==e[o.id])e[o.id]=i;else{const t=e[o.id];e[o.id]=s(t,i),t.dispose()}}}}},73327:(e,t,n)=>{"use strict";n.d(t,{FZ:()=>p,Vi:()=>h,Vp:()=>d,YD:()=>o,_w:()=>m,es:()=>f});var r=n(55938),s=n(62488),i=n(20569),a=n(59155);class o{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=i.NA(e),null!=n){const e=n.length;i.hu(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||i.rQ(t,this.size),this.strides=(0,i.e3)(e)}set(e,...t){0===t.length&&(t=[0]),i.hu(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return l().makeTensor(this.values,this.shape,this.dtype)}}let l=null,u=null,c=null;function h(e){l=e}function d(e){u=e}function p(e){c=e}class f{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=i.NA(e),this.strides=(0,i.e3)(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return u.buffer(this.shape,this.dtype,e)}bufferSync(){return u.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return(0,i.GX)(this.shape,e,"complex64"===this.dtype)}arraySync(){return(0,i.GX)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=l().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>a.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),l().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=l().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>a.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await l().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(l().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return u.print(this,e)}clone(){return this.throwIfDisposed(),u.clone(this)}toString(e=!1){const t=this.dataSync();return(0,s.H)(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),u.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),l().makeVariable(this,e,t,n)}}Object.defineProperty(f,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),(0,r.R)("Tensor",(()=>f));class m extends f{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!i.cO(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);l().disposeTensor(this),this.dataId=e.dataId,l().incRef(this,null)}dispose(){l().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(m,Symbol.hasInstance,{value:e=>e instanceof f&&null!=e.assign&&e.assign instanceof Function})},62488:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var r=n(20569);const s=20,i=3,a=7;function o(e,t,n,s){const i=(0,r.e3)(t),a=function(e,t,n,s){const i=(0,r.NA)(t),a=s[s.length-1],o=new Array(a).fill(0),u=t.length,c="complex64"===n?h(e):e;if(u>1)for(let e=0;e<i/a;e++){const t=e*a;for(let e=0;e<a;e++)o[e]=Math.max(o[e],l(c[t+e],0,n).length)}return o}(e,t,n,i),o=t.length,u=c(e,t,n,i,a),d=["Tensor"];return s&&(d.push(`  dtype: ${n}`),d.push(`  rank: ${o}`),d.push(`  shape: [${t}]`),d.push("  values:")),d.push(u.map((e=>"    "+e)).join("\n")),d.join("\n")}function l(e,t,n){let s;return s=Array.isArray(e)?`${parseFloat(e[0].toFixed(a))} + ${parseFloat(e[1].toFixed(a))}j`:(0,r.HD)(e)?`'${e}'`:"bool"===n?u(e):parseFloat(e.toFixed(a)).toString(),(0,r.oj)(s,t)}function u(e){return 0===e?"false":"true"}function c(e,t,n,r,a,o=!0){const d="complex64"===n?2:1,p=t[0],f=t.length;if(0===f)return"complex64"===n?[l(h(e)[0],0,n)]:"bool"===n?[u(e[0])]:[e[0].toString()];if(1===f){if(p>s){const t=i*d;let r=Array.from(e.slice(0,t)),s=Array.from(e.slice((p-i)*d,p*d));return"complex64"===n&&(r=h(r),s=h(s)),["["+r.map(((e,t)=>l(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>l(e,a[p-i+t],n))).join(", ")+"]"]}return["["+("complex64"===n?h(e):Array.from(e)).map(((e,t)=>l(e,a[t],n))).join(", ")+"]"]}const m=t.slice(1),g=r.slice(1),y=r[0]*d,x=[];if(p>s){for(let t=0;t<i;t++){const r=t*y,s=r+y;x.push(...c(e.slice(r,s),m,n,g,a,!1))}x.push("...");for(let t=p-i;t<p;t++){const r=t*y,s=r+y;x.push(...c(e.slice(r,s),m,n,g,a,t===p-1))}}else for(let t=0;t<p;t++){const r=t*y,s=r+y;x.push(...c(e.slice(r,s),m,n,g,a,t===p-1))}const v=2===f?",":"";x[0]="["+x[0]+v;for(let e=1;e<x.length-1;e++)x[e]=" "+x[e]+v;let b=",\n";for(let e=2;e<f;e++)b+="\n";return x[x.length-1]=" "+x[x.length-1]+"]"+(o?"":b),x}function h(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}},80747:(e,t,n)=>{"use strict";n.d(t,{assertTypesMatch:()=>o,getTensorsInContainer:()=>l,makeTypesMatch:()=>a});var r=n(73327),s=n(71221),i=n(20569);function a(e,t){if(e.dtype===t.dtype)return[e,t];const n=(0,s.x8)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function o(e,t){(0,i.hu)(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function l(e){const t=[];return u(e,t,new Set),t}function u(e,t,n){if(null==e)return;if(e instanceof r.es)return void t.push(e);if(s=e,!Array.isArray(s)&&"object"!=typeof s)return;var s;const i=e;for(const e in i){const r=i[e];n.has(r)||(n.add(r),u(r,t,n))}}},43740:(e,t,n)=>{"use strict";n.d(t,{C:()=>l,_1:()=>h,sI:()=>d});var r=n(23926),s=n(22885),i=n(73327),a=n(20569),o=n(59155);function l(e,t){let n=e;if((0,a.fU)(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||(0,a.fU)(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&(0,s.OB)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&u(e,r,[]),r}function u(e,t,n){if(n=n||[],!Array.isArray(e)&&!(0,a.fU)(e))return void(0,a.hu)(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));(0,a.hu)(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),(0,a.hu)(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)u(e[t],r,n.concat(t))}function c(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function h(e,t,n,s="numeric"){if(e instanceof i.es)return c(s,e.dtype,t,n),e;let u=(0,a.D2)(e);if("string"!==u&&["bool","int32","float32"].indexOf(s)>=0&&(u=s),c(s,u,t,n),null==e||!(0,a.fU)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const h=l(e,u);(0,a.fU)(e)||Array.isArray(e)||(e=[e]);const d="string"!==u?(0,o.toTypedArray)(e,u):(0,a.xH)(e,[],!0);return r.BV.makeTensor(d,h,u)}function d(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,s)=>h(e,`${t}[${s}]`,n,r)))}},71221:(e,t,n)=>{"use strict";var r,s,i,a,o;n.d(t,{x8:()=>u,z4:()=>c}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(s||(s={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(i||(i={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(a||(a={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(o||(o={}));const l={float32:a,int32:s,bool:i,complex64:o};function u(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return l[e][t]}function c(e){return u(e,"int32")}},59155:(e,t,n)=>{"use strict";n.r(t),n.d(t,{arraysEqual:()=>s.cO,assert:()=>s.hu,assertNonNegativeIntegerDimensions:()=>s.Mu,assertNonNull:()=>s.Cq,assertShapesMatch:()=>s.k5,bytesFromStringArray:()=>s.Ub,bytesPerElement:()=>s.bT,checkConversionForErrors:()=>s.D5,clamp:()=>s.uZ,computeStrides:()=>s.e3,createScalarValue:()=>a,createShuffledIndices:()=>s.U$,decodeString:()=>h,distSquared:()=>s.E7,encodeString:()=>c,fetch:()=>u,fingerPrint64:()=>i.O,flatten:()=>s.xH,getArrayFromDType:()=>s.rQ,getTypedArrayFromDType:()=>s.WP,hasEncodingLoss:()=>s.QB,hexToLong:()=>i.E,indexToLoc:()=>s.NE,inferDtype:()=>s.D2,inferFromImplicitShape:()=>s.JZ,isBoolean:()=>s.jn,isFunction:()=>s.mf,isInt:()=>s.GN,isNumber:()=>s.hj,isPromise:()=>s.tI,isScalarShape:()=>s.N9,isString:()=>s.HD,isTypedArray:()=>s.fU,isValidDtype:()=>s.LP,locToIndex:()=>s.qy,makeOnesTypedArray:()=>s.p8,makeZerosNestedTypedArray:()=>s.l6,makeZerosTypedArray:()=>s.wT,nearestDivisor:()=>s.jP,nearestLargerEven:()=>s.nY,now:()=>l,parseAxisParam:()=>s.EC,randUniform:()=>s.bj,repeatedTry:()=>s.WD,rightPad:()=>s.oj,shuffle:()=>s.TV,shuffleCombo:()=>s.d7,sizeFromShape:()=>s.NA,sizeToSquarishShape:()=>s.YP,squeezeShape:()=>s.bp,sum:()=>s.Sm,swap:()=>s.LF,tanh:()=>s.AE,toNestedArray:()=>s.GX,toTypedArray:()=>o});var r=n(22885),s=n(20569),i=n(78194);function a(e,t){return"string"===t?c(e):o([e],t)}function o(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=s.xH(e)),(0,r.OB)().getBool("DEBUG")&&s.D5(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function l(){return(0,r.OB)().platform.now()}function u(e,t){return(0,r.OB)().platform.fetch(e,t)}function c(e,t="utf-8"){return t=t||"utf-8",(0,r.OB)().platform.encode(e,t)}function h(e,t="utf-8"){return t=t||"utf-8",(0,r.OB)().platform.decode(e,t)}},20569:(e,t,n)=>{"use strict";function r(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,o(e,t,n)}function s(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,o(e,n,r),o(t,n,r)}function i(e,t,n){return Math.max(e,Math.min(t,n))}function a(e){return e%2==0?e:e+1}function o(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function l(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function u(e,t){const n=Math.random();return t*n+(1-n)*e}function c(e,t){let n=0;for(let r=0;r<e.length;r++){const s=Number(e[r])-Number(t[r]);n+=s*s}return n}function h(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function d(e,t,n=""){h(y(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function p(e){h(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function f(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||N(e)&&!n)for(let r=0;r<e.length;++r)f(e[r],t,n);else t.push(e);return t}function m(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function g(e){return 0===e.length}function y(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function x(e){return e%1==0}function v(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function b(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function w(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return r(t),t}function _(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function S(e,t=(e=>0),n,r=setTimeout){return new Promise(((s,i)=>{let a=0;const o=()=>{if(e())return void s();a++;const l=t(a);null!=n&&a>=n?i():r(o,l)};o()}))}function T(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function E(e,t){const n=t.length;return h((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),h(e.every((e=>x(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function M(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,i=null==t||s?null:E(t,e).sort();let a=0;for(let t=0;t<e.length;++t){if(null!=i){if(i[a]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==i[a]||i[a]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),i[a]<=t&&a++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function C(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function A(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function I(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function R(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function k(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function N(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function L(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function D(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function O(e){return"string"==typeof e||e instanceof String}function P(e){return"boolean"==typeof e}function F(e){return"number"==typeof e}function $(e){return Array.isArray(e)?$(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":F(e)?"float32":O(e)?"string":P(e)?"bool":"float32"}function B(e){return!!(e&&e.constructor&&e.call&&e.apply)}function U(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function z(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function V(e,t,n,r=!1){const s=new Array;if(1===t.length){const i=t[0]*(r?2:1);for(let t=0;t<i;t++)s[t]=n[e+t]}else{const i=t[0],a=t.slice(1),o=a.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<i;t++)s[t]=V(e+t*o,a,n,r)}return s}function G(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return V(0,e,t,n)}function W(e,t){const n=H(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function H(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function j(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return G(e,new Float32Array(n));if("int32"===t)return G(e,new Int32Array(n));if("bool"===t)return G(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function X(e){e.forEach((t=>{h(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function q(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function K(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function Y(e){return e&&e.then&&"function"==typeof e.then}n.d(t,{AE:()=>v,Cq:()=>p,D2:()=>$,D5:()=>I,E7:()=>c,EC:()=>E,GN:()=>x,GX:()=>G,HD:()=>O,JZ:()=>T,LF:()=>o,LP:()=>R,Mu:()=>X,N9:()=>g,NA:()=>m,NE:()=>K,QB:()=>k,Sm:()=>l,TV:()=>r,U$:()=>w,Ub:()=>D,WD:()=>S,WP:()=>C,YP:()=>b,bT:()=>L,bj:()=>u,bp:()=>M,cO:()=>y,d7:()=>s,e3:()=>z,fU:()=>N,hj:()=>F,hu:()=>h,jP:()=>U,jn:()=>P,k5:()=>d,l6:()=>j,mf:()=>B,nY:()=>a,oj:()=>_,p8:()=>W,qy:()=>q,rQ:()=>A,tI:()=>Y,uZ:()=>i,wT:()=>H,xH:()=>f})},58485:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});var r=n(23645),s=n.n(r)()((function(e){return e[1]}));s.push([e.id,".mindar-ui-overlay{display:flex;align-items:center;justify-content:center;position:absolute;left:0;right:0;top:0;bottom:0;background:rgba(0,0,0,0);z-index:2}.mindar-ui-overlay.hidden{display:none}.mindar-ui-loading .loader{border:16px solid #222;border-top:16px solid #fff;opacity:.8;border-radius:50%;width:120px;height:120px;animation:spin 2s linear infinite}@keyframes spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}.mindar-ui-compatibility .content{background:#000;color:#fff;opacity:.8;text-align:center;margin:20px;padding:20px;min-height:50vh}@media(min-aspect-ratio: 1/1){.mindar-ui-scanning .scanning{width:50vh;height:50vh}}@media(max-aspect-ratio: 1/1){.mindar-ui-scanning .scanning{width:80vw;height:80vw}}.mindar-ui-scanning .scanning .inner{position:relative;width:100%;height:100%;opacity:.8;background:linear-gradient(to right, white 10px, transparent 10px) 0 0,linear-gradient(to right, white 10px, transparent 10px) 0 100%,linear-gradient(to left, white 10px, transparent 10px) 100% 0,linear-gradient(to left, white 10px, transparent 10px) 100% 100%,linear-gradient(to bottom, white 10px, transparent 10px) 0 0,linear-gradient(to bottom, white 10px, transparent 10px) 100% 0,linear-gradient(to top, white 10px, transparent 10px) 0 100%,linear-gradient(to top, white 10px, transparent 10px) 100% 100%;background-repeat:no-repeat;background-size:40px 40px}.mindar-ui-scanning .scanning .inner .scanline{position:absolute;width:100%;height:10px;background:#fff;animation:move 2s linear infinite}@keyframes move{0%,100%{top:0%}50%{top:calc(100% - 10px)}}",""]);const i=s},23645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=e(t);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,r){"string"==typeof e&&(e=[[null,e,""]]);var s={};if(r)for(var i=0;i<this.length;i++){var a=this[i][0];null!=a&&(s[a]=!0)}for(var o=0;o<e.length;o++){var l=[].concat(e[o]);r&&s[l[0]]||(n&&(l[2]?l[2]="".concat(n," and ").concat(l[2]):l[2]=n),t.push(l))}},t}},97676:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r='<div class="mindar-ui-overlay mindar-ui-compatibility"> <div class="content"> <h1>Failed to launch :(</h1> <p> Looks like your device/browser is not compatible. </p> <br/> <br/> <p> Please try the following recommended browsers: </p> <p> For Android device - Chrome </p> <p> For iOS device - Safari </p> </div> </div> '},69894:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r='<div class="mindar-ui-overlay mindar-ui-loading"> <div class="loader"/> </div> '},22810:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r='<div class="mindar-ui-overlay mindar-ui-scanning"> <div class="scanning"> <div class="inner"> <div class="scanline"/> </div> </div> </div> '},43720:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var s={},i={};function a(e,t){var n,r,a;return t?(a=0<=(e>>>=0)&&e<256)&&(r=i[e])?r:(n=l(e,(0|e)<0?-1:0,!0),a&&(i[e]=n),n):(a=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=l(e,e<0?-1:0,!1),a&&(s[e]=n),n)}function o(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=p)return _}else{if(e<=-f)return S;if(e+1>=f)return w}return e<0?o(-e,t).neg():l(e%d|0,e/d|0,t)}function l(e,t,r){return new n(e,t,r)}n.fromInt=a,n.fromNumber=o,n.fromBits=l;var u=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var s=o(u(n,8)),i=g,a=0;a<e.length;a+=8){var l=Math.min(8,e.length-a),h=parseInt(e.substring(a,a+l),n);if(l<8){var d=o(u(n,l));i=i.mul(d).add(o(h))}else i=(i=i.mul(s)).add(o(h))}return i.unsigned=t,i}function h(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?c(e,t):l(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=h;var d=4294967296,p=d*d,f=p/2,m=a(1<<24),g=a(0);n.ZERO=g;var y=a(0,!0);n.UZERO=y;var x=a(1);n.ONE=x;var v=a(1,!0);n.UONE=v;var b=a(-1);n.NEG_ONE=b;var w=l(-1,2147483647,!1);n.MAX_VALUE=w;var _=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=_;var S=l(0,-2147483648,!1);n.MIN_VALUE=S;var T=n.prototype;T.toInt=function(){return this.unsigned?this.low>>>0:this.low},T.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},T.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=o(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var s=o(u(e,6),this.unsigned),i=this,a="";;){var l=i.div(s),c=(i.sub(l.mul(s)).toInt()>>>0).toString(e);if((i=l).isZero())return c+a;for(;c.length<6;)c="0"+c;a=""+c+a}},T.getHighBits=function(){return this.high},T.getHighBitsUnsigned=function(){return this.high>>>0},T.getLowBits=function(){return this.low},T.getLowBitsUnsigned=function(){return this.low>>>0},T.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},T.isZero=function(){return 0===this.high&&0===this.low},T.eqz=T.isZero,T.isNegative=function(){return!this.unsigned&&this.high<0},T.isPositive=function(){return this.unsigned||this.high>=0},T.isOdd=function(){return 1==(1&this.low)},T.isEven=function(){return 0==(1&this.low)},T.equals=function(e){return r(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},T.eq=T.equals,T.notEquals=function(e){return!this.eq(e)},T.neq=T.notEquals,T.ne=T.notEquals,T.lessThan=function(e){return this.comp(e)<0},T.lt=T.lessThan,T.lessThanOrEqual=function(e){return this.comp(e)<=0},T.lte=T.lessThanOrEqual,T.le=T.lessThanOrEqual,T.greaterThan=function(e){return this.comp(e)>0},T.gt=T.greaterThan,T.greaterThanOrEqual=function(e){return this.comp(e)>=0},T.gte=T.greaterThanOrEqual,T.ge=T.greaterThanOrEqual,T.compare=function(e){if(r(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},T.comp=T.compare,T.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(x)},T.neg=T.negate,T.add=function(e){r(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,s=this.low>>>16,i=65535&this.low,a=e.high>>>16,o=65535&e.high,u=e.low>>>16,c=0,d=0,p=0,f=0;return p+=(f+=i+(65535&e.low))>>>16,d+=(p+=s+u)>>>16,c+=(d+=n+o)>>>16,c+=t+a,l((p&=65535)<<16|(f&=65535),(c&=65535)<<16|(d&=65535),this.unsigned)},T.subtract=function(e){return r(e)||(e=h(e)),this.add(e.neg())},T.sub=T.subtract,T.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=h(e)),t)return l(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(S))return e.isOdd()?S:g;if(e.eq(S))return this.isOdd()?S:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,s=65535&this.high,i=this.low>>>16,a=65535&this.low,u=e.high>>>16,c=65535&e.high,d=e.low>>>16,p=65535&e.low,f=0,y=0,x=0,v=0;return x+=(v+=a*p)>>>16,y+=(x+=i*p)>>>16,x&=65535,y+=(x+=a*d)>>>16,f+=(y+=s*p)>>>16,y&=65535,f+=(y+=i*d)>>>16,y&=65535,f+=(y+=a*c)>>>16,f+=n*p+s*d+i*c+a*u,l((x&=65535)<<16|(v&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},T.mul=T.multiply,T.divide=function(e){if(r(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,s,i;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return v;i=y}else{if(this.eq(S))return e.eq(x)||e.eq(b)?S:e.eq(S)?x:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?x:b:(s=this.sub(e.mul(n)),i=n.add(s.div(e)));if(e.eq(S))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();i=g}for(s=this;s.gte(e);){n=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(n)/Math.LN2),c=a<=48?1:u(2,a-48),d=o(n),p=d.mul(e);p.isNegative()||p.gt(s);)p=(d=o(n-=c,this.unsigned)).mul(e);d.isZero()&&(d=x),i=i.add(d),s=s.sub(p)}return i},T.div=T.divide,T.modulo=function(e){return r(e)||(e=h(e)),t?l((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},T.mod=T.modulo,T.rem=T.modulo,T.not=function(){return l(~this.low,~this.high,this.unsigned)},T.and=function(e){return r(e)||(e=h(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},T.or=function(e){return r(e)||(e=h(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},T.xor=function(e){return r(e)||(e=h(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},T.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},T.shl=T.shiftLeft,T.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},T.shr=T.shiftRight,T.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?l(this.low>>>e|t<<32-e,t>>>e,this.unsigned):l(32===e?t:t>>>e-32,0,this.unsigned)},T.shru=T.shiftRightUnsigned,T.shr_u=T.shiftRightUnsigned,T.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},T.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},T.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},T.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},T.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},36377:(e,t,n)=>{var r=n(84832),s=n(68652),i=n(90801),a=n(92030),o=n(3618),l=n(89049),u=n(51971);u.alea=r,u.xor128=s,u.xorwow=i,u.xorshift7=a,u.xor4096=o,u.tychei=l,e.exports=u},84832:function(e,t,n){var r;!function(e,s,i){function a(e){var t,n=this,r=(t=4022871197,function(e){e=String(e);for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function l(e,t){var n=new a(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.alea=l}(0,e=n.nmd(e),n.amdD)},89049:function(e,t,n){var r;!function(e,s,i){function a(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function l(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.tychei=l}(0,e=n.nmd(e),n.amdD)},68652:function(e,t,n){var r;!function(e,s,i){function a(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function l(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xor128=l}(0,e=n.nmd(e),n.amdD)},3618:function(e,t,n){var r;!function(e,s,i){function a(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,i=t.i;return t.w=r=r+1640531527|0,n=s[i+34&127],e=s[i=i+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[i]=n^e,t.i=i,n+(r^r>>>16)|0},function(e,t){var n,r,s,i,a,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),s=0,i=-32;i<l;++i)t&&(r^=t.charCodeAt((i+32)%t.length)),0===i&&(a=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,i>=0&&(a=a+1640531527|0,s=0==(n=o[127&i]^=r+a)?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,i=512;i>0;--i)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;e.w=a,e.X=o,e.i=s}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function l(e,t){null==e&&(e=+new Date);var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xor4096=l}(0,e=n.nmd(e),n.amdD)},92030:function(e,t,n){var r;!function(e,s,i){function a(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function l(e,t){null==e&&(e=+new Date);var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xorshift7=l}(0,e=n.nmd(e),n.amdD)},90801:function(e,t,n){var r;!function(e,s,i){function a(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function l(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xorwow=l}(0,e=n.nmd(e),n.amdD)},51971:function(e,t,n){var r;!function(s,i,a){var o,l=256,u=a.pow(l,6),c=a.pow(2,52),h=2*c,d=l-1;function p(e,t,n){var r=[],d=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,x(i)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(l):(e=new Uint8Array(l),(s.crypto||s.msCrypto).getRandomValues(e)),x(e)}catch(e){var t=s.navigator,n=t&&t.plugins;return[+new Date,s,n,s.screen,x(i)]}}():e,3),r),p=new f(r),v=function(){for(var e=p.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return v.int32=function(){return 0|p.g(4)},v.quick=function(){return p.g(4)/4294967296},v.double=v,y(x(p.S),i),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,p),e.state=function(){return m(p,{})}),n?(a.random=e,t):e})(v,d,"global"in t?t.global:this==a,t.state)}function f(e){var t,n=e.length,r=this,s=0,i=r.i=r.j=0,a=r.S=[];for(n||(e=[n++]);s<l;)a[s]=s++;for(s=0;s<l;s++)a[s]=a[i=d&i+e[s%n]+(t=a[s])],a[i]=t;(r.g=function(e){for(var t,n=0,s=r.i,i=r.j,a=r.S;e--;)t=a[s=d&s+1],n=n*l+a[d&(a[s]=a[i=d&i+t])+(a[i]=t)];return r.i=s,r.j=i,n})(l)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==s?e:e+"\0"}function y(e,t){for(var n,r=e+"",s=0;s<r.length;)t[d&s]=d&(n^=19*t[d&s])+r.charCodeAt(s++);return x(t)}function x(e){return String.fromCharCode.apply(0,e)}if(y(a.random(),i),e.exports){e.exports=p;try{o=n(75042)}catch(e){}}else void 0===(r=function(){return p}.call(t,n,t,e))||(e.exports=r)}("undefined"!=typeof self?self:this,[],Math)},74412:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>a});var r=n(93379),s=n.n(r),i=n(58485);s()(i.Z,{insert:"head",singleton:!1});const a=i.Z.locals||{}},93379:(e,t,n)=>{"use strict";var r,s=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),i=[];function a(e){for(var t=-1,n=0;n<i.length;n++)if(i[n].identifier===e){t=n;break}return t}function o(e,t){for(var n={},r=[],s=0;s<e.length;s++){var o=e[s],l=t.base?o[0]+t.base:o[0],u=n[l]||0,c="".concat(l," ").concat(u);n[l]=u+1;var h=a(c),d={css:o[1],media:o[2],sourceMap:o[3]};-1!==h?(i[h].references++,i[h].updater(d)):i.push({identifier:c,updater:m(d,t),references:1}),r.push(c)}return r}function l(e){var t=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var i=n.nc;i&&(r.nonce=i)}if(Object.keys(r).forEach((function(e){t.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(t);else{var a=s(e.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}return t}var u,c=(u=[],function(e,t){return u[e]=t,u.filter(Boolean).join("\n")});function h(e,t,n,r){var s=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=c(t,s);else{var i=document.createTextNode(s),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(i,a[t]):e.appendChild(i)}}function d(e,t,n){var r=n.css,s=n.media,i=n.sourceMap;if(s?e.setAttribute("media",s):e.removeAttribute("media"),i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var p=null,f=0;function m(e,t){var n,r,s;if(t.singleton){var i=f++;n=p||(p=l(t)),r=h.bind(null,n,i,!1),s=h.bind(null,n,i,!0)}else n=l(t),r=d.bind(null,n,t),s=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else s()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=(void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r));var n=o(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<n.length;r++){var s=a(n[r]);i[s].references--}for(var l=o(e,t),u=0;u<n.length;u++){var c=a(n[u]);0===i[c].references&&(i[c].updater(),i.splice(c,1))}n=l}}}},2212:(e,t,n)=>{"use strict";n.r(t),n.d(t,{ACESFilmicToneMapping:()=>ne,AddEquation:()=>E,AddOperation:()=>J,AdditiveAnimationBlendMode:()=>jt,AdditiveBlending:()=>w,AlphaFormat:()=>Pe,AlwaysDepth:()=>V,AlwaysStencilFunc:()=>Tn,AmbientLight:()=>rd,AmbientLightProbe:()=>Td,AnimationClip:()=>Eh,AnimationLoader:()=>Lh,AnimationMixer:()=>np,AnimationObjectGroup:()=>ep,AnimationUtils:()=>dh,ArcCurve:()=>qu,ArrayCamera:()=>xl,ArrowHelper:()=>jp,Audio:()=>Od,AudioAnalyser:()=>zd,AudioContext:()=>wd,AudioListener:()=>Dd,AudioLoader:()=>_d,AxesHelper:()=>Xp,AxisHelper:()=>_f,BackSide:()=>m,BasicDepthPacking:()=>sn,BasicShadowMap:()=>c,BinaryTextureLoader:()=>Cf,Bone:()=>ru,BooleanKeyframeTrack:()=>xh,BoundingBoxHelper:()=>Sf,Box2:()=>dp,Box3:()=>cr,Box3Helper:()=>zp,BoxBufferGeometry:()=>bi,BoxGeometry:()=>bi,BoxHelper:()=>Up,BufferAttribute:()=>Ls,BufferGeometry:()=>ei,BufferGeometryLoader:()=>cd,ByteType:()=>Ee,Cache:()=>Ch,Camera:()=>Ei,CameraHelper:()=>Fp,CanvasRenderer:()=>If,CanvasTexture:()=>Du,CatmullRomCurve3:()=>ec,CineonToneMapping:()=>te,CircleBufferGeometry:()=>Pu,CircleGeometry:()=>Pu,ClampToEdgeWrapping:()=>de,Clock:()=>Ad,Color:()=>Is,ColorKeyframeTrack:()=>vh,CompressedTexture:()=>Lu,CompressedTextureLoader:()=>Dh,ConeBufferGeometry:()=>$u,ConeGeometry:()=>$u,CubeCamera:()=>Ai,CubeReflectionMapping:()=>ie,CubeRefractionMapping:()=>ae,CubeTexture:()=>Ii,CubeTextureLoader:()=>Ph,CubeUVReflectionMapping:()=>ue,CubeUVRefractionMapping:()=>ce,CubicBezierCurve:()=>sc,CubicBezierCurve3:()=>ic,CubicInterpolant:()=>fh,CullFaceBack:()=>o,CullFaceFront:()=>l,CullFaceFrontBack:()=>u,CullFaceNone:()=>a,Curve:()=>ju,CurvePath:()=>Bh,CustomBlending:()=>T,CustomToneMapping:()=>re,CylinderBufferGeometry:()=>Fu,CylinderGeometry:()=>Fu,Cylindrical:()=>cp,DataTexture:()=>su,DataTexture2DArray:()=>Ca,DataTexture3D:()=>Aa,DataTextureLoader:()=>Fh,DataUtils:()=>Yp,DecrementStencilOp:()=>pn,DecrementWrapStencilOp:()=>mn,DefaultLoadingManager:()=>Ih,DepthFormat:()=>Ve,DepthStencilFormat:()=>Ge,DepthTexture:()=>Ou,DirectionalLight:()=>nd,DirectionalLightHelper:()=>Dp,DiscreteInterpolant:()=>gh,DodecahedronBufferGeometry:()=>Uu,DodecahedronGeometry:()=>Uu,DoubleSide:()=>g,DstAlphaFactor:()=>P,DstColorFactor:()=>$,DynamicBufferAttribute:()=>df,DynamicCopyUsage:()=>Nn,DynamicDrawUsage:()=>Mn,DynamicReadUsage:()=>In,EdgesGeometry:()=>Hu,EdgesHelper:()=>Tf,EllipseCurve:()=>Xu,EqualDepth:()=>H,EqualStencilFunc:()=>vn,EquirectangularReflectionMapping:()=>oe,EquirectangularRefractionMapping:()=>le,Euler:()=>qr,EventDispatcher:()=>Pn,ExtrudeBufferGeometry:()=>Bc,ExtrudeGeometry:()=>Bc,FaceColors:()=>ef,FileLoader:()=>Nh,FlatShading:()=>y,Float16BufferAttribute:()=>zs,Float32Attribute:()=>bf,Float32BufferAttribute:()=>Vs,Float64Attribute:()=>wf,Float64BufferAttribute:()=>Gs,FloatType:()=>Re,Fog:()=>Cl,FogExp2:()=>Ml,Font:()=>yd,FontLoader:()=>vd,FrontSide:()=>f,Frustum:()=>Fi,GLBufferAttribute:()=>ip,GLSL1:()=>Dn,GLSL3:()=>On,GammaEncoding:()=>Zt,GreaterDepth:()=>X,GreaterEqualDepth:()=>j,GreaterEqualStencilFunc:()=>Sn,GreaterStencilFunc:()=>wn,GridHelper:()=>Ip,Group:()=>vl,HalfFloatType:()=>ke,HemisphereLight:()=>Gh,HemisphereLightHelper:()=>Ap,HemisphereLightProbe:()=>Sd,IcosahedronBufferGeometry:()=>zc,IcosahedronGeometry:()=>zc,ImageBitmapLoader:()=>md,ImageLoader:()=>Oh,ImageUtils:()=>Zn,ImmediateRenderObject:()=>gp,IncrementStencilOp:()=>dn,IncrementWrapStencilOp:()=>fn,InstancedBufferAttribute:()=>lu,InstancedBufferGeometry:()=>ud,InstancedInterleavedBuffer:()=>sp,InstancedMesh:()=>pu,Int16Attribute:()=>gf,Int16BufferAttribute:()=>Fs,Int32Attribute:()=>xf,Int32BufferAttribute:()=>Bs,Int8Attribute:()=>pf,Int8BufferAttribute:()=>Ds,IntType:()=>Ae,InterleavedBuffer:()=>Il,InterleavedBufferAttribute:()=>kl,Interpolant:()=>ph,InterpolateDiscrete:()=>Bt,InterpolateLinear:()=>Ut,InterpolateSmooth:()=>zt,InvertStencilOp:()=>gn,JSONLoader:()=>Rf,KeepStencilOp:()=>cn,KeyframeTrack:()=>yh,LOD:()=>Yl,LatheBufferGeometry:()=>Vc,LatheGeometry:()=>Vc,Layers:()=>Kr,LensFlare:()=>Nf,LessDepth:()=>G,LessEqualDepth:()=>W,LessEqualStencilFunc:()=>bn,LessStencilFunc:()=>xn,Light:()=>Vh,LightProbe:()=>ad,Line:()=>bu,Line3:()=>mp,LineBasicMaterial:()=>fu,LineCurve:()=>ac,LineCurve3:()=>oc,LineDashedMaterial:()=>ch,LineLoop:()=>Tu,LinePieces:()=>Zp,LineSegments:()=>Su,LineStrip:()=>Jp,LinearEncoding:()=>Yt,LinearFilter:()=>ve,LinearInterpolant:()=>mh,LinearMipMapLinearFilter:()=>Se,LinearMipMapNearestFilter:()=>we,LinearMipmapLinearFilter:()=>_e,LinearMipmapNearestFilter:()=>be,LinearToneMapping:()=>Q,Loader:()=>Rh,LoaderUtils:()=>ld,LoadingManager:()=>Ah,LogLuvEncoding:()=>en,LoopOnce:()=>Pt,LoopPingPong:()=>$t,LoopRepeat:()=>Ft,LuminanceAlphaFormat:()=>Ue,LuminanceFormat:()=>Be,MOUSE:()=>s,Material:()=>_s,MaterialLoader:()=>od,Math:()=>qn,MathUtils:()=>qn,Matrix3:()=>Yn,Matrix4:()=>$r,MaxEquation:()=>I,Mesh:()=>xi,MeshBasicMaterial:()=>Rs,MeshDepthMaterial:()=>cl,MeshDistanceMaterial:()=>hl,MeshFaceMaterial:()=>nf,MeshLambertMaterial:()=>lh,MeshMatcapMaterial:()=>uh,MeshNormalMaterial:()=>oh,MeshPhongMaterial:()=>ih,MeshPhysicalMaterial:()=>sh,MeshStandardMaterial:()=>rh,MeshToonMaterial:()=>ah,MinEquation:()=>A,MirroredRepeatWrapping:()=>pe,MixOperation:()=>Y,MultiMaterial:()=>rf,MultiplyBlending:()=>S,MultiplyOperation:()=>K,NearestFilter:()=>fe,NearestMipMapLinearFilter:()=>xe,NearestMipMapNearestFilter:()=>ge,NearestMipmapLinearFilter:()=>ye,NearestMipmapNearestFilter:()=>me,NeverDepth:()=>z,NeverStencilFunc:()=>yn,NoBlending:()=>v,NoColors:()=>Qp,NoToneMapping:()=>Z,NormalAnimationBlendMode:()=>Ht,NormalBlending:()=>b,NotEqualDepth:()=>q,NotEqualStencilFunc:()=>_n,NumberKeyframeTrack:()=>bh,Object3D:()=>us,ObjectLoader:()=>hd,ObjectSpaceNormalMap:()=>ln,OctahedronBufferGeometry:()=>Gc,OctahedronGeometry:()=>Gc,OneFactor:()=>k,OneMinusDstAlphaFactor:()=>F,OneMinusDstColorFactor:()=>B,OneMinusSrcAlphaFactor:()=>O,OneMinusSrcColorFactor:()=>L,OrthographicCamera:()=>Yi,PCFShadowMap:()=>h,PCFSoftShadowMap:()=>d,PMREMGenerator:()=>ha,ParametricBufferGeometry:()=>Wc,ParametricGeometry:()=>Wc,Particle:()=>af,ParticleBasicMaterial:()=>uf,ParticleSystem:()=>of,ParticleSystemMaterial:()=>cf,Path:()=>Uh,PerspectiveCamera:()=>Mi,Plane:()=>Di,PlaneBufferGeometry:()=>Ui,PlaneGeometry:()=>Ui,PlaneHelper:()=>Vp,PointCloud:()=>sf,PointCloudMaterial:()=>lf,PointLight:()=>ed,PointLightHelper:()=>Tp,Points:()=>Ru,PointsMaterial:()=>Eu,PolarGridHelper:()=>Rp,PolyhedronBufferGeometry:()=>Bu,PolyhedronGeometry:()=>Bu,PositionalAudio:()=>Ud,PropertyBinding:()=>Qd,PropertyMixer:()=>Vd,QuadraticBezierCurve:()=>lc,QuadraticBezierCurve3:()=>uc,Quaternion:()=>ar,QuaternionKeyframeTrack:()=>_h,QuaternionLinearInterpolant:()=>wh,REVISION:()=>r,RGBADepthPacking:()=>an,RGBAFormat:()=>$e,RGBAIntegerFormat:()=>Ke,RGBA_ASTC_10x10_Format:()=>xt,RGBA_ASTC_10x5_Format:()=>mt,RGBA_ASTC_10x6_Format:()=>gt,RGBA_ASTC_10x8_Format:()=>yt,RGBA_ASTC_12x10_Format:()=>vt,RGBA_ASTC_12x12_Format:()=>bt,RGBA_ASTC_4x4_Format:()=>ot,RGBA_ASTC_5x4_Format:()=>lt,RGBA_ASTC_5x5_Format:()=>ut,RGBA_ASTC_6x5_Format:()=>ct,RGBA_ASTC_6x6_Format:()=>ht,RGBA_ASTC_8x5_Format:()=>dt,RGBA_ASTC_8x6_Format:()=>pt,RGBA_ASTC_8x8_Format:()=>ft,RGBA_BPTC_Format:()=>wt,RGBA_ETC2_EAC_Format:()=>at,RGBA_PVRTC_2BPPV1_Format:()=>rt,RGBA_PVRTC_4BPPV1_Format:()=>nt,RGBA_S3TC_DXT1_Format:()=>Je,RGBA_S3TC_DXT3_Format:()=>Ze,RGBA_S3TC_DXT5_Format:()=>Qe,RGBDEncoding:()=>rn,RGBEEncoding:()=>Qt,RGBEFormat:()=>ze,RGBFormat:()=>Fe,RGBIntegerFormat:()=>qe,RGBM16Encoding:()=>nn,RGBM7Encoding:()=>tn,RGB_ETC1_Format:()=>st,RGB_ETC2_Format:()=>it,RGB_PVRTC_2BPPV1_Format:()=>tt,RGB_PVRTC_4BPPV1_Format:()=>et,RGB_S3TC_DXT1_Format:()=>Ye,RGFormat:()=>je,RGIntegerFormat:()=>Xe,RawShaderMaterial:()=>Ji,Ray:()=>Fr,Raycaster:()=>ap,RectAreaLight:()=>sd,RedFormat:()=>We,RedIntegerFormat:()=>He,ReinhardToneMapping:()=>ee,RepeatWrapping:()=>he,ReplaceStencilOp:()=>hn,ReverseSubtractEquation:()=>C,RingBufferGeometry:()=>Hc,RingGeometry:()=>Hc,SRGB8_ALPHA8_ASTC_10x10_Format:()=>Lt,SRGB8_ALPHA8_ASTC_10x5_Format:()=>Rt,SRGB8_ALPHA8_ASTC_10x6_Format:()=>kt,SRGB8_ALPHA8_ASTC_10x8_Format:()=>Nt,SRGB8_ALPHA8_ASTC_12x10_Format:()=>Dt,SRGB8_ALPHA8_ASTC_12x12_Format:()=>Ot,SRGB8_ALPHA8_ASTC_4x4_Format:()=>_t,SRGB8_ALPHA8_ASTC_5x4_Format:()=>St,SRGB8_ALPHA8_ASTC_5x5_Format:()=>Tt,SRGB8_ALPHA8_ASTC_6x5_Format:()=>Et,SRGB8_ALPHA8_ASTC_6x6_Format:()=>Mt,SRGB8_ALPHA8_ASTC_8x5_Format:()=>Ct,SRGB8_ALPHA8_ASTC_8x6_Format:()=>At,SRGB8_ALPHA8_ASTC_8x8_Format:()=>It,Scene:()=>Al,SceneUtils:()=>kf,ShaderChunk:()=>zi,ShaderLib:()=>Gi,ShaderMaterial:()=>Ti,ShadowMaterial:()=>nh,Shape:()=>zh,ShapeBufferGeometry:()=>jc,ShapeGeometry:()=>jc,ShapePath:()=>gd,ShapeUtils:()=>Pc,ShortType:()=>Me,Skeleton:()=>ou,SkeletonHelper:()=>_p,SkinnedMesh:()=>nu,SmoothShading:()=>x,Sphere:()=>Ir,SphereBufferGeometry:()=>Xc,SphereGeometry:()=>Xc,Spherical:()=>up,SphericalHarmonics3:()=>id,SplineCurve:()=>cc,SpotLight:()=>Kh,SpotLightHelper:()=>xp,Sprite:()=>jl,SpriteMaterial:()=>Nl,SrcAlphaFactor:()=>D,SrcAlphaSaturateFactor:()=>U,SrcColorFactor:()=>N,StaticCopyUsage:()=>kn,StaticDrawUsage:()=>En,StaticReadUsage:()=>An,StereoCamera:()=>Cd,StreamCopyUsage:()=>Ln,StreamDrawUsage:()=>Cn,StreamReadUsage:()=>Rn,StringKeyframeTrack:()=>Sh,SubtractEquation:()=>M,SubtractiveBlending:()=>_,TOUCH:()=>i,TangentSpaceNormalMap:()=>on,TetrahedronBufferGeometry:()=>qc,TetrahedronGeometry:()=>qc,TextBufferGeometry:()=>Kc,TextGeometry:()=>Kc,Texture:()=>er,TextureLoader:()=>$h,TorusBufferGeometry:()=>Yc,TorusGeometry:()=>Yc,TorusKnotBufferGeometry:()=>Jc,TorusKnotGeometry:()=>Jc,Triangle:()=>bs,TriangleFanDrawMode:()=>Kt,TriangleStripDrawMode:()=>qt,TrianglesDrawMode:()=>Xt,TubeBufferGeometry:()=>Zc,TubeGeometry:()=>Zc,UVMapping:()=>se,Uint16Attribute:()=>yf,Uint16BufferAttribute:()=>$s,Uint32Attribute:()=>vf,Uint32BufferAttribute:()=>Us,Uint8Attribute:()=>ff,Uint8BufferAttribute:()=>Os,Uint8ClampedAttribute:()=>mf,Uint8ClampedBufferAttribute:()=>Ps,Uniform:()=>rp,UniformsLib:()=>Vi,UniformsUtils:()=>Si,UnsignedByteType:()=>Te,UnsignedInt248Type:()=>Oe,UnsignedIntType:()=>Ie,UnsignedShort4444Type:()=>Ne,UnsignedShort5551Type:()=>Le,UnsignedShort565Type:()=>De,UnsignedShortType:()=>Ce,VSMShadowMap:()=>p,Vector2:()=>Kn,Vector3:()=>or,Vector4:()=>nr,VectorKeyframeTrack:()=>Th,Vertex:()=>hf,VertexColors:()=>tf,VideoTexture:()=>Nu,WebGL1Renderer:()=>El,WebGLCubeRenderTarget:()=>Ri,WebGLMultipleRenderTargets:()=>sr,WebGLMultisampleRenderTarget:()=>ir,WebGLRenderTarget:()=>rr,WebGLRenderTargetCube:()=>Af,WebGLRenderer:()=>Tl,WebGLUtils:()=>yl,WireframeGeometry:()=>Qc,WireframeHelper:()=>Ef,WrapAroundEnding:()=>Wt,XHRLoader:()=>Mf,ZeroCurvatureEnding:()=>Vt,ZeroFactor:()=>R,ZeroSlopeEnding:()=>Gt,ZeroStencilOp:()=>un,sRGBEncoding:()=>Jt});const r="132",s={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},i={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},a=0,o=1,l=2,u=3,c=0,h=1,d=2,p=3,f=0,m=1,g=2,y=1,x=2,v=0,b=1,w=2,_=3,S=4,T=5,E=100,M=101,C=102,A=103,I=104,R=200,k=201,N=202,L=203,D=204,O=205,P=206,F=207,$=208,B=209,U=210,z=0,V=1,G=2,W=3,H=4,j=5,X=6,q=7,K=0,Y=1,J=2,Z=0,Q=1,ee=2,te=3,ne=4,re=5,se=300,ie=301,ae=302,oe=303,le=304,ue=306,ce=307,he=1e3,de=1001,pe=1002,fe=1003,me=1004,ge=1004,ye=1005,xe=1005,ve=1006,be=1007,we=1007,_e=1008,Se=1008,Te=1009,Ee=1010,Me=1011,Ce=1012,Ae=1013,Ie=1014,Re=1015,ke=1016,Ne=1017,Le=1018,De=1019,Oe=1020,Pe=1021,Fe=1022,$e=1023,Be=1024,Ue=1025,ze=$e,Ve=1026,Ge=1027,We=1028,He=1029,je=1030,Xe=1031,qe=1032,Ke=1033,Ye=33776,Je=33777,Ze=33778,Qe=33779,et=35840,tt=35841,nt=35842,rt=35843,st=36196,it=37492,at=37496,ot=37808,lt=37809,ut=37810,ct=37811,ht=37812,dt=37813,pt=37814,ft=37815,mt=37816,gt=37817,yt=37818,xt=37819,vt=37820,bt=37821,wt=36492,_t=37840,St=37841,Tt=37842,Et=37843,Mt=37844,Ct=37845,At=37846,It=37847,Rt=37848,kt=37849,Nt=37850,Lt=37851,Dt=37852,Ot=37853,Pt=2200,Ft=2201,$t=2202,Bt=2300,Ut=2301,zt=2302,Vt=2400,Gt=2401,Wt=2402,Ht=2500,jt=2501,Xt=0,qt=1,Kt=2,Yt=3e3,Jt=3001,Zt=3007,Qt=3002,en=3003,tn=3004,nn=3005,rn=3006,sn=3200,an=3201,on=0,ln=1,un=0,cn=7680,hn=7681,dn=7682,pn=7683,fn=34055,mn=34056,gn=5386,yn=512,xn=513,vn=514,bn=515,wn=516,_n=517,Sn=518,Tn=519,En=35044,Mn=35048,Cn=35040,An=35045,In=35049,Rn=35041,kn=35046,Nn=35050,Ln=35042,Dn="100",On="300 es";class Pn{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)}hasEventListener(e,t){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(t)}removeEventListener(e,t){if(void 0===this._listeners)return;const n=this._listeners[e];if(void 0!==n){const e=n.indexOf(t);-1!==e&&n.splice(e,1)}}dispatchEvent(e){if(void 0===this._listeners)return;const t=this._listeners[e.type];if(void 0!==t){e.target=this;const n=t.slice(0);for(let t=0,r=n.length;t<r;t++)n[t].call(this,e);e.target=null}}}const Fn=[];for(let e=0;e<256;e++)Fn[e]=(e<16?"0":"")+e.toString(16);let $n=1234567;const Bn=Math.PI/180,Un=180/Math.PI;function zn(){const e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,n=4294967295*Math.random()|0,r=4294967295*Math.random()|0;return(Fn[255&e]+Fn[e>>8&255]+Fn[e>>16&255]+Fn[e>>24&255]+"-"+Fn[255&t]+Fn[t>>8&255]+"-"+Fn[t>>16&15|64]+Fn[t>>24&255]+"-"+Fn[63&n|128]+Fn[n>>8&255]+"-"+Fn[n>>16&255]+Fn[n>>24&255]+Fn[255&r]+Fn[r>>8&255]+Fn[r>>16&255]+Fn[r>>24&255]).toUpperCase()}function Vn(e,t,n){return Math.max(t,Math.min(n,e))}function Gn(e,t){return(e%t+t)%t}function Wn(e,t,n){return(1-n)*e+n*t}function Hn(e){return 0==(e&e-1)&&0!==e}function jn(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))}function Xn(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}var qn=Object.freeze({__proto__:null,DEG2RAD:Bn,RAD2DEG:Un,generateUUID:zn,clamp:Vn,euclideanModulo:Gn,mapLinear:function(e,t,n,r,s){return r+(e-t)*(s-r)/(n-t)},inverseLerp:function(e,t,n){return e!==t?(n-e)/(t-e):0},lerp:Wn,damp:function(e,t,n,r){return Wn(e,t,1-Math.exp(-n*r))},pingpong:function(e,t=1){return t-Math.abs(Gn(e,2*t)-t)},smoothstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t))*e*(3-2*e)},smootherstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t))*e*e*(e*(6*e-15)+10)},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},seededRandom:function(e){return void 0!==e&&($n=e%2147483647),$n=16807*$n%2147483647,($n-1)/2147483646},degToRad:function(e){return e*Bn},radToDeg:function(e){return e*Un},isPowerOfTwo:Hn,ceilPowerOfTwo:jn,floorPowerOfTwo:Xn,setQuaternionFromProperEuler:function(e,t,n,r,s){const i=Math.cos,a=Math.sin,o=i(n/2),l=a(n/2),u=i((t+r)/2),c=a((t+r)/2),h=i((t-r)/2),d=a((t-r)/2),p=i((r-t)/2),f=a((r-t)/2);switch(s){case"XYX":e.set(o*c,l*h,l*d,o*u);break;case"YZY":e.set(l*d,o*c,l*h,o*u);break;case"ZXZ":e.set(l*h,l*d,o*c,o*u);break;case"XZX":e.set(o*c,l*f,l*p,o*u);break;case"YXY":e.set(l*p,o*c,l*f,o*u);break;case"ZYZ":e.set(l*f,l*p,o*c,o*u);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+s)}}});class Kn{constructor(e=0,t=0){this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6],this.y=r[1]*t+r[4]*n+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),r=Math.sin(t),s=this.x-e.x,i=this.y-e.y;return this.x=s*n-i*r+e.x,this.y=s*r+i*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}Kn.prototype.isVector2=!0;class Yn{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,r,s,i,a,o,l){const u=this.elements;return u[0]=e,u[1]=r,u[2]=a,u[3]=t,u[4]=s,u[5]=o,u[6]=n,u[7]=i,u[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,r=t.elements,s=this.elements,i=n[0],a=n[3],o=n[6],l=n[1],u=n[4],c=n[7],h=n[2],d=n[5],p=n[8],f=r[0],m=r[3],g=r[6],y=r[1],x=r[4],v=r[7],b=r[2],w=r[5],_=r[8];return s[0]=i*f+a*y+o*b,s[3]=i*m+a*x+o*w,s[6]=i*g+a*v+o*_,s[1]=l*f+u*y+c*b,s[4]=l*m+u*x+c*w,s[7]=l*g+u*v+c*_,s[2]=h*f+d*y+p*b,s[5]=h*m+d*x+p*w,s[8]=h*g+d*v+p*_,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],r=e[2],s=e[3],i=e[4],a=e[5],o=e[6],l=e[7],u=e[8];return t*i*u-t*a*l-n*s*u+n*a*o+r*s*l-r*i*o}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],s=e[3],i=e[4],a=e[5],o=e[6],l=e[7],u=e[8],c=u*i-a*l,h=a*o-u*s,d=l*s-i*o,p=t*c+n*h+r*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);const f=1/p;return e[0]=c*f,e[1]=(r*l-u*n)*f,e[2]=(a*n-r*i)*f,e[3]=h*f,e[4]=(u*t-r*o)*f,e[5]=(r*s-a*t)*f,e[6]=d*f,e[7]=(n*o-l*t)*f,e[8]=(i*t-n*s)*f,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,r,s,i,a){const o=Math.cos(s),l=Math.sin(s);return this.set(n*o,n*l,-n*(o*i+l*a)+i+e,-r*l,r*o,-r*(-l*i+o*a)+a+t,0,0,1),this}scale(e,t){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){const t=Math.cos(e),n=Math.sin(e),r=this.elements,s=r[0],i=r[3],a=r[6],o=r[1],l=r[4],u=r[7];return r[0]=t*s+n*o,r[3]=t*i+n*l,r[6]=t*a+n*u,r[1]=-n*s+t*o,r[4]=-n*i+t*l,r[7]=-n*a+t*u,this}translate(e,t){const n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){const t=this.elements,n=e.elements;for(let e=0;e<9;e++)if(t[e]!==n[e])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return(new this.constructor).fromArray(this.elements)}}let Jn;Yn.prototype.isMatrix3=!0;class Zn{static getDataURL(e){if(/^data:/i.test(e.src))return e.src;if("undefined"==typeof HTMLCanvasElement)return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===Jn&&(Jn=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),Jn.width=e.width,Jn.height=e.height;const n=Jn.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Jn}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}}let Qn=0;class er extends Pn{constructor(e=er.DEFAULT_IMAGE,t=er.DEFAULT_MAPPING,n=de,r=de,s=ve,i=_e,a=$e,o=Te,l=1,u=Yt){super(),Object.defineProperty(this,"id",{value:Qn++}),this.uuid=zn(),this.name="",this.image=e,this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=r,this.magFilter=s,this.minFilter=i,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=o,this.offset=new Kn(0,0),this.repeat=new Kn(1,1),this.center=new Kn(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Yn,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this}toJSON(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const r=this.image;if(void 0===r.uuid&&(r.uuid=zn()),!t&&void 0===e.images[r.uuid]){let t;if(Array.isArray(r)){t=[];for(let e=0,n=r.length;e<n;e++)r[e].isDataTexture?t.push(tr(r[e].image)):t.push(tr(r[e]))}else t=tr(r);e.images[r.uuid]={uuid:r.uuid,url:t}}n.image=r.uuid}return t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==se)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case he:e.x=e.x-Math.floor(e.x);break;case de:e.x=e.x<0?0:1;break;case pe:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case he:e.y=e.y-Math.floor(e.y);break;case de:e.y=e.y<0?0:1;break;case pe:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){!0===e&&this.version++}}function tr(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?Zn.getDataURL(e):e.data?{data:Array.prototype.slice.call(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}er.DEFAULT_IMAGE=void 0,er.DEFAULT_MAPPING=se,er.prototype.isTexture=!0;class nr{constructor(e=0,t=0,n=0,r=1){this.x=e,this.y=t,this.z=n,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,r){return this.x=e,this.y=t,this.z=n,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,r=this.z,s=this.w,i=e.elements;return this.x=i[0]*t+i[4]*n+i[8]*r+i[12]*s,this.y=i[1]*t+i[5]*n+i[9]*r+i[13]*s,this.z=i[2]*t+i[6]*n+i[10]*r+i[14]*s,this.w=i[3]*t+i[7]*n+i[11]*r+i[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,r,s;const i=.01,a=.1,o=e.elements,l=o[0],u=o[4],c=o[8],h=o[1],d=o[5],p=o[9],f=o[2],m=o[6],g=o[10];if(Math.abs(u-h)<i&&Math.abs(c-f)<i&&Math.abs(p-m)<i){if(Math.abs(u+h)<a&&Math.abs(c+f)<a&&Math.abs(p+m)<a&&Math.abs(l+d+g-3)<a)return this.set(1,0,0,0),this;t=Math.PI;const e=(l+1)/2,o=(d+1)/2,y=(g+1)/2,x=(u+h)/4,v=(c+f)/4,b=(p+m)/4;return e>o&&e>y?e<i?(n=0,r=.707106781,s=.707106781):(n=Math.sqrt(e),r=x/n,s=v/n):o>y?o<i?(n=.707106781,r=0,s=.707106781):(r=Math.sqrt(o),n=x/r,s=b/r):y<i?(n=.707106781,r=.707106781,s=0):(s=Math.sqrt(y),n=v/s,r=b/s),this.set(n,r,s,t),this}let y=Math.sqrt((m-p)*(m-p)+(c-f)*(c-f)+(h-u)*(h-u));return Math.abs(y)<.001&&(y=1),this.x=(m-p)/y,this.y=(c-f)/y,this.z=(h-u)/y,this.w=Math.acos((l+d+g-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}nr.prototype.isVector4=!0;class rr extends Pn{constructor(e,t,n={}){super(),this.width=e,this.height=t,this.depth=1,this.scissor=new nr(0,0,e,t),this.scissorTest=!1,this.viewport=new nr(0,0,e,t),this.texture=new er(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.image={width:e,height:t,depth:1},this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.internalFormat=void 0!==n.internalFormat?n.internalFormat:null,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:ve,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null}setTexture(e){e.image={width:this.width,height:this.height,depth:this.depth},this.texture=e}setSize(e,t,n=1){this.width===e&&this.height===t&&this.depth===n||(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return(new this.constructor).copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.image={...this.texture.image},this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}rr.prototype.isWebGLRenderTarget=!0;class sr extends rr{constructor(e,t,n){super(e,t);const r=this.texture;this.texture=[];for(let e=0;e<n;e++)this.texture[e]=r.clone()}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let r=0,s=this.texture.length;r<s;r++)this.texture[r].image.width=e,this.texture[r].image.height=t,this.texture[r].image.depth=n;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone();return this}}sr.prototype.isWebGLMultipleRenderTargets=!0;class ir extends rr{constructor(e,t,n){super(e,t,n),this.samples=4}copy(e){return super.copy.call(this,e),this.samples=e.samples,this}}ir.prototype.isWebGLMultisampleRenderTarget=!0;class ar{constructor(e=0,t=0,n=0,r=1){this._x=e,this._y=t,this._z=n,this._w=r}static slerp(e,t,n,r){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(e,t,r)}static slerpFlat(e,t,n,r,s,i,a){let o=n[r+0],l=n[r+1],u=n[r+2],c=n[r+3];const h=s[i+0],d=s[i+1],p=s[i+2],f=s[i+3];if(0===a)return e[t+0]=o,e[t+1]=l,e[t+2]=u,void(e[t+3]=c);if(1===a)return e[t+0]=h,e[t+1]=d,e[t+2]=p,void(e[t+3]=f);if(c!==f||o!==h||l!==d||u!==p){let e=1-a;const t=o*h+l*d+u*p+c*f,n=t>=0?1:-1,r=1-t*t;if(r>Number.EPSILON){const s=Math.sqrt(r),i=Math.atan2(s,t*n);e=Math.sin(e*i)/s,a=Math.sin(a*i)/s}const s=a*n;if(o=o*e+h*s,l=l*e+d*s,u=u*e+p*s,c=c*e+f*s,e===1-a){const e=1/Math.sqrt(o*o+l*l+u*u+c*c);o*=e,l*=e,u*=e,c*=e}}e[t]=o,e[t+1]=l,e[t+2]=u,e[t+3]=c}static multiplyQuaternionsFlat(e,t,n,r,s,i){const a=n[r],o=n[r+1],l=n[r+2],u=n[r+3],c=s[i],h=s[i+1],d=s[i+2],p=s[i+3];return e[t]=a*p+u*c+o*d-l*h,e[t+1]=o*p+u*h+l*c-a*d,e[t+2]=l*p+u*d+a*h-o*c,e[t+3]=u*p-a*c-o*h-l*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!e||!e.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=e._x,r=e._y,s=e._z,i=e._order,a=Math.cos,o=Math.sin,l=a(n/2),u=a(r/2),c=a(s/2),h=o(n/2),d=o(r/2),p=o(s/2);switch(i){case"XYZ":this._x=h*u*c+l*d*p,this._y=l*d*c-h*u*p,this._z=l*u*p+h*d*c,this._w=l*u*c-h*d*p;break;case"YXZ":this._x=h*u*c+l*d*p,this._y=l*d*c-h*u*p,this._z=l*u*p-h*d*c,this._w=l*u*c+h*d*p;break;case"ZXY":this._x=h*u*c-l*d*p,this._y=l*d*c+h*u*p,this._z=l*u*p+h*d*c,this._w=l*u*c-h*d*p;break;case"ZYX":this._x=h*u*c-l*d*p,this._y=l*d*c+h*u*p,this._z=l*u*p-h*d*c,this._w=l*u*c+h*d*p;break;case"YZX":this._x=h*u*c+l*d*p,this._y=l*d*c+h*u*p,this._z=l*u*p-h*d*c,this._w=l*u*c-h*d*p;break;case"XZY":this._x=h*u*c-l*d*p,this._y=l*d*c-h*u*p,this._z=l*u*p+h*d*c,this._w=l*u*c+h*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+i)}return!1!==t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,r=Math.sin(n);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],r=t[4],s=t[8],i=t[1],a=t[5],o=t[9],l=t[2],u=t[6],c=t[10],h=n+a+c;if(h>0){const e=.5/Math.sqrt(h+1);this._w=.25/e,this._x=(u-o)*e,this._y=(s-l)*e,this._z=(i-r)*e}else if(n>a&&n>c){const e=2*Math.sqrt(1+n-a-c);this._w=(u-o)/e,this._x=.25*e,this._y=(r+i)/e,this._z=(s+l)/e}else if(a>c){const e=2*Math.sqrt(1+a-n-c);this._w=(s-l)/e,this._x=(r+i)/e,this._y=.25*e,this._z=(o+u)/e}else{const e=2*Math.sqrt(1+c-n-a);this._w=(i-r)/e,this._x=(s+l)/e,this._y=(o+u)/e,this._z=.25*e}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Vn(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(0===n)return this;const r=Math.min(1,t/n);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,r=e._y,s=e._z,i=e._w,a=t._x,o=t._y,l=t._z,u=t._w;return this._x=n*u+i*a+r*l-s*o,this._y=r*u+i*o+s*a-n*l,this._z=s*u+i*l+n*o-r*a,this._w=i*u-n*a-r*o-s*l,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);const n=this._x,r=this._y,s=this._z,i=this._w;let a=i*e._w+n*e._x+r*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=i,this._x=n,this._y=r,this._z=s,this;const o=1-a*a;if(o<=Number.EPSILON){const e=1-t;return this._w=e*i+t*this._w,this._x=e*n+t*this._x,this._y=e*r+t*this._y,this._z=e*s+t*this._z,this.normalize(),this._onChangeCallback(),this}const l=Math.sqrt(o),u=Math.atan2(l,a),c=Math.sin((1-t)*u)/l,h=Math.sin(t*u)/l;return this._w=i*c+this._w*h,this._x=n*c+this._x*h,this._y=r*c+this._y*h,this._z=s*c+this._z*h,this._onChangeCallback(),this}slerpQuaternions(e,t,n){this.copy(e).slerp(t,n)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}ar.prototype.isQuaternion=!0;class or{constructor(e=0,t=0,n=0){this.x=e,this.y=t,this.z=n}set(e,t,n){return void 0===n&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(ur.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(ur.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*r,this.y=s[1]*t+s[4]*n+s[7]*r,this.z=s[2]*t+s[5]*n+s[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,r=this.z,s=e.elements,i=1/(s[3]*t+s[7]*n+s[11]*r+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*r+s[12])*i,this.y=(s[1]*t+s[5]*n+s[9]*r+s[13])*i,this.z=(s[2]*t+s[6]*n+s[10]*r+s[14])*i,this}applyQuaternion(e){const t=this.x,n=this.y,r=this.z,s=e.x,i=e.y,a=e.z,o=e.w,l=o*t+i*r-a*n,u=o*n+a*t-s*r,c=o*r+s*n-i*t,h=-s*t-i*n-a*r;return this.x=l*o+h*-s+u*-a-c*-i,this.y=u*o+h*-i+c*-s-l*-a,this.z=c*o+h*-a+l*-i-u*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*r,this.y=s[1]*t+s[5]*n+s[9]*r,this.z=s[2]*t+s[6]*n+s[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e,t){return void 0!==t?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,r=e.y,s=e.z,i=t.x,a=t.y,o=t.z;return this.x=r*o-s*a,this.y=s*i-n*o,this.z=n*a-r*i,this}projectOnVector(e){const t=e.lengthSq();if(0===t)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return lr.copy(this).projectOnVector(e),this.sub(lr)}reflect(e){return this.sub(lr.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Vn(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,r=this.z-e.z;return t*t+n*n+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const r=Math.sin(t)*e;return this.x=r*Math.sin(n),this.y=Math.cos(t)*e,this.z=r*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}or.prototype.isVector3=!0;const lr=new or,ur=new ar;class cr{constructor(e=new or(1/0,1/0,1/0),t=new or(-1/0,-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,n=1/0,r=1/0,s=-1/0,i=-1/0,a=-1/0;for(let o=0,l=e.length;o<l;o+=3){const l=e[o],u=e[o+1],c=e[o+2];l<t&&(t=l),u<n&&(n=u),c<r&&(r=c),l>s&&(s=l),u>i&&(i=u),c>a&&(a=c)}return this.min.set(t,n,r),this.max.set(s,i,a),this}setFromBufferAttribute(e){let t=1/0,n=1/0,r=1/0,s=-1/0,i=-1/0,a=-1/0;for(let o=0,l=e.count;o<l;o++){const l=e.getX(o),u=e.getY(o),c=e.getZ(o);l<t&&(t=l),u<n&&(n=u),c<r&&(r=c),l>s&&(s=l),u>i&&(i=u),c>a&&(a=c)}return this.min.set(t,n,r),this.max.set(s,i,a),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=dr.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e){return this.makeEmpty(),this.expandByObject(e)}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e){e.updateWorldMatrix(!1,!1);const t=e.geometry;void 0!==t&&(null===t.boundingBox&&t.computeBoundingBox(),pr.copy(t.boundingBox),pr.applyMatrix4(e.matrixWorld),this.union(pr));const n=e.children;for(let e=0,t=n.length;e<t;e++)this.expandByObject(n[e]);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,dr),dr.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(br),wr.subVectors(this.max,br),fr.subVectors(e.a,br),mr.subVectors(e.b,br),gr.subVectors(e.c,br),yr.subVectors(mr,fr),xr.subVectors(gr,mr),vr.subVectors(fr,gr);let t=[0,-yr.z,yr.y,0,-xr.z,xr.y,0,-vr.z,vr.y,yr.z,0,-yr.x,xr.z,0,-xr.x,vr.z,0,-vr.x,-yr.y,yr.x,0,-xr.y,xr.x,0,-vr.y,vr.x,0];return!!Tr(t,fr,mr,gr,wr)&&(t=[1,0,0,0,1,0,0,0,1],!!Tr(t,fr,mr,gr,wr)&&(_r.crossVectors(yr,xr),t=[_r.x,_r.y,_r.z],Tr(t,fr,mr,gr,wr)))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return dr.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=.5*this.getSize(dr).length(),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(hr[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),hr[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),hr[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),hr[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),hr[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),hr[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),hr[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),hr[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(hr)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}cr.prototype.isBox3=!0;const hr=[new or,new or,new or,new or,new or,new or,new or,new or],dr=new or,pr=new cr,fr=new or,mr=new or,gr=new or,yr=new or,xr=new or,vr=new or,br=new or,wr=new or,_r=new or,Sr=new or;function Tr(e,t,n,r,s){for(let i=0,a=e.length-3;i<=a;i+=3){Sr.fromArray(e,i);const a=s.x*Math.abs(Sr.x)+s.y*Math.abs(Sr.y)+s.z*Math.abs(Sr.z),o=t.dot(Sr),l=n.dot(Sr),u=r.dot(Sr);if(Math.max(-Math.max(o,l,u),Math.min(o,l,u))>a)return!1}return!0}const Er=new cr,Mr=new or,Cr=new or,Ar=new or;class Ir{constructor(e=new or,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;void 0!==t?n.copy(t):Er.setFromPoints(e).getCenter(n);let r=0;for(let t=0,s=e.length;t<s;t++)r=Math.max(r,n.distanceToSquared(e[t]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){Ar.subVectors(e,this.center);const t=Ar.lengthSq();if(t>this.radius*this.radius){const e=Math.sqrt(t),n=.5*(e-this.radius);this.center.add(Ar.multiplyScalar(n/e)),this.radius+=n}return this}union(e){return Cr.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(Mr.copy(e.center).add(Cr)),this.expandByPoint(Mr.copy(e.center).sub(Cr)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const Rr=new or,kr=new or,Nr=new or,Lr=new or,Dr=new or,Or=new or,Pr=new or;class Fr{constructor(e=new or,t=new or(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Rr)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Rr.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Rr.copy(this.direction).multiplyScalar(t).add(this.origin),Rr.distanceToSquared(e))}distanceSqToSegment(e,t,n,r){kr.copy(e).add(t).multiplyScalar(.5),Nr.copy(t).sub(e).normalize(),Lr.copy(this.origin).sub(kr);const s=.5*e.distanceTo(t),i=-this.direction.dot(Nr),a=Lr.dot(this.direction),o=-Lr.dot(Nr),l=Lr.lengthSq(),u=Math.abs(1-i*i);let c,h,d,p;if(u>0)if(c=i*o-a,h=i*a-o,p=s*u,c>=0)if(h>=-p)if(h<=p){const e=1/u;c*=e,h*=e,d=c*(c+i*h+2*a)+h*(i*c+h+2*o)+l}else h=s,c=Math.max(0,-(i*h+a)),d=-c*c+h*(h+2*o)+l;else h=-s,c=Math.max(0,-(i*h+a)),d=-c*c+h*(h+2*o)+l;else h<=-p?(c=Math.max(0,-(-i*s+a)),h=c>0?-s:Math.min(Math.max(-s,-o),s),d=-c*c+h*(h+2*o)+l):h<=p?(c=0,h=Math.min(Math.max(-s,-o),s),d=h*(h+2*o)+l):(c=Math.max(0,-(i*s+a)),h=c>0?s:Math.min(Math.max(-s,-o),s),d=-c*c+h*(h+2*o)+l);else h=i>0?-s:s,c=Math.max(0,-(i*h+a)),d=-c*c+h*(h+2*o)+l;return n&&n.copy(this.direction).multiplyScalar(c).add(this.origin),r&&r.copy(Nr).multiplyScalar(h).add(kr),d}intersectSphere(e,t){Rr.subVectors(e.center,this.origin);const n=Rr.dot(this.direction),r=Rr.dot(Rr)-n*n,s=e.radius*e.radius;if(r>s)return null;const i=Math.sqrt(s-r),a=n-i,o=n+i;return a<0&&o<0?null:a<0?this.at(o,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return null===n?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,r,s,i,a,o;const l=1/this.direction.x,u=1/this.direction.y,c=1/this.direction.z,h=this.origin;return l>=0?(n=(e.min.x-h.x)*l,r=(e.max.x-h.x)*l):(n=(e.max.x-h.x)*l,r=(e.min.x-h.x)*l),u>=0?(s=(e.min.y-h.y)*u,i=(e.max.y-h.y)*u):(s=(e.max.y-h.y)*u,i=(e.min.y-h.y)*u),n>i||s>r?null:((s>n||n!=n)&&(n=s),(i<r||r!=r)&&(r=i),c>=0?(a=(e.min.z-h.z)*c,o=(e.max.z-h.z)*c):(a=(e.max.z-h.z)*c,o=(e.min.z-h.z)*c),n>o||a>r?null:((a>n||n!=n)&&(n=a),(o<r||r!=r)&&(r=o),r<0?null:this.at(n>=0?n:r,t)))}intersectsBox(e){return null!==this.intersectBox(e,Rr)}intersectTriangle(e,t,n,r,s){Dr.subVectors(t,e),Or.subVectors(n,e),Pr.crossVectors(Dr,Or);let i,a=this.direction.dot(Pr);if(a>0){if(r)return null;i=1}else{if(!(a<0))return null;i=-1,a=-a}Lr.subVectors(this.origin,e);const o=i*this.direction.dot(Or.crossVectors(Lr,Or));if(o<0)return null;const l=i*this.direction.dot(Dr.cross(Lr));if(l<0)return null;if(o+l>a)return null;const u=-i*Lr.dot(Pr);return u<0?null:this.at(u/a,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class $r{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,r,s,i,a,o,l,u,c,h,d,p,f,m){const g=this.elements;return g[0]=e,g[4]=t,g[8]=n,g[12]=r,g[1]=s,g[5]=i,g[9]=a,g[13]=o,g[2]=l,g[6]=u,g[10]=c,g[14]=h,g[3]=d,g[7]=p,g[11]=f,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new $r).fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,r=1/Br.setFromMatrixColumn(e,0).length(),s=1/Br.setFromMatrixColumn(e,1).length(),i=1/Br.setFromMatrixColumn(e,2).length();return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*i,t[9]=n[9]*i,t[10]=n[10]*i,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements,n=e.x,r=e.y,s=e.z,i=Math.cos(n),a=Math.sin(n),o=Math.cos(r),l=Math.sin(r),u=Math.cos(s),c=Math.sin(s);if("XYZ"===e.order){const e=i*u,n=i*c,r=a*u,s=a*c;t[0]=o*u,t[4]=-o*c,t[8]=l,t[1]=n+r*l,t[5]=e-s*l,t[9]=-a*o,t[2]=s-e*l,t[6]=r+n*l,t[10]=i*o}else if("YXZ"===e.order){const e=o*u,n=o*c,r=l*u,s=l*c;t[0]=e+s*a,t[4]=r*a-n,t[8]=i*l,t[1]=i*c,t[5]=i*u,t[9]=-a,t[2]=n*a-r,t[6]=s+e*a,t[10]=i*o}else if("ZXY"===e.order){const e=o*u,n=o*c,r=l*u,s=l*c;t[0]=e-s*a,t[4]=-i*c,t[8]=r+n*a,t[1]=n+r*a,t[5]=i*u,t[9]=s-e*a,t[2]=-i*l,t[6]=a,t[10]=i*o}else if("ZYX"===e.order){const e=i*u,n=i*c,r=a*u,s=a*c;t[0]=o*u,t[4]=r*l-n,t[8]=e*l+s,t[1]=o*c,t[5]=s*l+e,t[9]=n*l-r,t[2]=-l,t[6]=a*o,t[10]=i*o}else if("YZX"===e.order){const e=i*o,n=i*l,r=a*o,s=a*l;t[0]=o*u,t[4]=s-e*c,t[8]=r*c+n,t[1]=c,t[5]=i*u,t[9]=-a*u,t[2]=-l*u,t[6]=n*c+r,t[10]=e-s*c}else if("XZY"===e.order){const e=i*o,n=i*l,r=a*o,s=a*l;t[0]=o*u,t[4]=-c,t[8]=l*u,t[1]=e*c+s,t[5]=i*u,t[9]=n*c-r,t[2]=r*c-n,t[6]=a*u,t[10]=s*c+e}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(zr,e,Vr)}lookAt(e,t,n){const r=this.elements;return Hr.subVectors(e,t),0===Hr.lengthSq()&&(Hr.z=1),Hr.normalize(),Gr.crossVectors(n,Hr),0===Gr.lengthSq()&&(1===Math.abs(n.z)?Hr.x+=1e-4:Hr.z+=1e-4,Hr.normalize(),Gr.crossVectors(n,Hr)),Gr.normalize(),Wr.crossVectors(Hr,Gr),r[0]=Gr.x,r[4]=Wr.x,r[8]=Hr.x,r[1]=Gr.y,r[5]=Wr.y,r[9]=Hr.y,r[2]=Gr.z,r[6]=Wr.z,r[10]=Hr.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,r=t.elements,s=this.elements,i=n[0],a=n[4],o=n[8],l=n[12],u=n[1],c=n[5],h=n[9],d=n[13],p=n[2],f=n[6],m=n[10],g=n[14],y=n[3],x=n[7],v=n[11],b=n[15],w=r[0],_=r[4],S=r[8],T=r[12],E=r[1],M=r[5],C=r[9],A=r[13],I=r[2],R=r[6],k=r[10],N=r[14],L=r[3],D=r[7],O=r[11],P=r[15];return s[0]=i*w+a*E+o*I+l*L,s[4]=i*_+a*M+o*R+l*D,s[8]=i*S+a*C+o*k+l*O,s[12]=i*T+a*A+o*N+l*P,s[1]=u*w+c*E+h*I+d*L,s[5]=u*_+c*M+h*R+d*D,s[9]=u*S+c*C+h*k+d*O,s[13]=u*T+c*A+h*N+d*P,s[2]=p*w+f*E+m*I+g*L,s[6]=p*_+f*M+m*R+g*D,s[10]=p*S+f*C+m*k+g*O,s[14]=p*T+f*A+m*N+g*P,s[3]=y*w+x*E+v*I+b*L,s[7]=y*_+x*M+v*R+b*D,s[11]=y*S+x*C+v*k+b*O,s[15]=y*T+x*A+v*N+b*P,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],r=e[8],s=e[12],i=e[1],a=e[5],o=e[9],l=e[13],u=e[2],c=e[6],h=e[10],d=e[14];return e[3]*(+s*o*c-r*l*c-s*a*h+n*l*h+r*a*d-n*o*d)+e[7]*(+t*o*d-t*l*h+s*i*h-r*i*d+r*l*u-s*o*u)+e[11]*(+t*l*c-t*a*d-s*i*c+n*i*d+s*a*u-n*l*u)+e[15]*(-r*a*u-t*o*c+t*a*h+r*i*c-n*i*h+n*o*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],s=e[3],i=e[4],a=e[5],o=e[6],l=e[7],u=e[8],c=e[9],h=e[10],d=e[11],p=e[12],f=e[13],m=e[14],g=e[15],y=c*m*l-f*h*l+f*o*d-a*m*d-c*o*g+a*h*g,x=p*h*l-u*m*l-p*o*d+i*m*d+u*o*g-i*h*g,v=u*f*l-p*c*l+p*a*d-i*f*d-u*a*g+i*c*g,b=p*c*o-u*f*o-p*a*h+i*f*h+u*a*m-i*c*m,w=t*y+n*x+r*v+s*b;if(0===w)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const _=1/w;return e[0]=y*_,e[1]=(f*h*s-c*m*s-f*r*d+n*m*d+c*r*g-n*h*g)*_,e[2]=(a*m*s-f*o*s+f*r*l-n*m*l-a*r*g+n*o*g)*_,e[3]=(c*o*s-a*h*s-c*r*l+n*h*l+a*r*d-n*o*d)*_,e[4]=x*_,e[5]=(u*m*s-p*h*s+p*r*d-t*m*d-u*r*g+t*h*g)*_,e[6]=(p*o*s-i*m*s-p*r*l+t*m*l+i*r*g-t*o*g)*_,e[7]=(i*h*s-u*o*s+u*r*l-t*h*l-i*r*d+t*o*d)*_,e[8]=v*_,e[9]=(p*c*s-u*f*s-p*n*d+t*f*d+u*n*g-t*c*g)*_,e[10]=(i*f*s-p*a*s+p*n*l-t*f*l-i*n*g+t*a*g)*_,e[11]=(u*a*s-i*c*s-u*n*l+t*c*l+i*n*d-t*a*d)*_,e[12]=b*_,e[13]=(u*f*r-p*c*r+p*n*h-t*f*h-u*n*m+t*c*m)*_,e[14]=(p*a*r-i*f*r-p*n*o+t*f*o+i*n*m-t*a*m)*_,e[15]=(i*c*r-u*a*r+u*n*o-t*c*o-i*n*h+t*a*h)*_,this}scale(e){const t=this.elements,n=e.x,r=e.y,s=e.z;return t[0]*=n,t[4]*=r,t[8]*=s,t[1]*=n,t[5]*=r,t[9]*=s,t[2]*=n,t[6]*=r,t[10]*=s,t[3]*=n,t[7]*=r,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,r))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),r=Math.sin(t),s=1-n,i=e.x,a=e.y,o=e.z,l=s*i,u=s*a;return this.set(l*i+n,l*a-r*o,l*o+r*a,0,l*a+r*o,u*a+n,u*o-r*i,0,l*o-r*a,u*o+r*i,s*o*o+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,r,s,i){return this.set(1,n,s,0,e,1,i,0,t,r,1,0,0,0,0,1),this}compose(e,t,n){const r=this.elements,s=t._x,i=t._y,a=t._z,o=t._w,l=s+s,u=i+i,c=a+a,h=s*l,d=s*u,p=s*c,f=i*u,m=i*c,g=a*c,y=o*l,x=o*u,v=o*c,b=n.x,w=n.y,_=n.z;return r[0]=(1-(f+g))*b,r[1]=(d+v)*b,r[2]=(p-x)*b,r[3]=0,r[4]=(d-v)*w,r[5]=(1-(h+g))*w,r[6]=(m+y)*w,r[7]=0,r[8]=(p+x)*_,r[9]=(m-y)*_,r[10]=(1-(h+f))*_,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,n){const r=this.elements;let s=Br.set(r[0],r[1],r[2]).length();const i=Br.set(r[4],r[5],r[6]).length(),a=Br.set(r[8],r[9],r[10]).length();this.determinant()<0&&(s=-s),e.x=r[12],e.y=r[13],e.z=r[14],Ur.copy(this);const o=1/s,l=1/i,u=1/a;return Ur.elements[0]*=o,Ur.elements[1]*=o,Ur.elements[2]*=o,Ur.elements[4]*=l,Ur.elements[5]*=l,Ur.elements[6]*=l,Ur.elements[8]*=u,Ur.elements[9]*=u,Ur.elements[10]*=u,t.setFromRotationMatrix(Ur),n.x=s,n.y=i,n.z=a,this}makePerspective(e,t,n,r,s,i){void 0===i&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const a=this.elements,o=2*s/(t-e),l=2*s/(n-r),u=(t+e)/(t-e),c=(n+r)/(n-r),h=-(i+s)/(i-s),d=-2*i*s/(i-s);return a[0]=o,a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=l,a[9]=c,a[13]=0,a[2]=0,a[6]=0,a[10]=h,a[14]=d,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(e,t,n,r,s,i){const a=this.elements,o=1/(t-e),l=1/(n-r),u=1/(i-s),c=(t+e)*o,h=(n+r)*l,d=(i+s)*u;return a[0]=2*o,a[4]=0,a[8]=0,a[12]=-c,a[1]=0,a[5]=2*l,a[9]=0,a[13]=-h,a[2]=0,a[6]=0,a[10]=-2*u,a[14]=-d,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let e=0;e<16;e++)if(t[e]!==n[e])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}$r.prototype.isMatrix4=!0;const Br=new or,Ur=new $r,zr=new or(0,0,0),Vr=new or(1,1,1),Gr=new or,Wr=new or,Hr=new or,jr=new $r,Xr=new ar;class qr{constructor(e=0,t=0,n=0,r=qr.DefaultOrder){this._x=e,this._y=t,this._z=n,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,r=this._order){return this._x=e,this._y=t,this._z=n,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const r=e.elements,s=r[0],i=r[4],a=r[8],o=r[1],l=r[5],u=r[9],c=r[2],h=r[6],d=r[10];switch(t){case"XYZ":this._y=Math.asin(Vn(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,d),this._z=Math.atan2(-i,s)):(this._x=Math.atan2(h,l),this._z=0);break;case"YXZ":this._x=Math.asin(-Vn(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,d),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-c,s),this._z=0);break;case"ZXY":this._x=Math.asin(Vn(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(-c,d),this._z=Math.atan2(-i,l)):(this._y=0,this._z=Math.atan2(o,s));break;case"ZYX":this._y=Math.asin(-Vn(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(h,d),this._z=Math.atan2(o,s)):(this._x=0,this._z=Math.atan2(-i,l));break;case"YZX":this._z=Math.asin(Vn(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-u,l),this._y=Math.atan2(-c,s)):(this._x=0,this._y=Math.atan2(a,d));break;case"XZY":this._z=Math.asin(-Vn(i,-1,1)),Math.abs(i)<.9999999?(this._x=Math.atan2(h,l),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-u,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!0===n&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return jr.makeRotationFromQuaternion(e),this.setFromRotationMatrix(jr,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Xr.setFromEuler(this),this.setFromQuaternion(Xr,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}toVector3(e){return e?e.set(this._x,this._y,this._z):new or(this._x,this._y,this._z)}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}qr.prototype.isEuler=!0,qr.DefaultOrder="XYZ",qr.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Kr{constructor(){this.mask=1}set(e){this.mask=1<<e|0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return 0!=(this.mask&e.mask)}}let Yr=0;const Jr=new or,Zr=new ar,Qr=new $r,es=new or,ts=new or,ns=new or,rs=new ar,ss=new or(1,0,0),is=new or(0,1,0),as=new or(0,0,1),os={type:"added"},ls={type:"removed"};class us extends Pn{constructor(){super(),Object.defineProperty(this,"id",{value:Yr++}),this.uuid=zn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=us.DefaultUp.clone();const e=new or,t=new qr,n=new ar,r=new or(1,1,1);t._onChange((function(){n.setFromEuler(t,!1)})),n._onChange((function(){t.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new $r},normalMatrix:{value:new Yn}}),this.matrix=new $r,this.matrixWorld=new $r,this.matrixAutoUpdate=us.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Kr,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Zr.setFromAxisAngle(e,t),this.quaternion.multiply(Zr),this}rotateOnWorldAxis(e,t){return Zr.setFromAxisAngle(e,t),this.quaternion.premultiply(Zr),this}rotateX(e){return this.rotateOnAxis(ss,e)}rotateY(e){return this.rotateOnAxis(is,e)}rotateZ(e){return this.rotateOnAxis(as,e)}translateOnAxis(e,t){return Jr.copy(e).applyQuaternion(this.quaternion),this.position.add(Jr.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(ss,e)}translateY(e){return this.translateOnAxis(is,e)}translateZ(e){return this.translateOnAxis(as,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(Qr.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?es.copy(e):es.set(e,t,n);const r=this.parent;this.updateWorldMatrix(!0,!1),ts.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Qr.lookAt(ts,es,this.up):Qr.lookAt(es,ts,this.up),this.quaternion.setFromRotationMatrix(Qr),r&&(Qr.extractRotation(r.matrixWorld),Zr.setFromRotationMatrix(Qr),this.quaternion.premultiply(Zr.invert()))}add(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(os)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}const t=this.children.indexOf(e);return-1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(ls)),this}removeFromParent(){const e=this.parent;return null!==e&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(ls)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),Qr.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),Qr.multiply(e.parent.matrixWorld)),e.applyMatrix4(Qr),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,r=this.children.length;n<r;n++){const r=this.children[n].getObjectByProperty(e,t);if(void 0!==r)return r}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ts,e,ns),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ts,rs,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverse(e)}traverseVisible(e){if(!1===this.visible)return;e(this);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(!0===e&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){const e=this.children;for(let t=0,n=e.length;t<n;t++)e[t].updateWorldMatrix(!1,!0)}}toJSON(e){const t=void 0===e||"string"==typeof e,n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const r={};function s(t,n){return void 0===t[n.uuid]&&(t[n.uuid]=n.toJSON(e)),n.uuid}if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),!0===this.castShadow&&(r.castShadow=!0),!0===this.receiveShadow&&(r.receiveShadow=!0),!1===this.visible&&(r.visible=!1),!1===this.frustumCulled&&(r.frustumCulled=!1),0!==this.renderOrder&&(r.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(r.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=s(e.geometries,this.geometry);const t=this.geometry.parameters;if(void 0!==t&&void 0!==t.shapes){const n=t.shapes;if(Array.isArray(n))for(let t=0,r=n.length;t<r;t++){const r=n[t];s(e.shapes,r)}else s(e.shapes,n)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(s(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const t=[];for(let n=0,r=this.material.length;n<r;n++)t.push(s(e.materials,this.material[n]));r.material=t}else r.material=s(e.materials,this.material);if(this.children.length>0){r.children=[];for(let t=0;t<this.children.length;t++)r.children.push(this.children[t].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let t=0;t<this.animations.length;t++){const n=this.animations[t];r.animations.push(s(e.animations,n))}}if(t){const t=i(e.geometries),r=i(e.materials),s=i(e.textures),a=i(e.images),o=i(e.shapes),l=i(e.skeletons),u=i(e.animations);t.length>0&&(n.geometries=t),r.length>0&&(n.materials=r),s.length>0&&(n.textures=s),a.length>0&&(n.images=a),o.length>0&&(n.shapes=o),l.length>0&&(n.skeletons=l),u.length>0&&(n.animations=u)}return n.object=r,n;function i(e){const t=[];for(const n in e){const r=e[n];delete r.metadata,t.push(r)}return t}}clone(e){return(new this.constructor).copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let t=0;t<e.children.length;t++){const n=e.children[t];this.add(n.clone())}return this}}us.DefaultUp=new or(0,1,0),us.DefaultMatrixAutoUpdate=!0,us.prototype.isObject3D=!0;const cs=new or,hs=new or,ds=new or,ps=new or,fs=new or,ms=new or,gs=new or,ys=new or,xs=new or,vs=new or;class bs{constructor(e=new or,t=new or,n=new or){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,r){r.subVectors(n,t),cs.subVectors(e,t),r.cross(cs);const s=r.lengthSq();return s>0?r.multiplyScalar(1/Math.sqrt(s)):r.set(0,0,0)}static getBarycoord(e,t,n,r,s){cs.subVectors(r,t),hs.subVectors(n,t),ds.subVectors(e,t);const i=cs.dot(cs),a=cs.dot(hs),o=cs.dot(ds),l=hs.dot(hs),u=hs.dot(ds),c=i*l-a*a;if(0===c)return s.set(-2,-1,-1);const h=1/c,d=(l*o-a*u)*h,p=(i*u-a*o)*h;return s.set(1-d-p,p,d)}static containsPoint(e,t,n,r){return this.getBarycoord(e,t,n,r,ps),ps.x>=0&&ps.y>=0&&ps.x+ps.y<=1}static getUV(e,t,n,r,s,i,a,o){return this.getBarycoord(e,t,n,r,ps),o.set(0,0),o.addScaledVector(s,ps.x),o.addScaledVector(i,ps.y),o.addScaledVector(a,ps.z),o}static isFrontFacing(e,t,n,r){return cs.subVectors(n,t),hs.subVectors(e,t),cs.cross(hs).dot(r)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,r){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[r]),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return cs.subVectors(this.c,this.b),hs.subVectors(this.a,this.b),.5*cs.cross(hs).length()}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return bs.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return bs.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,r,s){return bs.getUV(e,this.a,this.b,this.c,t,n,r,s)}containsPoint(e){return bs.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return bs.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,r=this.b,s=this.c;let i,a;fs.subVectors(r,n),ms.subVectors(s,n),ys.subVectors(e,n);const o=fs.dot(ys),l=ms.dot(ys);if(o<=0&&l<=0)return t.copy(n);xs.subVectors(e,r);const u=fs.dot(xs),c=ms.dot(xs);if(u>=0&&c<=u)return t.copy(r);const h=o*c-u*l;if(h<=0&&o>=0&&u<=0)return i=o/(o-u),t.copy(n).addScaledVector(fs,i);vs.subVectors(e,s);const d=fs.dot(vs),p=ms.dot(vs);if(p>=0&&d<=p)return t.copy(s);const f=d*l-o*p;if(f<=0&&l>=0&&p<=0)return a=l/(l-p),t.copy(n).addScaledVector(ms,a);const m=u*p-d*c;if(m<=0&&c-u>=0&&d-p>=0)return gs.subVectors(s,r),a=(c-u)/(c-u+(d-p)),t.copy(r).addScaledVector(gs,a);const g=1/(m+f+h);return i=f*g,a=h*g,t.copy(n).addScaledVector(fs,i).addScaledVector(ms,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let ws=0;class _s extends Pn{constructor(){super(),Object.defineProperty(this,"id",{value:ws++}),this.uuid=zn(),this.name="",this.type="Material",this.fog=!0,this.blending=b,this.side=f,this.vertexColors=!1,this.opacity=1,this.format=$e,this.transparent=!1,this.blendSrc=D,this.blendDst=O,this.blendEquation=E,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=W,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Tn,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=cn,this.stencilZFail=cn,this.stencilZPass=cn,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(void 0!==e)for(const t in e){const n=e[t];if(void 0===n){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if("shading"===t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===y;continue}const r=this[t];void 0!==r?r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[t]=n:console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.")}}toJSON(e){const t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function r(e){const t=[];for(const n in e){const r=e[n];delete r.metadata,t.push(r)}return t}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),this.sheenTint&&this.sheenTint.isColor&&(n.sheenTint=this.sheenTint.getHex()),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(n.specularIntensity=this.specularIntensity),this.specularTint&&this.specularTint.isColor&&(n.specularTint=this.specularTint.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularTintMap&&this.specularTintMap.isTexture&&(n.specularTintMap=this.specularTintMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&(n.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationTint&&(n.attenuationTint=this.attenuationTint.getHex()),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==b&&(n.blending=this.blending),this.side!==f&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.format!==$e&&(n.format=this.format),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(n.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(n.flatShading=this.flatShading),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),t){const t=r(e.textures),s=r(e.images);t.length>0&&(n.textures=t),s.length>0&&(n.images=s)}return n}clone(){return(new this.constructor).copy(this)}copy(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.format=e.format,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(null!==t){const e=t.length;n=new Array(e);for(let r=0;r!==e;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}}_s.prototype.isMaterial=!0;const Ss={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Ts={h:0,s:0,l:0},Es={h:0,s:0,l:0};function Ms(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+6*(t-e)*(2/3-n):e}function Cs(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function As(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}class Is{constructor(e,t,n){return void 0===t&&void 0===n?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this}setRGB(e,t,n){return this.r=e,this.g=t,this.b=n,this}setHSL(e,t,n){if(e=Gn(e,1),t=Vn(t,0,1),n=Vn(n,0,1),0===t)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+t):n+t-n*t,s=2*n-r;this.r=Ms(s,r,e+1/3),this.g=Ms(s,r,e),this.b=Ms(s,r,e-1/3)}return this}setStyle(e){function t(t){void 0!==t&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let n;if(n=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let e;const r=n[1],s=n[2];switch(r){case"rgb":case"rgba":if(e=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,t(e[4]),this;if(e=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,t(e[4]),this;break;case"hsl":case"hsla":if(e=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s)){const n=parseFloat(e[1])/360,r=parseInt(e[2],10)/100,s=parseInt(e[3],10)/100;return t(e[4]),this.setHSL(n,r,s)}}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(e)){const e=n[1],t=e.length;if(3===t)return this.r=parseInt(e.charAt(0)+e.charAt(0),16)/255,this.g=parseInt(e.charAt(1)+e.charAt(1),16)/255,this.b=parseInt(e.charAt(2)+e.charAt(2),16)/255,this;if(6===t)return this.r=parseInt(e.charAt(0)+e.charAt(1),16)/255,this.g=parseInt(e.charAt(2)+e.charAt(3),16)/255,this.b=parseInt(e.charAt(4)+e.charAt(5),16)/255,this}return e&&e.length>0?this.setColorName(e):this}setColorName(e){const t=Ss[e.toLowerCase()];return void 0!==t?this.setHex(t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copyGammaToLinear(e,t=2){return this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this}copyLinearToGamma(e,t=2){const n=t>0?1/t:1;return this.r=Math.pow(e.r,n),this.g=Math.pow(e.g,n),this.b=Math.pow(e.b,n),this}convertGammaToLinear(e){return this.copyGammaToLinear(this,e),this}convertLinearToGamma(e){return this.copyLinearToGamma(this,e),this}copySRGBToLinear(e){return this.r=Cs(e.r),this.g=Cs(e.g),this.b=Cs(e.b),this}copyLinearToSRGB(e){return this.r=As(e.r),this.g=As(e.g),this.b=As(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(e){const t=this.r,n=this.g,r=this.b,s=Math.max(t,n,r),i=Math.min(t,n,r);let a,o;const l=(i+s)/2;if(i===s)a=0,o=0;else{const e=s-i;switch(o=l<=.5?e/(s+i):e/(2-s-i),s){case t:a=(n-r)/e+(n<r?6:0);break;case n:a=(r-t)/e+2;break;case r:a=(t-n)/e+4}a/=6}return e.h=a,e.s=o,e.l=l,e}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(e,t,n){return this.getHSL(Ts),Ts.h+=e,Ts.s+=t,Ts.l+=n,this.setHSL(Ts.h,Ts.s,Ts.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(Ts),e.getHSL(Es);const n=Wn(Ts.h,Es.h,t),r=Wn(Ts.s,Es.s,t),s=Wn(Ts.l,Es.l,t);return this.setHSL(n,r,s),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),!0===e.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}Is.NAMES=Ss,Is.prototype.isColor=!0,Is.prototype.r=1,Is.prototype.g=1,Is.prototype.b=1;class Rs extends _s{constructor(e){super(),this.type="MeshBasicMaterial",this.color=new Is(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=K,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}Rs.prototype.isMeshBasicMaterial=!0;const ks=new or,Ns=new Kn;class Ls{constructor(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===n,this.usage=En,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let r=0,s=this.itemSize;r<s;r++)this.array[e+r]=t.array[n+r];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){const t=this.array;let n=0;for(let r=0,s=e.length;r<s;r++){let s=e[r];void 0===s&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",r),s=new Is),t[n++]=s.r,t[n++]=s.g,t[n++]=s.b}return this}copyVector2sArray(e){const t=this.array;let n=0;for(let r=0,s=e.length;r<s;r++){let s=e[r];void 0===s&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),s=new Kn),t[n++]=s.x,t[n++]=s.y}return this}copyVector3sArray(e){const t=this.array;let n=0;for(let r=0,s=e.length;r<s;r++){let s=e[r];void 0===s&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",r),s=new or),t[n++]=s.x,t[n++]=s.y,t[n++]=s.z}return this}copyVector4sArray(e){const t=this.array;let n=0;for(let r=0,s=e.length;r<s;r++){let s=e[r];void 0===s&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",r),s=new nr),t[n++]=s.x,t[n++]=s.y,t[n++]=s.z,t[n++]=s.w}return this}applyMatrix3(e){if(2===this.itemSize)for(let t=0,n=this.count;t<n;t++)Ns.fromBufferAttribute(this,t),Ns.applyMatrix3(e),this.setXY(t,Ns.x,Ns.y);else if(3===this.itemSize)for(let t=0,n=this.count;t<n;t++)ks.fromBufferAttribute(this,t),ks.applyMatrix3(e),this.setXYZ(t,ks.x,ks.y,ks.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)ks.x=this.getX(t),ks.y=this.getY(t),ks.z=this.getZ(t),ks.applyMatrix4(e),this.setXYZ(t,ks.x,ks.y,ks.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)ks.x=this.getX(t),ks.y=this.getY(t),ks.z=this.getZ(t),ks.applyNormalMatrix(e),this.setXYZ(t,ks.x,ks.y,ks.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)ks.x=this.getX(t),ks.y=this.getY(t),ks.z=this.getZ(t),ks.transformDirection(e),this.setXYZ(t,ks.x,ks.y,ks.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this}setXYZW(e,t,n,r,s){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),this.usage!==En&&(e.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(e.updateRange=this.updateRange),e}}Ls.prototype.isBufferAttribute=!0;class Ds extends Ls{constructor(e,t,n){super(new Int8Array(e),t,n)}}class Os extends Ls{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class Ps extends Ls{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class Fs extends Ls{constructor(e,t,n){super(new Int16Array(e),t,n)}}class $s extends Ls{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class Bs extends Ls{constructor(e,t,n){super(new Int32Array(e),t,n)}}class Us extends Ls{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class zs extends Ls{constructor(e,t,n){super(new Uint16Array(e),t,n)}}zs.prototype.isFloat16BufferAttribute=!0;class Vs extends Ls{constructor(e,t,n){super(new Float32Array(e),t,n)}}class Gs extends Ls{constructor(e,t,n){super(new Float64Array(e),t,n)}}function Ws(e){if(0===e.length)return-1/0;let t=e[0];for(let n=1,r=e.length;n<r;++n)e[n]>t&&(t=e[n]);return t}const Hs={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function js(e,t){return new Hs[e](t)}let Xs=0;const qs=new $r,Ks=new us,Ys=new or,Js=new cr,Zs=new cr,Qs=new or;class ei extends Pn{constructor(){super(),Object.defineProperty(this,"id",{value:Xs++}),this.uuid=zn(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Ws(e)>65535?Us:$s)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const t=(new Yn).getNormalMatrix(e);n.applyNormalMatrix(t),n.needsUpdate=!0}const r=this.attributes.tangent;return void 0!==r&&(r.transformDirection(e),r.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(e){return qs.makeRotationFromQuaternion(e),this.applyMatrix4(qs),this}rotateX(e){return qs.makeRotationX(e),this.applyMatrix4(qs),this}rotateY(e){return qs.makeRotationY(e),this.applyMatrix4(qs),this}rotateZ(e){return qs.makeRotationZ(e),this.applyMatrix4(qs),this}translate(e,t,n){return qs.makeTranslation(e,t,n),this.applyMatrix4(qs),this}scale(e,t,n){return qs.makeScale(e,t,n),this.applyMatrix4(qs),this}lookAt(e){return Ks.lookAt(e),Ks.updateMatrix(),this.applyMatrix4(Ks.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Ys).negate(),this.translate(Ys.x,Ys.y,Ys.z),this}setFromPoints(e){const t=[];for(let n=0,r=e.length;n<r;n++){const r=e[n];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new Vs(t,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new cr);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new or(-1/0,-1/0,-1/0),new or(1/0,1/0,1/0));if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let e=0,n=t.length;e<n;e++){const n=t[e];Js.setFromBufferAttribute(n),this.morphTargetsRelative?(Qs.addVectors(this.boundingBox.min,Js.min),this.boundingBox.expandByPoint(Qs),Qs.addVectors(this.boundingBox.max,Js.max),this.boundingBox.expandByPoint(Qs)):(this.boundingBox.expandByPoint(Js.min),this.boundingBox.expandByPoint(Js.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new Ir);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new or,1/0);if(e){const n=this.boundingSphere.center;if(Js.setFromBufferAttribute(e),t)for(let e=0,n=t.length;e<n;e++){const n=t[e];Zs.setFromBufferAttribute(n),this.morphTargetsRelative?(Qs.addVectors(Js.min,Zs.min),Js.expandByPoint(Qs),Qs.addVectors(Js.max,Zs.max),Js.expandByPoint(Qs)):(Js.expandByPoint(Zs.min),Js.expandByPoint(Zs.max))}Js.getCenter(n);let r=0;for(let t=0,s=e.count;t<s;t++)Qs.fromBufferAttribute(e,t),r=Math.max(r,n.distanceToSquared(Qs));if(t)for(let s=0,i=t.length;s<i;s++){const i=t[s],a=this.morphTargetsRelative;for(let t=0,s=i.count;t<s;t++)Qs.fromBufferAttribute(i,t),a&&(Ys.fromBufferAttribute(e,t),Qs.add(Ys)),r=Math.max(r,n.distanceToSquared(Qs))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(null===e||void 0===t.position||void 0===t.normal||void 0===t.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=e.array,r=t.position.array,s=t.normal.array,i=t.uv.array,a=r.length/3;void 0===t.tangent&&this.setAttribute("tangent",new Ls(new Float32Array(4*a),4));const o=t.tangent.array,l=[],u=[];for(let e=0;e<a;e++)l[e]=new or,u[e]=new or;const c=new or,h=new or,d=new or,p=new Kn,f=new Kn,m=new Kn,g=new or,y=new or;function x(e,t,n){c.fromArray(r,3*e),h.fromArray(r,3*t),d.fromArray(r,3*n),p.fromArray(i,2*e),f.fromArray(i,2*t),m.fromArray(i,2*n),h.sub(c),d.sub(c),f.sub(p),m.sub(p);const s=1/(f.x*m.y-m.x*f.y);isFinite(s)&&(g.copy(h).multiplyScalar(m.y).addScaledVector(d,-f.y).multiplyScalar(s),y.copy(d).multiplyScalar(f.x).addScaledVector(h,-m.x).multiplyScalar(s),l[e].add(g),l[t].add(g),l[n].add(g),u[e].add(y),u[t].add(y),u[n].add(y))}let v=this.groups;0===v.length&&(v=[{start:0,count:n.length}]);for(let e=0,t=v.length;e<t;++e){const t=v[e],r=t.start;for(let e=r,s=r+t.count;e<s;e+=3)x(n[e+0],n[e+1],n[e+2])}const b=new or,w=new or,_=new or,S=new or;function T(e){_.fromArray(s,3*e),S.copy(_);const t=l[e];b.copy(t),b.sub(_.multiplyScalar(_.dot(t))).normalize(),w.crossVectors(S,t);const n=w.dot(u[e])<0?-1:1;o[4*e]=b.x,o[4*e+1]=b.y,o[4*e+2]=b.z,o[4*e+3]=n}for(let e=0,t=v.length;e<t;++e){const t=v[e],r=t.start;for(let e=r,s=r+t.count;e<s;e+=3)T(n[e+0]),T(n[e+1]),T(n[e+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(void 0!==t){let n=this.getAttribute("normal");if(void 0===n)n=new Ls(new Float32Array(3*t.count),3),this.setAttribute("normal",n);else for(let e=0,t=n.count;e<t;e++)n.setXYZ(e,0,0,0);const r=new or,s=new or,i=new or,a=new or,o=new or,l=new or,u=new or,c=new or;if(e)for(let h=0,d=e.count;h<d;h+=3){const d=e.getX(h+0),p=e.getX(h+1),f=e.getX(h+2);r.fromBufferAttribute(t,d),s.fromBufferAttribute(t,p),i.fromBufferAttribute(t,f),u.subVectors(i,s),c.subVectors(r,s),u.cross(c),a.fromBufferAttribute(n,d),o.fromBufferAttribute(n,p),l.fromBufferAttribute(n,f),a.add(u),o.add(u),l.add(u),n.setXYZ(d,a.x,a.y,a.z),n.setXYZ(p,o.x,o.y,o.z),n.setXYZ(f,l.x,l.y,l.z)}else for(let e=0,a=t.count;e<a;e+=3)r.fromBufferAttribute(t,e+0),s.fromBufferAttribute(t,e+1),i.fromBufferAttribute(t,e+2),u.subVectors(i,s),c.subVectors(r,s),u.cross(c),n.setXYZ(e+0,u.x,u.y,u.z),n.setXYZ(e+1,u.x,u.y,u.z),n.setXYZ(e+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(e,t){if(!e||!e.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);void 0===t&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const r in n){if(void 0===e.attributes[r])continue;const s=n[r].array,i=e.attributes[r],a=i.array,o=i.itemSize*t,l=Math.min(a.length,s.length-o);for(let e=0,t=o;e<l;e++,t++)s[t]=a[e]}return this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)Qs.fromBufferAttribute(e,t),Qs.normalize(),e.setXYZ(t,Qs.x,Qs.y,Qs.z)}toNonIndexed(){function e(e,t){const n=e.array,r=e.itemSize,s=e.normalized,i=new n.constructor(t.length*r);let a=0,o=0;for(let s=0,l=t.length;s<l;s++){a=e.isInterleavedBufferAttribute?t[s]*e.data.stride+e.offset:t[s]*r;for(let e=0;e<r;e++)i[o++]=n[a++]}return new Ls(i,r,s)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new ei,n=this.index.array,r=this.attributes;for(const s in r){const i=e(r[s],n);t.setAttribute(s,i)}const s=this.morphAttributes;for(const r in s){const i=[],a=s[r];for(let t=0,r=a.length;t<r;t++){const r=e(a[t],n);i.push(r)}t.morphAttributes[r]=i}t.morphTargetsRelative=this.morphTargetsRelative;const i=this.groups;for(let e=0,n=i.length;e<n;e++){const n=i[e];t.addGroup(n.start,n.count,n.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){const t=this.parameters;for(const n in t)void 0!==t[n]&&(e[n]=t[n]);return e}e.data={attributes:{}};const t=this.index;null!==t&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const t in n){const r=n[t];e.data.attributes[t]=r.toJSON(e.data)}const r={};let s=!1;for(const t in this.morphAttributes){const n=this.morphAttributes[t],i=[];for(let t=0,r=n.length;t<r;t++){const r=n[t];i.push(r.toJSON(e.data))}i.length>0&&(r[t]=i,s=!0)}s&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const i=this.groups;i.length>0&&(e.data.groups=JSON.parse(JSON.stringify(i)));const a=this.boundingSphere;return null!==a&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return(new ei).copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;null!==n&&this.setIndex(n.clone(t));const r=e.attributes;for(const e in r){const n=r[e];this.setAttribute(e,n.clone(t))}const s=e.morphAttributes;for(const e in s){const n=[],r=s[e];for(let e=0,s=r.length;e<s;e++)n.push(r[e].clone(t));this.morphAttributes[e]=n}this.morphTargetsRelative=e.morphTargetsRelative;const i=e.groups;for(let e=0,t=i.length;e<t;e++){const t=i[e];this.addGroup(t.start,t.count,t.materialIndex)}const a=e.boundingBox;null!==a&&(this.boundingBox=a.clone());const o=e.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}ei.prototype.isBufferGeometry=!0;const ti=new $r,ni=new Fr,ri=new Ir,si=new or,ii=new or,ai=new or,oi=new or,li=new or,ui=new or,ci=new or,hi=new or,di=new or,pi=new Kn,fi=new Kn,mi=new Kn,gi=new or,yi=new or;class xi extends us{constructor(e=new ei,t=new Rs){super(),this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const e=t[n[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,n=e.length;t<n;t++){const n=e[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=t}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(e,t){const n=this.geometry,r=this.material,s=this.matrixWorld;if(void 0===r)return;if(null===n.boundingSphere&&n.computeBoundingSphere(),ri.copy(n.boundingSphere),ri.applyMatrix4(s),!1===e.ray.intersectsSphere(ri))return;if(ti.copy(s).invert(),ni.copy(e.ray).applyMatrix4(ti),null!==n.boundingBox&&!1===ni.intersectsBox(n.boundingBox))return;let i;if(n.isBufferGeometry){const s=n.index,a=n.attributes.position,o=n.morphAttributes.position,l=n.morphTargetsRelative,u=n.attributes.uv,c=n.attributes.uv2,h=n.groups,d=n.drawRange;if(null!==s)if(Array.isArray(r))for(let n=0,p=h.length;n<p;n++){const p=h[n],f=r[p.materialIndex];for(let n=Math.max(p.start,d.start),r=Math.min(p.start+p.count,d.start+d.count);n<r;n+=3){const r=s.getX(n),h=s.getX(n+1),d=s.getX(n+2);i=vi(this,f,e,ni,a,o,l,u,c,r,h,d),i&&(i.faceIndex=Math.floor(n/3),i.face.materialIndex=p.materialIndex,t.push(i))}}else for(let n=Math.max(0,d.start),h=Math.min(s.count,d.start+d.count);n<h;n+=3){const h=s.getX(n),d=s.getX(n+1),p=s.getX(n+2);i=vi(this,r,e,ni,a,o,l,u,c,h,d,p),i&&(i.faceIndex=Math.floor(n/3),t.push(i))}else if(void 0!==a)if(Array.isArray(r))for(let n=0,s=h.length;n<s;n++){const s=h[n],p=r[s.materialIndex];for(let n=Math.max(s.start,d.start),r=Math.min(s.start+s.count,d.start+d.count);n<r;n+=3)i=vi(this,p,e,ni,a,o,l,u,c,n,n+1,n+2),i&&(i.faceIndex=Math.floor(n/3),i.face.materialIndex=s.materialIndex,t.push(i))}else for(let n=Math.max(0,d.start),s=Math.min(a.count,d.start+d.count);n<s;n+=3)i=vi(this,r,e,ni,a,o,l,u,c,n,n+1,n+2),i&&(i.faceIndex=Math.floor(n/3),t.push(i))}else n.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}function vi(e,t,n,r,s,i,a,o,l,u,c,h){si.fromBufferAttribute(s,u),ii.fromBufferAttribute(s,c),ai.fromBufferAttribute(s,h);const d=e.morphTargetInfluences;if(i&&d){ci.set(0,0,0),hi.set(0,0,0),di.set(0,0,0);for(let e=0,t=i.length;e<t;e++){const t=d[e],n=i[e];0!==t&&(oi.fromBufferAttribute(n,u),li.fromBufferAttribute(n,c),ui.fromBufferAttribute(n,h),a?(ci.addScaledVector(oi,t),hi.addScaledVector(li,t),di.addScaledVector(ui,t)):(ci.addScaledVector(oi.sub(si),t),hi.addScaledVector(li.sub(ii),t),di.addScaledVector(ui.sub(ai),t)))}si.add(ci),ii.add(hi),ai.add(di)}e.isSkinnedMesh&&(e.boneTransform(u,si),e.boneTransform(c,ii),e.boneTransform(h,ai));const p=function(e,t,n,r,s,i,a,o){let l;if(l=t.side===m?r.intersectTriangle(a,i,s,!0,o):r.intersectTriangle(s,i,a,t.side!==g,o),null===l)return null;yi.copy(o),yi.applyMatrix4(e.matrixWorld);const u=n.ray.origin.distanceTo(yi);return u<n.near||u>n.far?null:{distance:u,point:yi.clone(),object:e}}(e,t,n,r,si,ii,ai,gi);if(p){o&&(pi.fromBufferAttribute(o,u),fi.fromBufferAttribute(o,c),mi.fromBufferAttribute(o,h),p.uv=bs.getUV(gi,si,ii,ai,pi,fi,mi,new Kn)),l&&(pi.fromBufferAttribute(l,u),fi.fromBufferAttribute(l,c),mi.fromBufferAttribute(l,h),p.uv2=bs.getUV(gi,si,ii,ai,pi,fi,mi,new Kn));const e={a:u,b:c,c:h,normal:new or,materialIndex:0};bs.getNormal(si,ii,ai,e.normal),p.face=e}return p}xi.prototype.isMesh=!0;class bi extends ei{constructor(e=1,t=1,n=1,r=1,s=1,i=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:r,heightSegments:s,depthSegments:i};const a=this;r=Math.floor(r),s=Math.floor(s),i=Math.floor(i);const o=[],l=[],u=[],c=[];let h=0,d=0;function p(e,t,n,r,s,i,p,f,m,g,y){const x=i/m,v=p/g,b=i/2,w=p/2,_=f/2,S=m+1,T=g+1;let E=0,M=0;const C=new or;for(let i=0;i<T;i++){const a=i*v-w;for(let o=0;o<S;o++){const h=o*x-b;C[e]=h*r,C[t]=a*s,C[n]=_,l.push(C.x,C.y,C.z),C[e]=0,C[t]=0,C[n]=f>0?1:-1,u.push(C.x,C.y,C.z),c.push(o/m),c.push(1-i/g),E+=1}}for(let e=0;e<g;e++)for(let t=0;t<m;t++){const n=h+t+S*e,r=h+t+S*(e+1),s=h+(t+1)+S*(e+1),i=h+(t+1)+S*e;o.push(n,r,i),o.push(r,s,i),M+=6}a.addGroup(d,M,y),d+=M,h+=E}p("z","y","x",-1,-1,n,t,e,i,s,0),p("z","y","x",1,-1,n,t,-e,i,s,1),p("x","z","y",1,1,e,n,t,r,i,2),p("x","z","y",1,-1,e,n,-t,r,i,3),p("x","y","z",1,-1,e,t,n,r,s,4),p("x","y","z",-1,-1,e,t,-n,r,s,5),this.setIndex(o),this.setAttribute("position",new Vs(l,3)),this.setAttribute("normal",new Vs(u,3)),this.setAttribute("uv",new Vs(c,2))}static fromJSON(e){return new bi(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function wi(e){const t={};for(const n in e){t[n]={};for(const r in e[n]){const s=e[n][r];s&&(s.isColor||s.isMatrix3||s.isMatrix4||s.isVector2||s.isVector3||s.isVector4||s.isTexture||s.isQuaternion)?t[n][r]=s.clone():Array.isArray(s)?t[n][r]=s.slice():t[n][r]=s}}return t}function _i(e){const t={};for(let n=0;n<e.length;n++){const r=wi(e[n]);for(const e in r)t[e]=r[e]}return t}const Si={clone:wi,merge:_i};class Ti extends _s{constructor(e){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=wi(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const n in this.uniforms){const r=this.uniforms[n].value;r&&r.isTexture?t.uniforms[n]={type:"t",value:r.toJSON(e).uuid}:r&&r.isColor?t.uniforms[n]={type:"c",value:r.getHex()}:r&&r.isVector2?t.uniforms[n]={type:"v2",value:r.toArray()}:r&&r.isVector3?t.uniforms[n]={type:"v3",value:r.toArray()}:r&&r.isVector4?t.uniforms[n]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?t.uniforms[n]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?t.uniforms[n]={type:"m4",value:r.toArray()}:t.uniforms[n]={value:r}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const e in this.extensions)!0===this.extensions[e]&&(n[e]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}Ti.prototype.isShaderMaterial=!0;class Ei extends us{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new $r,this.projectionMatrix=new $r,this.projectionMatrixInverse=new $r}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}Ei.prototype.isCamera=!0;class Mi extends Ei{constructor(e=50,t=1,n=.1,r=2e3){super(),this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=2*Un*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(.5*Bn*this.fov);return.5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*Un*Math.atan(Math.tan(.5*Bn*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,r,s,i){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=s,this.view.height=i,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(.5*Bn*this.fov)/this.zoom,n=2*t,r=this.aspect*n,s=-.5*r;const i=this.view;if(null!==this.view&&this.view.enabled){const e=i.fullWidth,a=i.fullHeight;s+=i.offsetX*r/e,t-=i.offsetY*n/a,r*=i.width/e,n*=i.height/a}const a=this.filmOffset;0!==a&&(s+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+r,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}Mi.prototype.isPerspectiveCamera=!0;const Ci=90;class Ai extends us{constructor(e,t,n){if(super(),this.type="CubeCamera",!0!==n.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=n;const r=new Mi(Ci,1,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new or(1,0,0)),this.add(r);const s=new Mi(Ci,1,e,t);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new or(-1,0,0)),this.add(s);const i=new Mi(Ci,1,e,t);i.layers=this.layers,i.up.set(0,0,1),i.lookAt(new or(0,1,0)),this.add(i);const a=new Mi(Ci,1,e,t);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(new or(0,-1,0)),this.add(a);const o=new Mi(Ci,1,e,t);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new or(0,0,1)),this.add(o);const l=new Mi(Ci,1,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new or(0,0,-1)),this.add(l)}update(e,t){null===this.parent&&this.updateMatrixWorld();const n=this.renderTarget,[r,s,i,a,o,l]=this.children,u=e.xr.enabled,c=e.getRenderTarget();e.xr.enabled=!1;const h=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,r),e.setRenderTarget(n,1),e.render(t,s),e.setRenderTarget(n,2),e.render(t,i),e.setRenderTarget(n,3),e.render(t,a),e.setRenderTarget(n,4),e.render(t,o),n.texture.generateMipmaps=h,e.setRenderTarget(n,5),e.render(t,l),e.setRenderTarget(c),e.xr.enabled=u}}class Ii extends er{constructor(e,t,n,r,s,i,a,o,l,u){super(e=void 0!==e?e:[],t=void 0!==t?t:ie,n,r,s,i,a=void 0!==a?a:Fe,o,l,u),this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}Ii.prototype.isCubeTexture=!0;class Ri extends rr{constructor(e,t,n){Number.isInteger(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=n),super(e,e,t),t=t||{},this.texture=new Ii(void 0,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:ve,this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.format=$e,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={tEquirect:{value:null}},r="\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",s="\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",i=new bi(5,5,5),a=new Ti({name:"CubemapFromEquirect",uniforms:wi(n),vertexShader:r,fragmentShader:s,side:m,blending:v});a.uniforms.tEquirect.value=t;const o=new xi(i,a),l=t.minFilter;return t.minFilter===_e&&(t.minFilter=ve),new Ai(1,10,this).update(e,o),t.minFilter=l,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,n,r){const s=e.getRenderTarget();for(let s=0;s<6;s++)e.setRenderTarget(this,s),e.clear(t,n,r);e.setRenderTarget(s)}}Ri.prototype.isWebGLCubeRenderTarget=!0;const ki=new or,Ni=new or,Li=new Yn;class Di{constructor(e=new or(1,0,0),t=0){this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,r){return this.normal.set(e,t,n),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const r=ki.subVectors(n,t).cross(Ni.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const n=e.delta(ki),r=this.normal.dot(n);if(0===r)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/r;return s<0||s>1?null:t.copy(n).multiplyScalar(s).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||Li.getNormalMatrix(e),r=this.coplanarPoint(ki).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-r.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return(new this.constructor).copy(this)}}Di.prototype.isPlane=!0;const Oi=new Ir,Pi=new or;class Fi{constructor(e=new Di,t=new Di,n=new Di,r=new Di,s=new Di,i=new Di){this.planes=[e,t,n,r,s,i]}set(e,t,n,r,s,i){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(n),a[3].copy(r),a[4].copy(s),a[5].copy(i),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,r=n[0],s=n[1],i=n[2],a=n[3],o=n[4],l=n[5],u=n[6],c=n[7],h=n[8],d=n[9],p=n[10],f=n[11],m=n[12],g=n[13],y=n[14],x=n[15];return t[0].setComponents(a-r,c-o,f-h,x-m).normalize(),t[1].setComponents(a+r,c+o,f+h,x+m).normalize(),t[2].setComponents(a+s,c+l,f+d,x+g).normalize(),t[3].setComponents(a-s,c-l,f-d,x-g).normalize(),t[4].setComponents(a-i,c-u,f-p,x-y).normalize(),t[5].setComponents(a+i,c+u,f+p,x+y).normalize(),this}intersectsObject(e){const t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),Oi.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(Oi)}intersectsSprite(e){return Oi.center.set(0,0,0),Oi.radius=.7071067811865476,Oi.applyMatrix4(e.matrixWorld),this.intersectsSphere(Oi)}intersectsSphere(e){const t=this.planes,n=e.center,r=-e.radius;for(let e=0;e<6;e++)if(t[e].distanceToPoint(n)<r)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const r=t[n];if(Pi.x=r.normal.x>0?e.max.x:e.min.x,Pi.y=r.normal.y>0?e.max.y:e.min.y,Pi.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(Pi)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function $i(){let e=null,t=!1,n=null,r=null;function s(t,i){n(t,i),r=e.requestAnimationFrame(s)}return{start:function(){!0!==t&&null!==n&&(r=e.requestAnimationFrame(s),t=!0)},stop:function(){e.cancelAnimationFrame(r),t=!1},setAnimationLoop:function(e){n=e},setContext:function(t){e=t}}}function Bi(e,t){const n=t.isWebGL2,r=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),r.get(e)},remove:function(t){t.isInterleavedBufferAttribute&&(t=t.data);const n=r.get(t);n&&(e.deleteBuffer(n.buffer),r.delete(t))},update:function(t,s){if(t.isGLBufferAttribute){const e=r.get(t);return void((!e||e.version<t.version)&&r.set(t,{buffer:t.buffer,type:t.type,bytesPerElement:t.elementSize,version:t.version}))}t.isInterleavedBufferAttribute&&(t=t.data);const i=r.get(t);void 0===i?r.set(t,function(t,r){const s=t.array,i=t.usage,a=e.createBuffer();e.bindBuffer(r,a),e.bufferData(r,s,i),t.onUploadCallback();let o=5126;return s instanceof Float32Array?o=5126:s instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):s instanceof Uint16Array?t.isFloat16BufferAttribute?n?o=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):o=5123:s instanceof Int16Array?o=5122:s instanceof Uint32Array?o=5125:s instanceof Int32Array?o=5124:s instanceof Int8Array?o=5120:(s instanceof Uint8Array||s instanceof Uint8ClampedArray)&&(o=5121),{buffer:a,type:o,bytesPerElement:s.BYTES_PER_ELEMENT,version:t.version}}(t,s)):i.version<t.version&&(function(t,r,s){const i=r.array,a=r.updateRange;e.bindBuffer(s,t),-1===a.count?e.bufferSubData(s,0,i):(n?e.bufferSubData(s,a.offset*i.BYTES_PER_ELEMENT,i,a.offset,a.count):e.bufferSubData(s,a.offset*i.BYTES_PER_ELEMENT,i.subarray(a.offset,a.offset+a.count)),a.count=-1)}(i.buffer,t,s),i.version=t.version)}}}class Ui extends ei{constructor(e=1,t=1,n=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r};const s=e/2,i=t/2,a=Math.floor(n),o=Math.floor(r),l=a+1,u=o+1,c=e/a,h=t/o,d=[],p=[],f=[],m=[];for(let e=0;e<u;e++){const t=e*h-i;for(let n=0;n<l;n++){const r=n*c-s;p.push(r,-t,0),f.push(0,0,1),m.push(n/a),m.push(1-e/o)}}for(let e=0;e<o;e++)for(let t=0;t<a;t++){const n=t+l*e,r=t+l*(e+1),s=t+1+l*(e+1),i=t+1+l*e;d.push(n,r,i),d.push(r,s,i)}this.setIndex(d),this.setAttribute("position",new Vs(p,3)),this.setAttribute("normal",new Vs(f,3)),this.setAttribute("uv",new Vs(m,2))}static fromJSON(e){return new Ui(e.width,e.height,e.widthSegments,e.heightSegments)}}const zi={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotVH = saturate( dot( geometry.viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float NoH ) {\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float NoV, float NoL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( NoL + NoV - NoL * NoV ) ) );\n}\nvec3 BRDF_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getIBLIrradiance( const in GeometricContext geometry ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec;\n\t\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\t\treflectVec = reflect( - viewDir, normal );\n\t\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\t#else\n\t\t\t\treflectVec = refract( - viewDir, normal, refractionRatio );\n\t\t\t#endif\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tlightMapIrradiance *= PI;\n\t#endif\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#else\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\t#ifdef SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularTintFactor = specularTint;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARTINTMAP\n\t\t\tspecularTintFactor *= specularTintMapTexelToLinear( texture2D( specularTintMap, vUv ) ).rgb;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularTintFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularTintFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenTint = sheenTint;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenTint;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\tvec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += irradiance * BRDF_Sheen( material.roughness, directLight.direction, geometry, material.sheenTint );\n\t#else\n\t\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tfloat transmissionAlpha = 1.0;\n\tfloat transmissionFactor = transmission;\n\tfloat thicknessFactor = thickness;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n\t\tattenuationTint, attenuationDistance );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\n\ttransmissionAlpha = transmission.a;\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationTint;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tvec3 getVolumeTransmissionRay( vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( float roughness, float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( vec2 fragCoord, float roughness, float ior ) {\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#else\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#endif\n\t}\n\tvec3 applyVolumeAttenuation( vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance ) {\n\t\tif ( attenuationDistance == 0.0 ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( vec3 n, vec3 v, float roughness, vec3 diffuseColor, vec3 specularColor, float specularF90,\n\t\tvec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,\n\t\tvec3 attenuationColor, float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularTint;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARTINTMAP\n\t\tuniform sampler2D specularTintMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenTint;\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - clearcoat * Fcc ) + clearcoatSpecular * clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"},Vi={common:{diffuse:{value:new Is(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new Yn},uv2Transform:{value:new Yn},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Kn(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Is(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Is(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Yn}},sprite:{diffuse:{value:new Is(16777215)},opacity:{value:1},center:{value:new Kn(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Yn}}},Gi={basic:{uniforms:_i([Vi.common,Vi.specularmap,Vi.envmap,Vi.aomap,Vi.lightmap,Vi.fog]),vertexShader:zi.meshbasic_vert,fragmentShader:zi.meshbasic_frag},lambert:{uniforms:_i([Vi.common,Vi.specularmap,Vi.envmap,Vi.aomap,Vi.lightmap,Vi.emissivemap,Vi.fog,Vi.lights,{emissive:{value:new Is(0)}}]),vertexShader:zi.meshlambert_vert,fragmentShader:zi.meshlambert_frag},phong:{uniforms:_i([Vi.common,Vi.specularmap,Vi.envmap,Vi.aomap,Vi.lightmap,Vi.emissivemap,Vi.bumpmap,Vi.normalmap,Vi.displacementmap,Vi.fog,Vi.lights,{emissive:{value:new Is(0)},specular:{value:new Is(1118481)},shininess:{value:30}}]),vertexShader:zi.meshphong_vert,fragmentShader:zi.meshphong_frag},standard:{uniforms:_i([Vi.common,Vi.envmap,Vi.aomap,Vi.lightmap,Vi.emissivemap,Vi.bumpmap,Vi.normalmap,Vi.displacementmap,Vi.roughnessmap,Vi.metalnessmap,Vi.fog,Vi.lights,{emissive:{value:new Is(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:zi.meshphysical_vert,fragmentShader:zi.meshphysical_frag},toon:{uniforms:_i([Vi.common,Vi.aomap,Vi.lightmap,Vi.emissivemap,Vi.bumpmap,Vi.normalmap,Vi.displacementmap,Vi.gradientmap,Vi.fog,Vi.lights,{emissive:{value:new Is(0)}}]),vertexShader:zi.meshtoon_vert,fragmentShader:zi.meshtoon_frag},matcap:{uniforms:_i([Vi.common,Vi.bumpmap,Vi.normalmap,Vi.displacementmap,Vi.fog,{matcap:{value:null}}]),vertexShader:zi.meshmatcap_vert,fragmentShader:zi.meshmatcap_frag},points:{uniforms:_i([Vi.points,Vi.fog]),vertexShader:zi.points_vert,fragmentShader:zi.points_frag},dashed:{uniforms:_i([Vi.common,Vi.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:zi.linedashed_vert,fragmentShader:zi.linedashed_frag},depth:{uniforms:_i([Vi.common,Vi.displacementmap]),vertexShader:zi.depth_vert,fragmentShader:zi.depth_frag},normal:{uniforms:_i([Vi.common,Vi.bumpmap,Vi.normalmap,Vi.displacementmap,{opacity:{value:1}}]),vertexShader:zi.meshnormal_vert,fragmentShader:zi.meshnormal_frag},sprite:{uniforms:_i([Vi.sprite,Vi.fog]),vertexShader:zi.sprite_vert,fragmentShader:zi.sprite_frag},background:{uniforms:{uvTransform:{value:new Yn},t2D:{value:null}},vertexShader:zi.background_vert,fragmentShader:zi.background_frag},cube:{uniforms:_i([Vi.envmap,{opacity:{value:1}}]),vertexShader:zi.cube_vert,fragmentShader:zi.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:zi.equirect_vert,fragmentShader:zi.equirect_frag},distanceRGBA:{uniforms:_i([Vi.common,Vi.displacementmap,{referencePosition:{value:new or},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:zi.distanceRGBA_vert,fragmentShader:zi.distanceRGBA_frag},shadow:{uniforms:_i([Vi.lights,Vi.fog,{color:{value:new Is(0)},opacity:{value:1}}]),vertexShader:zi.shadow_vert,fragmentShader:zi.shadow_frag}};function Wi(e,t,n,r,s){const i=new Is(0);let a,o,l=0,u=null,c=0,h=null;function d(e,t){n.buffers.color.setClear(e.r,e.g,e.b,t,s)}return{getClearColor:function(){return i},setClearColor:function(e,t=1){i.set(e),l=t,d(i,l)},getClearAlpha:function(){return l},setClearAlpha:function(e){l=e,d(i,l)},render:function(n,s){let p=!1,g=!0===s.isScene?s.background:null;g&&g.isTexture&&(g=t.get(g));const y=e.xr,x=y.getSession&&y.getSession();x&&"additive"===x.environmentBlendMode&&(g=null),null===g?d(i,l):g&&g.isColor&&(d(g,1),p=!0),(e.autoClear||p)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),g&&(g.isCubeTexture||g.mapping===ue)?(void 0===o&&(o=new xi(new bi(1,1,1),new Ti({name:"BackgroundCubeMaterial",uniforms:wi(Gi.cube.uniforms),vertexShader:Gi.cube.vertexShader,fragmentShader:Gi.cube.fragmentShader,side:m,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),o.geometry.deleteAttribute("uv"),o.onBeforeRender=function(e,t,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(o.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(o)),o.material.uniforms.envMap.value=g,o.material.uniforms.flipEnvMap.value=g.isCubeTexture&&!1===g.isRenderTargetTexture?-1:1,u===g&&c===g.version&&h===e.toneMapping||(o.material.needsUpdate=!0,u=g,c=g.version,h=e.toneMapping),n.unshift(o,o.geometry,o.material,0,0,null)):g&&g.isTexture&&(void 0===a&&(a=new xi(new Ui(2,2),new Ti({name:"BackgroundMaterial",uniforms:wi(Gi.background.uniforms),vertexShader:Gi.background.vertexShader,fragmentShader:Gi.background.fragmentShader,side:f,depthTest:!1,depthWrite:!1,fog:!1})),a.geometry.deleteAttribute("normal"),Object.defineProperty(a.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(a)),a.material.uniforms.t2D.value=g,!0===g.matrixAutoUpdate&&g.updateMatrix(),a.material.uniforms.uvTransform.value.copy(g.matrix),u===g&&c===g.version&&h===e.toneMapping||(a.material.needsUpdate=!0,u=g,c=g.version,h=e.toneMapping),n.unshift(a,a.geometry,a.material,0,0,null))}}}function Hi(e,t,n,r){const s=e.getParameter(34921),i=r.isWebGL2?null:t.get("OES_vertex_array_object"),a=r.isWebGL2||null!==i,o={},l=d(null);let u=l;function c(t){return r.isWebGL2?e.bindVertexArray(t):i.bindVertexArrayOES(t)}function h(t){return r.isWebGL2?e.deleteVertexArray(t):i.deleteVertexArrayOES(t)}function d(e){const t=[],n=[],r=[];for(let e=0;e<s;e++)t[e]=0,n[e]=0,r[e]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:n,attributeDivisors:r,object:e,attributes:{},index:null}}function p(){const e=u.newAttributes;for(let t=0,n=e.length;t<n;t++)e[t]=0}function f(e){m(e,0)}function m(n,s){const i=u.newAttributes,a=u.enabledAttributes,o=u.attributeDivisors;i[n]=1,0===a[n]&&(e.enableVertexAttribArray(n),a[n]=1),o[n]!==s&&((r.isWebGL2?e:t.get("ANGLE_instanced_arrays"))[r.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,s),o[n]=s)}function g(){const t=u.newAttributes,n=u.enabledAttributes;for(let r=0,s=n.length;r<s;r++)n[r]!==t[r]&&(e.disableVertexAttribArray(r),n[r]=0)}function y(t,n,s,i,a,o){!0!==r.isWebGL2||5124!==s&&5125!==s?e.vertexAttribPointer(t,n,s,i,a,o):e.vertexAttribIPointer(t,n,s,a,o)}function x(){v(),u!==l&&(u=l,c(u.object))}function v(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function(s,l,h,x,v){let b=!1;if(a){const t=function(t,n,s){const a=!0===s.wireframe;let l=o[t.id];void 0===l&&(l={},o[t.id]=l);let u=l[n.id];void 0===u&&(u={},l[n.id]=u);let c=u[a];return void 0===c&&(c=d(r.isWebGL2?e.createVertexArray():i.createVertexArrayOES()),u[a]=c),c}(x,h,l);u!==t&&(u=t,c(u.object)),b=function(e,t){const n=u.attributes,r=e.attributes;let s=0;for(const e in r){const t=n[e],i=r[e];if(void 0===t)return!0;if(t.attribute!==i)return!0;if(t.data!==i.data)return!0;s++}return u.attributesNum!==s||u.index!==t}(x,v),b&&function(e,t){const n={},r=e.attributes;let s=0;for(const e in r){const t=r[e],i={};i.attribute=t,t.data&&(i.data=t.data),n[e]=i,s++}u.attributes=n,u.attributesNum=s,u.index=t}(x,v)}else{const e=!0===l.wireframe;u.geometry===x.id&&u.program===h.id&&u.wireframe===e||(u.geometry=x.id,u.program=h.id,u.wireframe=e,b=!0)}!0===s.isInstancedMesh&&(b=!0),null!==v&&n.update(v,34963),b&&(function(s,i,a,o){if(!1===r.isWebGL2&&(s.isInstancedMesh||o.isInstancedBufferGeometry)&&null===t.get("ANGLE_instanced_arrays"))return;p();const l=o.attributes,u=a.getAttributes(),c=i.defaultAttributeValues;for(const t in u){const r=u[t];if(r.location>=0){let i=l[t];if(void 0===i&&("instanceMatrix"===t&&s.instanceMatrix&&(i=s.instanceMatrix),"instanceColor"===t&&s.instanceColor&&(i=s.instanceColor)),void 0!==i){const t=i.normalized,a=i.itemSize,l=n.get(i);if(void 0===l)continue;const u=l.buffer,c=l.type,h=l.bytesPerElement;if(i.isInterleavedBufferAttribute){const n=i.data,l=n.stride,d=i.offset;if(n&&n.isInstancedInterleavedBuffer){for(let e=0;e<r.locationSize;e++)m(r.location+e,n.meshPerAttribute);!0!==s.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=n.meshPerAttribute*n.count)}else for(let e=0;e<r.locationSize;e++)f(r.location+e);e.bindBuffer(34962,u);for(let e=0;e<r.locationSize;e++)y(r.location+e,a/r.locationSize,c,t,l*h,(d+a/r.locationSize*e)*h)}else{if(i.isInstancedBufferAttribute){for(let e=0;e<r.locationSize;e++)m(r.location+e,i.meshPerAttribute);!0!==s.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=i.meshPerAttribute*i.count)}else for(let e=0;e<r.locationSize;e++)f(r.location+e);e.bindBuffer(34962,u);for(let e=0;e<r.locationSize;e++)y(r.location+e,a/r.locationSize,c,t,a*h,a/r.locationSize*e*h)}}else if(void 0!==c){const n=c[t];if(void 0!==n)switch(n.length){case 2:e.vertexAttrib2fv(r.location,n);break;case 3:e.vertexAttrib3fv(r.location,n);break;case 4:e.vertexAttrib4fv(r.location,n);break;default:e.vertexAttrib1fv(r.location,n)}}}}g()}(s,l,h,x),null!==v&&e.bindBuffer(34963,n.get(v).buffer))},reset:x,resetDefaultState:v,dispose:function(){x();for(const e in o){const t=o[e];for(const e in t){const n=t[e];for(const e in n)h(n[e].object),delete n[e];delete t[e]}delete o[e]}},releaseStatesOfGeometry:function(e){if(void 0===o[e.id])return;const t=o[e.id];for(const e in t){const n=t[e];for(const e in n)h(n[e].object),delete n[e];delete t[e]}delete o[e.id]},releaseStatesOfProgram:function(e){for(const t in o){const n=o[t];if(void 0===n[e.id])continue;const r=n[e.id];for(const e in r)h(r[e].object),delete r[e];delete n[e.id]}},initAttributes:p,enableAttribute:f,disableUnusedAttributes:g}}function ji(e,t,n,r){const s=r.isWebGL2;let i;this.setMode=function(e){i=e},this.render=function(t,r){e.drawArrays(i,t,r),n.update(r,i,1)},this.renderInstances=function(r,a,o){if(0===o)return;let l,u;if(s)l=e,u="drawArraysInstanced";else if(l=t.get("ANGLE_instanced_arrays"),u="drawArraysInstancedANGLE",null===l)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");l[u](i,r,a,o),n.update(a,i,o)}}function Xi(e,t,n){let r;function s(t){if("highp"===t){if(e.getShaderPrecisionFormat(35633,36338).precision>0&&e.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(35633,36337).precision>0&&e.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const i="undefined"!=typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&e instanceof WebGL2ComputeRenderingContext;let a=void 0!==n.precision?n.precision:"highp";const o=s(a);o!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",o,"instead."),a=o);const l=i||t.has("WEBGL_draw_buffers"),u=!0===n.logarithmicDepthBuffer,c=e.getParameter(34930),h=e.getParameter(35660),d=e.getParameter(3379),p=e.getParameter(34076),f=e.getParameter(34921),m=e.getParameter(36347),g=e.getParameter(36348),y=e.getParameter(36349),x=h>0,v=i||t.has("OES_texture_float");return{isWebGL2:i,drawBuffers:l,getMaxAnisotropy:function(){if(void 0!==r)return r;if(!0===t.has("EXT_texture_filter_anisotropic")){const n=t.get("EXT_texture_filter_anisotropic");r=e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r},getMaxPrecision:s,precision:a,logarithmicDepthBuffer:u,maxTextures:c,maxVertexTextures:h,maxTextureSize:d,maxCubemapSize:p,maxAttributes:f,maxVertexUniforms:m,maxVaryings:g,maxFragmentUniforms:y,vertexTextures:x,floatFragmentTextures:v,floatVertexTextures:x&&v,maxSamples:i?e.getParameter(36183):0}}function qi(e){const t=this;let n=null,r=0,s=!1,i=!1;const a=new Di,o=new Yn,l={value:null,needsUpdate:!1};function u(){l.value!==n&&(l.value=n,l.needsUpdate=r>0),t.numPlanes=r,t.numIntersection=0}function c(e,n,r,s){const i=null!==e?e.length:0;let u=null;if(0!==i){if(u=l.value,!0!==s||null===u){const t=r+4*i,s=n.matrixWorldInverse;o.getNormalMatrix(s),(null===u||u.length<t)&&(u=new Float32Array(t));for(let t=0,n=r;t!==i;++t,n+=4)a.copy(e[t]).applyMatrix4(s,o),a.normal.toArray(u,n),u[n+3]=a.constant}l.value=u,l.needsUpdate=!0}return t.numPlanes=i,t.numIntersection=0,u}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t,i){const a=0!==e.length||t||0!==r||s;return s=t,n=c(e,i,0),r=e.length,a},this.beginShadows=function(){i=!0,c(null)},this.endShadows=function(){i=!1,u()},this.setState=function(t,a,o){const h=t.clippingPlanes,d=t.clipIntersection,p=t.clipShadows,f=e.get(t);if(!s||null===h||0===h.length||i&&!p)i?c(null):u();else{const e=i?0:r,t=4*e;let s=f.clippingState||null;l.value=s,s=c(h,a,t,o);for(let e=0;e!==t;++e)s[e]=n[e];f.clippingState=s,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=e}}}function Ki(e){let t=new WeakMap;function n(e,t){return t===oe?e.mapping=ie:t===le&&(e.mapping=ae),e}function r(e){const n=e.target;n.removeEventListener("dispose",r);const s=t.get(n);void 0!==s&&(t.delete(n),s.dispose())}return{get:function(s){if(s&&s.isTexture&&!1===s.isRenderTargetTexture){const i=s.mapping;if(i===oe||i===le){if(t.has(s))return n(t.get(s).texture,s.mapping);{const i=s.image;if(i&&i.height>0){const a=e.getRenderTarget(),o=new Ri(i.height/2);return o.fromEquirectangularTexture(e,s),t.set(s,o),e.setRenderTarget(a),s.addEventListener("dispose",r),n(o.texture,s.mapping)}return null}}}return s},dispose:function(){t=new WeakMap}}}Gi.physical={uniforms:_i([Gi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Kn(1,1)},clearcoatNormalMap:{value:null},sheenTint:{value:new Is(0)},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new Kn},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationTint:{value:new Is(0)},specularIntensity:{value:0},specularIntensityMap:{value:null},specularTint:{value:new Is(1,1,1)},specularTintMap:{value:null}}]),vertexShader:zi.meshphysical_vert,fragmentShader:zi.meshphysical_frag};class Yi extends Ei{constructor(e=-1,t=1,n=1,r=-1,s=.1,i=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=r,this.near=s,this.far=i,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,n,r,s,i){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=s,this.view.height=i,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let s=n-e,i=n+e,a=r+t,o=r-t;if(null!==this.view&&this.view.enabled){const e=(this.right-this.left)/this.view.fullWidth/this.zoom,t=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=e*this.view.offsetX,i=s+e*this.view.width,a-=t*this.view.offsetY,o=a-t*this.view.height}this.projectionMatrix.makeOrthographic(s,i,a,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}Yi.prototype.isOrthographicCamera=!0;class Ji extends Ti{constructor(e){super(e),this.type="RawShaderMaterial"}}Ji.prototype.isRawShaderMaterial=!0;const Zi=Math.pow(2,8),Qi=[.125,.215,.35,.446,.526,.582],ea=5+Qi.length,ta={[Yt]:0,[Jt]:1,[Qt]:2,[tn]:3,[nn]:4,[rn]:5,[Zt]:6},na=new Yi,{_lodPlanes:ra,_sizeLods:sa,_sigmas:ia}=pa(),aa=new Is;let oa=null;const la=(1+Math.sqrt(5))/2,ua=1/la,ca=[new or(1,1,1),new or(-1,1,1),new or(1,1,-1),new or(-1,1,-1),new or(0,la,ua),new or(0,la,-ua),new or(ua,0,la),new or(-ua,0,la),new or(la,ua,0),new or(-la,ua,0)];class ha{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._blurMaterial=function(e){const t=new Float32Array(20),n=new or(0,1,0);return new Ji({name:"SphericalGaussianBlur",defines:{n:20},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:t},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n},inputEncoding:{value:ta[Yt]},outputEncoding:{value:ta[Yt]}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t",blending:v,depthTest:!1,depthWrite:!1})}(),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,r=100){oa=this._renderer.getRenderTarget();const s=this._allocateTargets();return this._sceneToCubeUV(e,n,r,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e){return this._fromTexture(e)}fromCubemap(e){return this._fromTexture(e)}compileCubemapShader(){null===this._cubemapShader&&(this._cubemapShader=ya(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){null===this._equirectShader&&(this._equirectShader=ga(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),null!==this._cubemapShader&&this._cubemapShader.dispose(),null!==this._equirectShader&&this._equirectShader.dispose();for(let e=0;e<ra.length;e++)ra[e].dispose()}_cleanup(e){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(oa),e.scissorTest=!1,ma(e,0,0,e.width,e.height)}_fromTexture(e){oa=this._renderer.getRenderTarget();const t=this._allocateTargets(e);return this._textureToCubeUV(e,t),this._applyPMREM(t),this._cleanup(t),t}_allocateTargets(e){const t={magFilter:fe,minFilter:fe,generateMipmaps:!1,type:Te,format:ze,encoding:da(e)?e.encoding:Qt,depthBuffer:!1},n=fa(t);return n.depthBuffer=!e,this._pingPongRenderTarget=fa(t),n}_compileMaterial(e){const t=new xi(ra[0],e);this._renderer.compile(t,na)}_sceneToCubeUV(e,t,n,r){const s=new Mi(90,1,t,n),i=[1,-1,1,1,1,1],a=[1,1,1,-1,-1,-1],o=this._renderer,l=o.autoClear,u=o.outputEncoding,c=o.toneMapping;o.getClearColor(aa),o.toneMapping=Z,o.outputEncoding=Yt,o.autoClear=!1;const h=new Rs({name:"PMREM.Background",side:m,depthWrite:!1,depthTest:!1}),d=new xi(new bi,h);let p=!1;const f=e.background;f?f.isColor&&(h.color.copy(f),e.background=null,p=!0):(h.color.copy(aa),p=!0);for(let t=0;t<6;t++){const n=t%3;0==n?(s.up.set(0,i[t],0),s.lookAt(a[t],0,0)):1==n?(s.up.set(0,0,i[t]),s.lookAt(0,a[t],0)):(s.up.set(0,i[t],0),s.lookAt(0,0,a[t])),ma(r,n*Zi,t>2?Zi:0,Zi,Zi),o.setRenderTarget(r),p&&o.render(d,s),o.render(e,s)}d.geometry.dispose(),d.material.dispose(),o.toneMapping=c,o.outputEncoding=u,o.autoClear=l,e.background=f}_textureToCubeUV(e,t){const n=this._renderer;e.isCubeTexture?null==this._cubemapShader&&(this._cubemapShader=ya()):null==this._equirectShader&&(this._equirectShader=ga());const r=e.isCubeTexture?this._cubemapShader:this._equirectShader,s=new xi(ra[0],r),i=r.uniforms;i.envMap.value=e,e.isCubeTexture||i.texelSize.value.set(1/e.image.width,1/e.image.height),i.inputEncoding.value=ta[e.encoding],i.outputEncoding.value=ta[t.texture.encoding],ma(t,0,0,3*Zi,2*Zi),n.setRenderTarget(t),n.render(s,na)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let t=1;t<ea;t++){const n=Math.sqrt(ia[t]*ia[t]-ia[t-1]*ia[t-1]),r=ca[(t-1)%ca.length];this._blur(e,t-1,t,n,r)}t.autoClear=n}_blur(e,t,n,r,s){const i=this._pingPongRenderTarget;this._halfBlur(e,i,t,n,r,"latitudinal",s),this._halfBlur(i,e,n,n,r,"longitudinal",s)}_halfBlur(e,t,n,r,s,i,a){const o=this._renderer,l=this._blurMaterial;"latitudinal"!==i&&"longitudinal"!==i&&console.error("blur direction must be either latitudinal or longitudinal!");const u=new xi(ra[r],l),c=l.uniforms,h=sa[n]-1,d=isFinite(s)?Math.PI/(2*h):2*Math.PI/39,p=s/d,f=isFinite(s)?1+Math.floor(3*p):20;f>20&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${f} samples when the maximum is set to 20`);const m=[];let g=0;for(let e=0;e<20;++e){const t=e/p,n=Math.exp(-t*t/2);m.push(n),0==e?g+=n:e<f&&(g+=2*n)}for(let e=0;e<m.length;e++)m[e]=m[e]/g;c.envMap.value=e.texture,c.samples.value=f,c.weights.value=m,c.latitudinal.value="latitudinal"===i,a&&(c.poleAxis.value=a),c.dTheta.value=d,c.mipInt.value=8-n,c.inputEncoding.value=ta[e.texture.encoding],c.outputEncoding.value=ta[e.texture.encoding];const y=sa[r];ma(t,3*Math.max(0,Zi-2*y),(0===r?0:2*Zi)+2*y*(r>4?r-8+4:0),3*y,2*y),o.setRenderTarget(t),o.render(u,na)}}function da(e){return void 0!==e&&e.type===Te&&(e.encoding===Yt||e.encoding===Jt||e.encoding===Zt)}function pa(){const e=[],t=[],n=[];let r=8;for(let s=0;s<ea;s++){const i=Math.pow(2,r);t.push(i);let a=1/i;s>4?a=Qi[s-8+4-1]:0==s&&(a=0),n.push(a);const o=1/(i-1),l=-o/2,u=1+o/2,c=[l,l,u,l,u,u,l,l,u,u,l,u],h=6,d=6,p=3,f=2,m=1,g=new Float32Array(p*d*h),y=new Float32Array(f*d*h),x=new Float32Array(m*d*h);for(let e=0;e<h;e++){const t=e%3*2/3-1,n=e>2?0:-1,r=[t,n,0,t+2/3,n,0,t+2/3,n+1,0,t,n,0,t+2/3,n+1,0,t,n+1,0];g.set(r,p*d*e),y.set(c,f*d*e);const s=[e,e,e,e,e,e];x.set(s,m*d*e)}const v=new ei;v.setAttribute("position",new Ls(g,p)),v.setAttribute("uv",new Ls(y,f)),v.setAttribute("faceIndex",new Ls(x,m)),e.push(v),r>4&&r--}return{_lodPlanes:e,_sizeLods:t,_sigmas:n}}function fa(e){const t=new rr(3*Zi,3*Zi,e);return t.texture.mapping=ue,t.texture.name="PMREM.cubeUv",t.scissorTest=!0,t}function ma(e,t,n,r,s){e.viewport.set(t,n,r,s),e.scissor.set(t,n,r,s)}function ga(){const e=new Kn(1,1);return new Ji({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:e},inputEncoding:{value:ta[Yt]},outputEncoding:{value:ta[Yt]}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t",blending:v,depthTest:!1,depthWrite:!1})}function ya(){return new Ji({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:ta[Yt]},outputEncoding:{value:ta[Yt]}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t",blending:v,depthTest:!1,depthWrite:!1})}function xa(e){let t=new WeakMap,n=null;function r(e){const n=e.target;n.removeEventListener("dispose",r);const s=t.get(n);void 0!==s&&(t.delete(n),s.dispose())}return{get:function(s){if(s&&s.isTexture&&!1===s.isRenderTargetTexture){const i=s.mapping,a=i===oe||i===le,o=i===ie||i===ae;if(a||o){if(t.has(s))return t.get(s).texture;{const i=s.image;if(a&&i&&i.height>0||o&&i&&function(e){let t=0;for(let n=0;n<6;n++)void 0!==e[n]&&t++;return 6===t}(i)){const i=e.getRenderTarget();null===n&&(n=new ha(e));const o=a?n.fromEquirectangular(s):n.fromCubemap(s);return t.set(s,o),e.setRenderTarget(i),s.addEventListener("dispose",r),o.texture}return null}}}return s},dispose:function(){t=new WeakMap,null!==n&&(n.dispose(),n=null)}}}function va(e){const t={};function n(n){if(void 0!==t[n])return t[n];let r;switch(n){case"WEBGL_depth_texture":r=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=e.getExtension(n)}return t[n]=r,r}return{has:function(e){return null!==n(e)},init:function(e){e.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float")},get:function(e){const t=n(e);return null===t&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function ba(e,t,n,r){const s={},i=new WeakMap;function a(e){const o=e.target;null!==o.index&&t.remove(o.index);for(const e in o.attributes)t.remove(o.attributes[e]);o.removeEventListener("dispose",a),delete s[o.id];const l=i.get(o);l&&(t.remove(l),i.delete(o)),r.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,n.memory.geometries--}function o(e){const n=[],r=e.index,s=e.attributes.position;let a=0;if(null!==r){const e=r.array;a=r.version;for(let t=0,r=e.length;t<r;t+=3){const r=e[t+0],s=e[t+1],i=e[t+2];n.push(r,s,s,i,i,r)}}else{const e=s.array;a=s.version;for(let t=0,r=e.length/3-1;t<r;t+=3){const e=t+0,r=t+1,s=t+2;n.push(e,r,r,s,s,e)}}const o=new(Ws(n)>65535?Us:$s)(n,1);o.version=a;const l=i.get(e);l&&t.remove(l),i.set(e,o)}return{get:function(e,t){return!0===s[t.id]||(t.addEventListener("dispose",a),s[t.id]=!0,n.memory.geometries++),t},update:function(e){const n=e.attributes;for(const e in n)t.update(n[e],34962);const r=e.morphAttributes;for(const e in r){const n=r[e];for(let e=0,r=n.length;e<r;e++)t.update(n[e],34962)}},getWireframeAttribute:function(e){const t=i.get(e);if(t){const n=e.index;null!==n&&t.version<n.version&&o(e)}else o(e);return i.get(e)}}}function wa(e,t,n,r){const s=r.isWebGL2;let i,a,o;this.setMode=function(e){i=e},this.setIndex=function(e){a=e.type,o=e.bytesPerElement},this.render=function(t,r){e.drawElements(i,r,a,t*o),n.update(r,i,1)},this.renderInstances=function(r,l,u){if(0===u)return;let c,h;if(s)c=e,h="drawElementsInstanced";else if(c=t.get("ANGLE_instanced_arrays"),h="drawElementsInstancedANGLE",null===c)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");c[h](i,l,a,r*o,u),n.update(l,i,u)}}function _a(e){const t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(e,n,r){switch(t.calls++,n){case 4:t.triangles+=r*(e/3);break;case 1:t.lines+=r*(e/2);break;case 3:t.lines+=r*(e-1);break;case 2:t.lines+=r*e;break;case 0:t.points+=r*e;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",n)}}}}function Sa(e,t){return e[0]-t[0]}function Ta(e,t){return Math.abs(t[1])-Math.abs(e[1])}function Ea(e){const t={},n=new Float32Array(8),r=[];for(let e=0;e<8;e++)r[e]=[e,0];return{update:function(s,i,a,o){const l=s.morphTargetInfluences,u=void 0===l?0:l.length;let c=t[i.id];if(void 0===c||c.length!==u){c=[];for(let e=0;e<u;e++)c[e]=[e,0];t[i.id]=c}for(let e=0;e<u;e++){const t=c[e];t[0]=e,t[1]=l[e]}c.sort(Ta);for(let e=0;e<8;e++)e<u&&c[e][1]?(r[e][0]=c[e][0],r[e][1]=c[e][1]):(r[e][0]=Number.MAX_SAFE_INTEGER,r[e][1]=0);r.sort(Sa);const h=i.morphAttributes.position,d=i.morphAttributes.normal;let p=0;for(let e=0;e<8;e++){const t=r[e],s=t[0],a=t[1];s!==Number.MAX_SAFE_INTEGER&&a?(h&&i.getAttribute("morphTarget"+e)!==h[s]&&i.setAttribute("morphTarget"+e,h[s]),d&&i.getAttribute("morphNormal"+e)!==d[s]&&i.setAttribute("morphNormal"+e,d[s]),n[e]=a,p+=a):(h&&!0===i.hasAttribute("morphTarget"+e)&&i.deleteAttribute("morphTarget"+e),d&&!0===i.hasAttribute("morphNormal"+e)&&i.deleteAttribute("morphNormal"+e),n[e]=0)}const f=i.morphTargetsRelative?1:1-p;o.getUniforms().setValue(e,"morphTargetBaseInfluence",f),o.getUniforms().setValue(e,"morphTargetInfluences",n)}}}function Ma(e,t,n,r){let s=new WeakMap;function i(e){const t=e.target;t.removeEventListener("dispose",i),n.remove(t.instanceMatrix),null!==t.instanceColor&&n.remove(t.instanceColor)}return{update:function(e){const a=r.render.frame,o=e.geometry,l=t.get(e,o);return s.get(l)!==a&&(t.update(l),s.set(l,a)),e.isInstancedMesh&&(!1===e.hasEventListener("dispose",i)&&e.addEventListener("dispose",i),n.update(e.instanceMatrix,34962),null!==e.instanceColor&&n.update(e.instanceColor,34962)),l},dispose:function(){s=new WeakMap}}}class Ca extends er{constructor(e=null,t=1,n=1,r=1){super(null),this.image={data:e,width:t,height:n,depth:r},this.magFilter=fe,this.minFilter=fe,this.wrapR=de,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}Ca.prototype.isDataTexture2DArray=!0;class Aa extends er{constructor(e=null,t=1,n=1,r=1){super(null),this.image={data:e,width:t,height:n,depth:r},this.magFilter=fe,this.minFilter=fe,this.wrapR=de,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}Aa.prototype.isDataTexture3D=!0;const Ia=new er,Ra=new Ca,ka=new Aa,Na=new Ii,La=[],Da=[],Oa=new Float32Array(16),Pa=new Float32Array(9),Fa=new Float32Array(4);function $a(e,t,n){const r=e[0];if(r<=0||r>0)return e;const s=t*n;let i=La[s];if(void 0===i&&(i=new Float32Array(s),La[s]=i),0!==t){r.toArray(i,0);for(let r=1,s=0;r!==t;++r)s+=n,e[r].toArray(i,s)}return i}function Ba(e,t){if(e.length!==t.length)return!1;for(let n=0,r=e.length;n<r;n++)if(e[n]!==t[n])return!1;return!0}function Ua(e,t){for(let n=0,r=t.length;n<r;n++)e[n]=t[n]}function za(e,t){let n=Da[t];void 0===n&&(n=new Int32Array(t),Da[t]=n);for(let r=0;r!==t;++r)n[r]=e.allocateTextureUnit();return n}function Va(e,t){const n=this.cache;n[0]!==t&&(e.uniform1f(this.addr,t),n[0]=t)}function Ga(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2f(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(Ba(n,t))return;e.uniform2fv(this.addr,t),Ua(n,t)}}function Wa(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3f(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else if(void 0!==t.r)n[0]===t.r&&n[1]===t.g&&n[2]===t.b||(e.uniform3f(this.addr,t.r,t.g,t.b),n[0]=t.r,n[1]=t.g,n[2]=t.b);else{if(Ba(n,t))return;e.uniform3fv(this.addr,t),Ua(n,t)}}function Ha(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(Ba(n,t))return;e.uniform4fv(this.addr,t),Ua(n,t)}}function ja(e,t){const n=this.cache,r=t.elements;if(void 0===r){if(Ba(n,t))return;e.uniformMatrix2fv(this.addr,!1,t),Ua(n,t)}else{if(Ba(n,r))return;Fa.set(r),e.uniformMatrix2fv(this.addr,!1,Fa),Ua(n,r)}}function Xa(e,t){const n=this.cache,r=t.elements;if(void 0===r){if(Ba(n,t))return;e.uniformMatrix3fv(this.addr,!1,t),Ua(n,t)}else{if(Ba(n,r))return;Pa.set(r),e.uniformMatrix3fv(this.addr,!1,Pa),Ua(n,r)}}function qa(e,t){const n=this.cache,r=t.elements;if(void 0===r){if(Ba(n,t))return;e.uniformMatrix4fv(this.addr,!1,t),Ua(n,t)}else{if(Ba(n,r))return;Oa.set(r),e.uniformMatrix4fv(this.addr,!1,Oa),Ua(n,r)}}function Ka(e,t){const n=this.cache;n[0]!==t&&(e.uniform1i(this.addr,t),n[0]=t)}function Ya(e,t){const n=this.cache;Ba(n,t)||(e.uniform2iv(this.addr,t),Ua(n,t))}function Ja(e,t){const n=this.cache;Ba(n,t)||(e.uniform3iv(this.addr,t),Ua(n,t))}function Za(e,t){const n=this.cache;Ba(n,t)||(e.uniform4iv(this.addr,t),Ua(n,t))}function Qa(e,t){const n=this.cache;n[0]!==t&&(e.uniform1ui(this.addr,t),n[0]=t)}function eo(e,t){const n=this.cache;Ba(n,t)||(e.uniform2uiv(this.addr,t),Ua(n,t))}function to(e,t){const n=this.cache;Ba(n,t)||(e.uniform3uiv(this.addr,t),Ua(n,t))}function no(e,t){const n=this.cache;Ba(n,t)||(e.uniform4uiv(this.addr,t),Ua(n,t))}function ro(e,t,n){const r=this.cache,s=n.allocateTextureUnit();r[0]!==s&&(e.uniform1i(this.addr,s),r[0]=s),n.safeSetTexture2D(t||Ia,s)}function so(e,t,n){const r=this.cache,s=n.allocateTextureUnit();r[0]!==s&&(e.uniform1i(this.addr,s),r[0]=s),n.setTexture3D(t||ka,s)}function io(e,t,n){const r=this.cache,s=n.allocateTextureUnit();r[0]!==s&&(e.uniform1i(this.addr,s),r[0]=s),n.safeSetTextureCube(t||Na,s)}function ao(e,t,n){const r=this.cache,s=n.allocateTextureUnit();r[0]!==s&&(e.uniform1i(this.addr,s),r[0]=s),n.setTexture2DArray(t||Ra,s)}function oo(e,t){e.uniform1fv(this.addr,t)}function lo(e,t){const n=$a(t,this.size,2);e.uniform2fv(this.addr,n)}function uo(e,t){const n=$a(t,this.size,3);e.uniform3fv(this.addr,n)}function co(e,t){const n=$a(t,this.size,4);e.uniform4fv(this.addr,n)}function ho(e,t){const n=$a(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,n)}function po(e,t){const n=$a(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,n)}function fo(e,t){const n=$a(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,n)}function mo(e,t){e.uniform1iv(this.addr,t)}function go(e,t){e.uniform2iv(this.addr,t)}function yo(e,t){e.uniform3iv(this.addr,t)}function xo(e,t){e.uniform4iv(this.addr,t)}function vo(e,t){e.uniform1uiv(this.addr,t)}function bo(e,t){e.uniform2uiv(this.addr,t)}function wo(e,t){e.uniform3uiv(this.addr,t)}function _o(e,t){e.uniform4uiv(this.addr,t)}function So(e,t,n){const r=t.length,s=za(n,r);e.uniform1iv(this.addr,s);for(let e=0;e!==r;++e)n.safeSetTexture2D(t[e]||Ia,s[e])}function To(e,t,n){const r=t.length,s=za(n,r);e.uniform1iv(this.addr,s);for(let e=0;e!==r;++e)n.safeSetTextureCube(t[e]||Na,s[e])}function Eo(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=function(e){switch(e){case 5126:return Va;case 35664:return Ga;case 35665:return Wa;case 35666:return Ha;case 35674:return ja;case 35675:return Xa;case 35676:return qa;case 5124:case 35670:return Ka;case 35667:case 35671:return Ya;case 35668:case 35672:return Ja;case 35669:case 35673:return Za;case 5125:return Qa;case 36294:return eo;case 36295:return to;case 36296:return no;case 35678:case 36198:case 36298:case 36306:case 35682:return ro;case 35679:case 36299:case 36307:return so;case 35680:case 36300:case 36308:case 36293:return io;case 36289:case 36303:case 36311:case 36292:return ao}}(t.type)}function Mo(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=function(e){switch(e){case 5126:return oo;case 35664:return lo;case 35665:return uo;case 35666:return co;case 35674:return ho;case 35675:return po;case 35676:return fo;case 5124:case 35670:return mo;case 35667:case 35671:return go;case 35668:case 35672:return yo;case 35669:case 35673:return xo;case 5125:return vo;case 36294:return bo;case 36295:return wo;case 36296:return _o;case 35678:case 36198:case 36298:case 36306:case 35682:return So;case 35680:case 36300:case 36308:case 36293:return To}}(t.type)}function Co(e){this.id=e,this.seq=[],this.map={}}Mo.prototype.updateCache=function(e){const t=this.cache;e instanceof Float32Array&&t.length!==e.length&&(this.cache=new Float32Array(e.length)),Ua(t,e)},Co.prototype.setValue=function(e,t,n){const r=this.seq;for(let s=0,i=r.length;s!==i;++s){const i=r[s];i.setValue(e,t[i.id],n)}};const Ao=/(\w+)(\])?(\[|\.)?/g;function Io(e,t){e.seq.push(t),e.map[t.id]=t}function Ro(e,t,n){const r=e.name,s=r.length;for(Ao.lastIndex=0;;){const i=Ao.exec(r),a=Ao.lastIndex;let o=i[1];const l="]"===i[2],u=i[3];if(l&&(o|=0),void 0===u||"["===u&&a+2===s){Io(n,void 0===u?new Eo(o,e,t):new Mo(o,e,t));break}{let e=n.map[o];void 0===e&&(e=new Co(o),Io(n,e)),n=e}}}function ko(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,35718);for(let r=0;r<n;++r){const n=e.getActiveUniform(t,r);Ro(n,e.getUniformLocation(t,n.name),this)}}function No(e,t,n){const r=e.createShader(t);return e.shaderSource(r,n),e.compileShader(r),r}ko.prototype.setValue=function(e,t,n,r){const s=this.map[t];void 0!==s&&s.setValue(e,n,r)},ko.prototype.setOptional=function(e,t,n){const r=t[n];void 0!==r&&this.setValue(e,n,r)},ko.upload=function(e,t,n,r){for(let s=0,i=t.length;s!==i;++s){const i=t[s],a=n[i.id];!1!==a.needsUpdate&&i.setValue(e,a.value,r)}},ko.seqWithValue=function(e,t){const n=[];for(let r=0,s=e.length;r!==s;++r){const s=e[r];s.id in t&&n.push(s)}return n};let Lo=0;function Do(e){switch(e){case Yt:return["Linear","( value )"];case Jt:return["sRGB","( value )"];case Qt:return["RGBE","( value )"];case tn:return["RGBM","( value, 7.0 )"];case nn:return["RGBM","( value, 16.0 )"];case rn:return["RGBD","( value, 256.0 )"];case Zt:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case en:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"]}}function Oo(e,t,n){const r=e.getShaderParameter(t,35713),s=e.getShaderInfoLog(t).trim();return r&&""===s?"":n.toUpperCase()+"\n\n"+s+"\n\n"+function(e){const t=e.split("\n");for(let e=0;e<t.length;e++)t[e]=e+1+": "+t[e];return t.join("\n")}(e.getShaderSource(t))}function Po(e,t){const n=Do(t);return"vec4 "+e+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function Fo(e,t){const n=Do(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function $o(e,t){let n;switch(t){case Q:n="Linear";break;case ee:n="Reinhard";break;case te:n="OptimizedCineon";break;case ne:n="ACESFilmic";break;case re:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),n="Linear"}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function Bo(e){return""!==e}function Uo(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function zo(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const Vo=/^[ \t]*#include +<([\w\d./]+)>/gm;function Go(e){return e.replace(Vo,Wo)}function Wo(e,t){const n=zi[t];if(void 0===n)throw new Error("Can not resolve #include <"+t+">");return Go(n)}const Ho=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,jo=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Xo(e){return e.replace(jo,Ko).replace(Ho,qo)}function qo(e,t,n,r){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Ko(0,t,n,r)}function Ko(e,t,n,r){let s="";for(let e=parseInt(t);e<parseInt(n);e++)s+=r.replace(/\[\s*i\s*\]/g,"[ "+e+" ]").replace(/UNROLLED_LOOP_INDEX/g,e);return s}function Yo(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function Jo(e,t,n,r){const s=e.getContext(),i=n.defines;let a=n.vertexShader,o=n.fragmentShader;const l=function(e){let t="SHADOWMAP_TYPE_BASIC";return e.shadowMapType===h?t="SHADOWMAP_TYPE_PCF":e.shadowMapType===d?t="SHADOWMAP_TYPE_PCF_SOFT":e.shadowMapType===p&&(t="SHADOWMAP_TYPE_VSM"),t}(n),u=function(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case ie:case ae:t="ENVMAP_TYPE_CUBE";break;case ue:case ce:t="ENVMAP_TYPE_CUBE_UV"}return t}(n),c=function(e){let t="ENVMAP_MODE_REFLECTION";if(e.envMap)switch(e.envMapMode){case ae:case ce:t="ENVMAP_MODE_REFRACTION"}return t}(n),f=function(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case K:t="ENVMAP_BLENDING_MULTIPLY";break;case Y:t="ENVMAP_BLENDING_MIX";break;case J:t="ENVMAP_BLENDING_ADD"}return t}(n),m=e.gammaFactor>0?e.gammaFactor:1,g=n.isWebGL2?"":function(e){return[e.extensionDerivatives||e.envMapCubeUV||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap||e.transmission)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Bo).join("\n")}(n),y=function(e){const t=[];for(const n in e){const r=e[n];!1!==r&&t.push("#define "+n+" "+r)}return t.join("\n")}(i),x=s.createProgram();let v,b,w=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(v=[y].filter(Bo).join("\n"),v.length>0&&(v+="\n"),b=[g,y].filter(Bo).join("\n"),b.length>0&&(b+="\n")):(v=[Yo(n),"#define SHADER_NAME "+n.shaderName,y,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+m,"#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularTintMap?"#define USE_SPECULARTINTMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Bo).join("\n"),b=[g,Yo(n),"#define SHADER_NAME "+n.shaderName,y,"#define GAMMA_FACTOR "+m,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+u:"",n.envMap?"#define "+c:"",n.envMap?"#define "+f:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularTintMap?"#define USE_SPECULARTINTMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.sheenTint?"#define USE_SHEEN":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==Z?"#define TONE_MAPPING":"",n.toneMapping!==Z?zi.tonemapping_pars_fragment:"",n.toneMapping!==Z?$o("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.format===Fe?"#define OPAQUE":"",zi.encodings_pars_fragment,n.map?Po("mapTexelToLinear",n.mapEncoding):"",n.matcap?Po("matcapTexelToLinear",n.matcapEncoding):"",n.envMap?Po("envMapTexelToLinear",n.envMapEncoding):"",n.emissiveMap?Po("emissiveMapTexelToLinear",n.emissiveMapEncoding):"",n.specularTintMap?Po("specularTintMapTexelToLinear",n.specularTintMapEncoding):"",n.lightMap?Po("lightMapTexelToLinear",n.lightMapEncoding):"",Fo("linearToOutputTexel",n.outputEncoding),n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(Bo).join("\n")),a=Go(a),a=Uo(a,n),a=zo(a,n),o=Go(o),o=Uo(o,n),o=zo(o,n),a=Xo(a),o=Xo(o),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(w="#version 300 es\n",v=["#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+v,b=["#define varying in",n.glslVersion===On?"":"out highp vec4 pc_fragColor;",n.glslVersion===On?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+b);const _=w+b+o,S=No(s,35633,w+v+a),T=No(s,35632,_);if(s.attachShader(x,S),s.attachShader(x,T),void 0!==n.index0AttributeName?s.bindAttribLocation(x,0,n.index0AttributeName):!0===n.morphTargets&&s.bindAttribLocation(x,0,"position"),s.linkProgram(x),e.debug.checkShaderErrors){const e=s.getProgramInfoLog(x).trim(),t=s.getShaderInfoLog(S).trim(),n=s.getShaderInfoLog(T).trim();let r=!0,i=!0;if(!1===s.getProgramParameter(x,35714)){r=!1;const t=Oo(s,S,"vertex"),n=Oo(s,T,"fragment");console.error("THREE.WebGLProgram: Shader Error "+s.getError()+" - VALIDATE_STATUS "+s.getProgramParameter(x,35715)+"\n\nProgram Info Log: "+e+"\n"+t+"\n"+n)}else""!==e?console.warn("THREE.WebGLProgram: Program Info Log:",e):""!==t&&""!==n||(i=!1);i&&(this.diagnostics={runnable:r,programLog:e,vertexShader:{log:t,prefix:v},fragmentShader:{log:n,prefix:b}})}let E,M;return s.deleteShader(S),s.deleteShader(T),this.getUniforms=function(){return void 0===E&&(E=new ko(s,x)),E},this.getAttributes=function(){return void 0===M&&(M=function(e,t){const n={},r=e.getProgramParameter(t,35721);for(let s=0;s<r;s++){const r=e.getActiveAttrib(t,s),i=r.name;let a=1;35674===r.type&&(a=2),35675===r.type&&(a=3),35676===r.type&&(a=4),n[i]={type:r.type,location:e.getAttribLocation(t,i),locationSize:a}}return n}(s,x)),M},this.destroy=function(){r.releaseStatesOfProgram(this),s.deleteProgram(x),this.program=void 0},this.name=n.shaderName,this.id=Lo++,this.cacheKey=t,this.usedTimes=1,this.program=x,this.vertexShader=S,this.fragmentShader=T,this}function Zo(e,t,n,r,s,i,a){const o=[],l=s.isWebGL2,u=s.logarithmicDepthBuffer,c=s.floatVertexTextures,h=s.maxVertexUniforms,d=s.vertexTextures;let p=s.precision;const f={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},y=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoat","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","specularIntensityMap","specularTintMap","specularTintMapEncoding","roughnessMap","metalnessMap","gradientMap","alphaMap","alphaTest","combine","vertexColors","vertexAlphas","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","format","sheenTint","transmission","transmissionMap","thicknessMap"];function x(e){let t;return e&&e.isTexture?t=e.encoding:e&&e.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),t=e.texture.encoding):t=Yt,t}return{getParameters:function(i,o,y,v,b){const w=v.fog,_=i.isMeshStandardMaterial?v.environment:null,S=(i.isMeshStandardMaterial?n:t).get(i.envMap||_),T=f[i.type],E=b.isSkinnedMesh?function(e){const t=e.skeleton.bones;if(c)return 1024;{const e=h,n=Math.floor((e-20)/4),r=Math.min(n,t.length);return r<t.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+t.length+" bones. This GPU supports "+r+"."),0):r}}(b):0;let M,C;if(null!==i.precision&&(p=s.getMaxPrecision(i.precision),p!==i.precision&&console.warn("THREE.WebGLProgram.getParameters:",i.precision,"not supported, using",p,"instead.")),T){const e=Gi[T];M=e.vertexShader,C=e.fragmentShader}else M=i.vertexShader,C=i.fragmentShader;const A=e.getRenderTarget(),I=i.alphaTest>0,R=i.clearcoat>0;return{isWebGL2:l,shaderID:T,shaderName:i.type,vertexShader:M,fragmentShader:C,defines:i.defines,isRawShaderMaterial:!0===i.isRawShaderMaterial,glslVersion:i.glslVersion,precision:p,instancing:!0===b.isInstancedMesh,instancingColor:!0===b.isInstancedMesh&&null!==b.instanceColor,supportsVertexTextures:d,outputEncoding:null!==A?x(A.texture):e.outputEncoding,map:!!i.map,mapEncoding:x(i.map),matcap:!!i.matcap,matcapEncoding:x(i.matcap),envMap:!!S,envMapMode:S&&S.mapping,envMapEncoding:x(S),envMapCubeUV:!!S&&(S.mapping===ue||S.mapping===ce),lightMap:!!i.lightMap,lightMapEncoding:x(i.lightMap),aoMap:!!i.aoMap,emissiveMap:!!i.emissiveMap,emissiveMapEncoding:x(i.emissiveMap),bumpMap:!!i.bumpMap,normalMap:!!i.normalMap,objectSpaceNormalMap:i.normalMapType===ln,tangentSpaceNormalMap:i.normalMapType===on,clearcoat:R,clearcoatMap:R&&!!i.clearcoatMap,clearcoatRoughnessMap:R&&!!i.clearcoatRoughnessMap,clearcoatNormalMap:R&&!!i.clearcoatNormalMap,displacementMap:!!i.displacementMap,roughnessMap:!!i.roughnessMap,metalnessMap:!!i.metalnessMap,specularMap:!!i.specularMap,specularIntensityMap:!!i.specularIntensityMap,specularTintMap:!!i.specularTintMap,specularTintMapEncoding:x(i.specularTintMap),alphaMap:!!i.alphaMap,alphaTest:I,gradientMap:!!i.gradientMap,sheenTint:!!i.sheenTint&&(i.sheenTint.r>0||i.sheenTint.g>0||i.sheenTint.b>0),transmission:i.transmission>0,transmissionMap:!!i.transmissionMap,thicknessMap:!!i.thicknessMap,combine:i.combine,vertexTangents:!!i.normalMap&&!!b.geometry&&!!b.geometry.attributes.tangent,vertexColors:i.vertexColors,vertexAlphas:!0===i.vertexColors&&!!b.geometry&&!!b.geometry.attributes.color&&4===b.geometry.attributes.color.itemSize,vertexUvs:!!(i.map||i.bumpMap||i.normalMap||i.specularMap||i.alphaMap||i.emissiveMap||i.roughnessMap||i.metalnessMap||i.clearcoatMap||i.clearcoatRoughnessMap||i.clearcoatNormalMap||i.displacementMap||i.transmissionMap||i.thicknessMap||i.specularIntensityMap||i.specularTintMap),uvsVertexOnly:!(i.map||i.bumpMap||i.normalMap||i.specularMap||i.alphaMap||i.emissiveMap||i.roughnessMap||i.metalnessMap||i.clearcoatNormalMap||i.transmission>0||i.transmissionMap||i.thicknessMap||i.specularIntensityMap||i.specularTintMap||!i.displacementMap),fog:!!w,useFog:i.fog,fogExp2:w&&w.isFogExp2,flatShading:!!i.flatShading,sizeAttenuation:i.sizeAttenuation,logarithmicDepthBuffer:u,skinning:!0===b.isSkinnedMesh&&E>0,maxBones:E,useVertexTexture:c,morphTargets:!!b.geometry&&!!b.geometry.morphAttributes.position,morphNormals:!!b.geometry&&!!b.geometry.morphAttributes.normal,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,format:i.format,dithering:i.dithering,shadowMapEnabled:e.shadowMap.enabled&&y.length>0,shadowMapType:e.shadowMap.type,toneMapping:i.toneMapped?e.toneMapping:Z,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:i.premultipliedAlpha,doubleSided:i.side===g,flipSided:i.side===m,depthPacking:void 0!==i.depthPacking&&i.depthPacking,index0AttributeName:i.index0AttributeName,extensionDerivatives:i.extensions&&i.extensions.derivatives,extensionFragDepth:i.extensions&&i.extensions.fragDepth,extensionDrawBuffers:i.extensions&&i.extensions.drawBuffers,extensionShaderTextureLOD:i.extensions&&i.extensions.shaderTextureLOD,rendererExtensionFragDepth:l||r.has("EXT_frag_depth"),rendererExtensionDrawBuffers:l||r.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:l||r.has("EXT_shader_texture_lod"),customProgramCacheKey:i.customProgramCacheKey()}},getProgramCacheKey:function(t){const n=[];if(t.shaderID?n.push(t.shaderID):(n.push(t.fragmentShader),n.push(t.vertexShader)),void 0!==t.defines)for(const e in t.defines)n.push(e),n.push(t.defines[e]);if(!1===t.isRawShaderMaterial){for(let e=0;e<y.length;e++)n.push(t[y[e]]);n.push(e.outputEncoding),n.push(e.gammaFactor)}return n.push(t.customProgramCacheKey),n.join()},getUniforms:function(e){const t=f[e.type];let n;if(t){const e=Gi[t];n=Si.clone(e.uniforms)}else n=e.uniforms;return n},acquireProgram:function(t,n){let r;for(let e=0,t=o.length;e<t;e++){const t=o[e];if(t.cacheKey===n){r=t,++r.usedTimes;break}}return void 0===r&&(r=new Jo(e,n,t,i),o.push(r)),r},releaseProgram:function(e){if(0==--e.usedTimes){const t=o.indexOf(e);o[t]=o[o.length-1],o.pop(),e.destroy()}},programs:o}}function Qo(){let e=new WeakMap;return{get:function(t){let n=e.get(t);return void 0===n&&(n={},e.set(t,n)),n},remove:function(t){e.delete(t)},update:function(t,n,r){e.get(t)[n]=r},dispose:function(){e=new WeakMap}}}function el(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.program!==t.program?e.program.id-t.program.id:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function tl(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function nl(e){const t=[];let n=0;const r=[],s=[],i=[],a={id:-1};function o(r,s,i,o,l,u){let c=t[n];const h=e.get(i);return void 0===c?(c={id:r.id,object:r,geometry:s,material:i,program:h.program||a,groupOrder:o,renderOrder:r.renderOrder,z:l,group:u},t[n]=c):(c.id=r.id,c.object=r,c.geometry=s,c.material=i,c.program=h.program||a,c.groupOrder=o,c.renderOrder=r.renderOrder,c.z=l,c.group=u),n++,c}return{opaque:r,transmissive:s,transparent:i,init:function(){n=0,r.length=0,s.length=0,i.length=0},push:function(e,t,n,a,l,u){const c=o(e,t,n,a,l,u);n.transmission>0?s.push(c):!0===n.transparent?i.push(c):r.push(c)},unshift:function(e,t,n,a,l,u){const c=o(e,t,n,a,l,u);n.transmission>0?s.unshift(c):!0===n.transparent?i.unshift(c):r.unshift(c)},finish:function(){for(let e=n,r=t.length;e<r;e++){const n=t[e];if(null===n.id)break;n.id=null,n.object=null,n.geometry=null,n.material=null,n.program=null,n.group=null}},sort:function(e,t){r.length>1&&r.sort(e||el),s.length>1&&s.sort(t||tl),i.length>1&&i.sort(t||tl)}}}function rl(e){let t=new WeakMap;return{get:function(n,r){let s;return!1===t.has(n)?(s=new nl(e),t.set(n,[s])):r>=t.get(n).length?(s=new nl(e),t.get(n).push(s)):s=t.get(n)[r],s},dispose:function(){t=new WeakMap}}}function sl(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let n;switch(t.type){case"DirectionalLight":n={direction:new or,color:new Is};break;case"SpotLight":n={position:new or,direction:new or,color:new Is,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new or,color:new Is,distance:0,decay:0};break;case"HemisphereLight":n={direction:new or,skyColor:new Is,groundColor:new Is};break;case"RectAreaLight":n={color:new Is,position:new or,halfWidth:new or,halfHeight:new or}}return e[t.id]=n,n}}}let il=0;function al(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function ol(e,t){const n=new sl,r=function(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let n;switch(t.type){case"DirectionalLight":case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Kn};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Kn,shadowCameraNear:1,shadowCameraFar:1e3}}return e[t.id]=n,n}}}(),s={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let e=0;e<9;e++)s.probe.push(new or);const i=new or,a=new $r,o=new $r;return{setup:function(i,a){let o=0,l=0,u=0;for(let e=0;e<9;e++)s.probe[e].set(0,0,0);let c=0,h=0,d=0,p=0,f=0,m=0,g=0,y=0;i.sort(al);const x=!0!==a?Math.PI:1;for(let e=0,t=i.length;e<t;e++){const t=i[e],a=t.color,v=t.intensity,b=t.distance,w=t.shadow&&t.shadow.map?t.shadow.map.texture:null;if(t.isAmbientLight)o+=a.r*v*x,l+=a.g*v*x,u+=a.b*v*x;else if(t.isLightProbe)for(let e=0;e<9;e++)s.probe[e].addScaledVector(t.sh.coefficients[e],v);else if(t.isDirectionalLight){const e=n.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity*x),t.castShadow){const e=t.shadow,n=r.get(t);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,s.directionalShadow[c]=n,s.directionalShadowMap[c]=w,s.directionalShadowMatrix[c]=t.shadow.matrix,m++}s.directional[c]=e,c++}else if(t.isSpotLight){const e=n.get(t);if(e.position.setFromMatrixPosition(t.matrixWorld),e.color.copy(a).multiplyScalar(v*x),e.distance=b,e.coneCos=Math.cos(t.angle),e.penumbraCos=Math.cos(t.angle*(1-t.penumbra)),e.decay=t.decay,t.castShadow){const e=t.shadow,n=r.get(t);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,s.spotShadow[d]=n,s.spotShadowMap[d]=w,s.spotShadowMatrix[d]=t.shadow.matrix,y++}s.spot[d]=e,d++}else if(t.isRectAreaLight){const e=n.get(t);e.color.copy(a).multiplyScalar(v),e.halfWidth.set(.5*t.width,0,0),e.halfHeight.set(0,.5*t.height,0),s.rectArea[p]=e,p++}else if(t.isPointLight){const e=n.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity*x),e.distance=t.distance,e.decay=t.decay,t.castShadow){const e=t.shadow,n=r.get(t);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,n.shadowCameraNear=e.camera.near,n.shadowCameraFar=e.camera.far,s.pointShadow[h]=n,s.pointShadowMap[h]=w,s.pointShadowMatrix[h]=t.shadow.matrix,g++}s.point[h]=e,h++}else if(t.isHemisphereLight){const e=n.get(t);e.skyColor.copy(t.color).multiplyScalar(v*x),e.groundColor.copy(t.groundColor).multiplyScalar(v*x),s.hemi[f]=e,f++}}p>0&&(t.isWebGL2||!0===e.has("OES_texture_float_linear")?(s.rectAreaLTC1=Vi.LTC_FLOAT_1,s.rectAreaLTC2=Vi.LTC_FLOAT_2):!0===e.has("OES_texture_half_float_linear")?(s.rectAreaLTC1=Vi.LTC_HALF_1,s.rectAreaLTC2=Vi.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),s.ambient[0]=o,s.ambient[1]=l,s.ambient[2]=u;const v=s.hash;v.directionalLength===c&&v.pointLength===h&&v.spotLength===d&&v.rectAreaLength===p&&v.hemiLength===f&&v.numDirectionalShadows===m&&v.numPointShadows===g&&v.numSpotShadows===y||(s.directional.length=c,s.spot.length=d,s.rectArea.length=p,s.point.length=h,s.hemi.length=f,s.directionalShadow.length=m,s.directionalShadowMap.length=m,s.pointShadow.length=g,s.pointShadowMap.length=g,s.spotShadow.length=y,s.spotShadowMap.length=y,s.directionalShadowMatrix.length=m,s.pointShadowMatrix.length=g,s.spotShadowMatrix.length=y,v.directionalLength=c,v.pointLength=h,v.spotLength=d,v.rectAreaLength=p,v.hemiLength=f,v.numDirectionalShadows=m,v.numPointShadows=g,v.numSpotShadows=y,s.version=il++)},setupView:function(e,t){let n=0,r=0,l=0,u=0,c=0;const h=t.matrixWorldInverse;for(let t=0,d=e.length;t<d;t++){const d=e[t];if(d.isDirectionalLight){const e=s.directional[n];e.direction.setFromMatrixPosition(d.matrixWorld),i.setFromMatrixPosition(d.target.matrixWorld),e.direction.sub(i),e.direction.transformDirection(h),n++}else if(d.isSpotLight){const e=s.spot[l];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(h),e.direction.setFromMatrixPosition(d.matrixWorld),i.setFromMatrixPosition(d.target.matrixWorld),e.direction.sub(i),e.direction.transformDirection(h),l++}else if(d.isRectAreaLight){const e=s.rectArea[u];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(h),o.identity(),a.copy(d.matrixWorld),a.premultiply(h),o.extractRotation(a),e.halfWidth.set(.5*d.width,0,0),e.halfHeight.set(0,.5*d.height,0),e.halfWidth.applyMatrix4(o),e.halfHeight.applyMatrix4(o),u++}else if(d.isPointLight){const e=s.point[r];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(h),r++}else if(d.isHemisphereLight){const e=s.hemi[c];e.direction.setFromMatrixPosition(d.matrixWorld),e.direction.transformDirection(h),e.direction.normalize(),c++}}},state:s}}function ll(e,t){const n=new ol(e,t),r=[],s=[];return{init:function(){r.length=0,s.length=0},state:{lightsArray:r,shadowsArray:s,lights:n},setupLights:function(e){n.setup(r,e)},setupLightsView:function(e){n.setupView(r,e)},pushLight:function(e){r.push(e)},pushShadow:function(e){s.push(e)}}}function ul(e,t){let n=new WeakMap;return{get:function(r,s=0){let i;return!1===n.has(r)?(i=new ll(e,t),n.set(r,[i])):s>=n.get(r).length?(i=new ll(e,t),n.get(r).push(i)):i=n.get(r)[s],i},dispose:function(){n=new WeakMap}}}class cl extends _s{constructor(e){super(),this.type="MeshDepthMaterial",this.depthPacking=sn,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}cl.prototype.isMeshDepthMaterial=!0;class hl extends _s{constructor(e){super(),this.type="MeshDistanceMaterial",this.referencePosition=new or,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}hl.prototype.isMeshDistanceMaterial=!0;var dl="uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\nuniform float samples;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}",pl="void main() {\n\tgl_Position = vec4( position, 1.0 );\n}";function fl(e,t,n){let r=new Fi;const s=new Kn,i=new Kn,a=new nr,o=new cl({depthPacking:an}),l=new hl,u={},c=n.maxTextureSize,d={0:m,1:f,2:g},y=new Ti({uniforms:{shadow_pass:{value:null},resolution:{value:new Kn},radius:{value:4},samples:{value:8}},vertexShader:pl,fragmentShader:dl}),x=y.clone();x.defines.HORIZONTAL_PASS=1;const b=new ei;b.setAttribute("position",new Ls(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const w=new xi(b,y),_=this;function S(n,r){const s=t.update(w);y.uniforms.shadow_pass.value=n.map.texture,y.uniforms.resolution.value=n.mapSize,y.uniforms.radius.value=n.radius,y.uniforms.samples.value=n.blurSamples,e.setRenderTarget(n.mapPass),e.clear(),e.renderBufferDirect(r,null,s,y,w,null),x.uniforms.shadow_pass.value=n.mapPass.texture,x.uniforms.resolution.value=n.mapSize,x.uniforms.radius.value=n.radius,x.uniforms.samples.value=n.blurSamples,e.setRenderTarget(n.map),e.clear(),e.renderBufferDirect(r,null,s,x,w,null)}function T(t,n,r,s,i,a,c){let h=null;const f=!0===s.isPointLight?t.customDistanceMaterial:t.customDepthMaterial;if(h=void 0!==f?f:!0===s.isPointLight?l:o,e.localClippingEnabled&&!0===r.clipShadows&&0!==r.clippingPlanes.length||r.displacementMap&&0!==r.displacementScale||r.alphaMap&&r.alphaTest>0){const e=h.uuid,t=r.uuid;let n=u[e];void 0===n&&(n={},u[e]=n);let s=n[t];void 0===s&&(s=h.clone(),n[t]=s),h=s}return h.visible=r.visible,h.wireframe=r.wireframe,h.side=c===p?null!==r.shadowSide?r.shadowSide:r.side:null!==r.shadowSide?r.shadowSide:d[r.side],h.alphaMap=r.alphaMap,h.alphaTest=r.alphaTest,h.clipShadows=r.clipShadows,h.clippingPlanes=r.clippingPlanes,h.clipIntersection=r.clipIntersection,h.displacementMap=r.displacementMap,h.displacementScale=r.displacementScale,h.displacementBias=r.displacementBias,h.wireframeLinewidth=r.wireframeLinewidth,h.linewidth=r.linewidth,!0===s.isPointLight&&!0===h.isMeshDistanceMaterial&&(h.referencePosition.setFromMatrixPosition(s.matrixWorld),h.nearDistance=i,h.farDistance=a),h}function E(n,s,i,a,o){if(!1===n.visible)return;if(n.layers.test(s.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&o===p)&&(!n.frustumCulled||r.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,n.matrixWorld);const r=t.update(n),s=n.material;if(Array.isArray(s)){const t=r.groups;for(let l=0,u=t.length;l<u;l++){const u=t[l],c=s[u.materialIndex];if(c&&c.visible){const t=T(n,0,c,a,i.near,i.far,o);e.renderBufferDirect(i,null,r,t,n,u)}}}else if(s.visible){const t=T(n,0,s,a,i.near,i.far,o);e.renderBufferDirect(i,null,r,t,n,null)}}const l=n.children;for(let e=0,t=l.length;e<t;e++)E(l[e],s,i,a,o)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=h,this.render=function(t,n,o){if(!1===_.enabled)return;if(!1===_.autoUpdate&&!1===_.needsUpdate)return;if(0===t.length)return;const l=e.getRenderTarget(),u=e.getActiveCubeFace(),h=e.getActiveMipmapLevel(),d=e.state;d.setBlending(v),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);for(let l=0,u=t.length;l<u;l++){const u=t[l],h=u.shadow;if(void 0===h){console.warn("THREE.WebGLShadowMap:",u,"has no shadow.");continue}if(!1===h.autoUpdate&&!1===h.needsUpdate)continue;s.copy(h.mapSize);const f=h.getFrameExtents();if(s.multiply(f),i.copy(h.mapSize),(s.x>c||s.y>c)&&(s.x>c&&(i.x=Math.floor(c/f.x),s.x=i.x*f.x,h.mapSize.x=i.x),s.y>c&&(i.y=Math.floor(c/f.y),s.y=i.y*f.y,h.mapSize.y=i.y)),null===h.map&&!h.isPointLightShadow&&this.type===p){const e={minFilter:ve,magFilter:ve,format:$e};h.map=new rr(s.x,s.y,e),h.map.texture.name=u.name+".shadowMap",h.mapPass=new rr(s.x,s.y,e),h.camera.updateProjectionMatrix()}if(null===h.map){const e={minFilter:fe,magFilter:fe,format:$e};h.map=new rr(s.x,s.y,e),h.map.texture.name=u.name+".shadowMap",h.camera.updateProjectionMatrix()}e.setRenderTarget(h.map),e.clear();const m=h.getViewportCount();for(let e=0;e<m;e++){const t=h.getViewport(e);a.set(i.x*t.x,i.y*t.y,i.x*t.z,i.y*t.w),d.viewport(a),h.updateMatrices(u,e),r=h.getFrustum(),E(n,o,h.camera,u,this.type)}h.isPointLightShadow||this.type!==p||S(h,o),h.needsUpdate=!1}_.needsUpdate=!1,e.setRenderTarget(l,u,h)}}function ml(e,t,n){const r=n.isWebGL2,s=new function(){let t=!1;const n=new nr;let r=null;const s=new nr(0,0,0,0);return{setMask:function(n){r===n||t||(e.colorMask(n,n,n,n),r=n)},setLocked:function(e){t=e},setClear:function(t,r,i,a,o){!0===o&&(t*=a,r*=a,i*=a),n.set(t,r,i,a),!1===s.equals(n)&&(e.clearColor(t,r,i,a),s.copy(n))},reset:function(){t=!1,r=null,s.set(-1,0,0,0)}}},i=new function(){let t=!1,n=null,r=null,s=null;return{setTest:function(e){e?xe(2929):ve(2929)},setMask:function(r){n===r||t||(e.depthMask(r),n=r)},setFunc:function(t){if(r!==t){if(t)switch(t){case z:e.depthFunc(512);break;case V:e.depthFunc(519);break;case G:e.depthFunc(513);break;case W:e.depthFunc(515);break;case H:e.depthFunc(514);break;case j:e.depthFunc(518);break;case X:e.depthFunc(516);break;case q:e.depthFunc(517);break;default:e.depthFunc(515)}else e.depthFunc(515);r=t}},setLocked:function(e){t=e},setClear:function(t){s!==t&&(e.clearDepth(t),s=t)},reset:function(){t=!1,n=null,r=null,s=null}}},u=new function(){let t=!1,n=null,r=null,s=null,i=null,a=null,o=null,l=null,u=null;return{setTest:function(e){t||(e?xe(2960):ve(2960))},setMask:function(r){n===r||t||(e.stencilMask(r),n=r)},setFunc:function(t,n,a){r===t&&s===n&&i===a||(e.stencilFunc(t,n,a),r=t,s=n,i=a)},setOp:function(t,n,r){a===t&&o===n&&l===r||(e.stencilOp(t,n,r),a=t,o=n,l=r)},setLocked:function(e){t=e},setClear:function(t){u!==t&&(e.clearStencil(t),u=t)},reset:function(){t=!1,n=null,r=null,s=null,i=null,a=null,o=null,l=null,u=null}}};let c={},h=null,d={},p=null,f=!1,y=null,x=null,K=null,Y=null,J=null,Z=null,Q=null,ee=!1,te=null,ne=null,re=null,se=null,ie=null;const ae=e.getParameter(35661);let oe=!1,le=0;const ue=e.getParameter(7938);-1!==ue.indexOf("WebGL")?(le=parseFloat(/^WebGL (\d)/.exec(ue)[1]),oe=le>=1):-1!==ue.indexOf("OpenGL ES")&&(le=parseFloat(/^OpenGL ES (\d)/.exec(ue)[1]),oe=le>=2);let ce=null,he={};const de=e.getParameter(3088),pe=e.getParameter(2978),fe=(new nr).fromArray(de),me=(new nr).fromArray(pe);function ge(t,n,r){const s=new Uint8Array(4),i=e.createTexture();e.bindTexture(t,i),e.texParameteri(t,10241,9728),e.texParameteri(t,10240,9728);for(let t=0;t<r;t++)e.texImage2D(n+t,0,6408,1,1,0,6408,5121,s);return i}const ye={};function xe(t){!0!==c[t]&&(e.enable(t),c[t]=!0)}function ve(t){!1!==c[t]&&(e.disable(t),c[t]=!1)}ye[3553]=ge(3553,3553,1),ye[34067]=ge(34067,34069,6),s.setClear(0,0,0,1),i.setClear(1),u.setClear(0),xe(2929),i.setFunc(W),Se(!1),Te(o),xe(2884),_e(v);const be={[E]:32774,[M]:32778,[C]:32779};if(r)be[A]=32775,be[I]=32776;else{const e=t.get("EXT_blend_minmax");null!==e&&(be[A]=e.MIN_EXT,be[I]=e.MAX_EXT)}const we={[R]:0,[k]:1,[N]:768,[D]:770,[U]:776,[$]:774,[P]:772,[L]:769,[O]:771,[B]:775,[F]:773};function _e(t,n,r,s,i,a,o,l){if(t!==v){if(!1===f&&(xe(3042),f=!0),t===T)i=i||n,a=a||r,o=o||s,n===x&&i===J||(e.blendEquationSeparate(be[n],be[i]),x=n,J=i),r===K&&s===Y&&a===Z&&o===Q||(e.blendFuncSeparate(we[r],we[s],we[a],we[o]),K=r,Y=s,Z=a,Q=o),y=t,ee=null;else if(t!==y||l!==ee){if(x===E&&J===E||(e.blendEquation(32774),x=E,J=E),l)switch(t){case b:e.blendFuncSeparate(1,771,1,771);break;case w:e.blendFunc(1,1);break;case _:e.blendFuncSeparate(0,0,769,771);break;case S:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case b:e.blendFuncSeparate(770,771,1,771);break;case w:e.blendFunc(770,1);break;case _:e.blendFunc(0,769);break;case S:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}K=null,Y=null,Z=null,Q=null,y=t,ee=l}}else!0===f&&(ve(3042),f=!1)}function Se(t){te!==t&&(t?e.frontFace(2304):e.frontFace(2305),te=t)}function Te(t){t!==a?(xe(2884),t!==ne&&(t===o?e.cullFace(1029):t===l?e.cullFace(1028):e.cullFace(1032))):ve(2884),ne=t}function Ee(t,n,r){t?(xe(32823),se===n&&ie===r||(e.polygonOffset(n,r),se=n,ie=r)):ve(32823)}function Me(t){void 0===t&&(t=33984+ae-1),ce!==t&&(e.activeTexture(t),ce=t)}return{buffers:{color:s,depth:i,stencil:u},enable:xe,disable:ve,bindFramebuffer:function(t,n){return null===n&&null!==h&&(n=h),d[t]!==n&&(e.bindFramebuffer(t,n),d[t]=n,r&&(36009===t&&(d[36160]=n),36160===t&&(d[36009]=n)),!0)},bindXRFramebuffer:function(t){t!==h&&(e.bindFramebuffer(36160,t),h=t)},useProgram:function(t){return p!==t&&(e.useProgram(t),p=t,!0)},setBlending:_e,setMaterial:function(e,t){e.side===g?ve(2884):xe(2884);let n=e.side===m;t&&(n=!n),Se(n),e.blending===b&&!1===e.transparent?_e(v):_e(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),i.setFunc(e.depthFunc),i.setTest(e.depthTest),i.setMask(e.depthWrite),s.setMask(e.colorWrite);const r=e.stencilWrite;u.setTest(r),r&&(u.setMask(e.stencilWriteMask),u.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),u.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),Ee(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage?xe(32926):ve(32926)},setFlipSided:Se,setCullFace:Te,setLineWidth:function(t){t!==re&&(oe&&e.lineWidth(t),re=t)},setPolygonOffset:Ee,setScissorTest:function(e){e?xe(3089):ve(3089)},activeTexture:Me,bindTexture:function(t,n){null===ce&&Me();let r=he[ce];void 0===r&&(r={type:void 0,texture:void 0},he[ce]=r),r.type===t&&r.texture===n||(e.bindTexture(t,n||ye[t]),r.type=t,r.texture=n)},unbindTexture:function(){const t=he[ce];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:function(t){!1===fe.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),fe.copy(t))},viewport:function(t){!1===me.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),me.copy(t))},reset:function(){e.disable(3042),e.disable(2884),e.disable(2929),e.disable(32823),e.disable(3089),e.disable(2960),e.disable(32926),e.blendEquation(32774),e.blendFunc(1,0),e.blendFuncSeparate(1,0,1,0),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(513),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(519,0,4294967295),e.stencilOp(7680,7680,7680),e.clearStencil(0),e.cullFace(1029),e.frontFace(2305),e.polygonOffset(0,0),e.activeTexture(33984),e.bindFramebuffer(36160,null),!0===r&&(e.bindFramebuffer(36009,null),e.bindFramebuffer(36008,null)),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),c={},ce=null,he={},h=null,d={},p=null,f=!1,y=null,x=null,K=null,Y=null,J=null,Z=null,Q=null,ee=!1,te=null,ne=null,re=null,se=null,ie=null,fe.set(0,0,e.canvas.width,e.canvas.height),me.set(0,0,e.canvas.width,e.canvas.height),s.reset(),i.reset(),u.reset()}}}function gl(e,t,n,r,s,i,a){const o=s.isWebGL2,l=s.maxTextures,u=s.maxCubemapSize,c=s.maxTextureSize,h=s.maxSamples,d=new WeakMap;let p,f=!1;try{f="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(e){}function m(e,t){return f?new OffscreenCanvas(e,t):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function g(e,t,n,r){let s=1;if((e.width>r||e.height>r)&&(s=r/Math.max(e.width,e.height)),s<1||!0===t){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const r=t?Xn:Math.floor,i=r(s*e.width),a=r(s*e.height);void 0===p&&(p=m(i,a));const o=n?m(i,a):p;return o.width=i,o.height=a,o.getContext("2d").drawImage(e,0,0,i,a),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+i+"x"+a+")."),o}return"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+")."),e}return e}function y(e){return Hn(e.width)&&Hn(e.height)}function x(e,t){return e.generateMipmaps&&t&&e.minFilter!==fe&&e.minFilter!==ve}function v(t,n,s,i,a=1){e.generateMipmap(t),r.get(n).__maxMipLevel=Math.log2(Math.max(s,i,a))}function b(n,r,s){if(!1===o)return r;if(null!==n){if(void 0!==e[n])return e[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let i=r;return 6403===r&&(5126===s&&(i=33326),5131===s&&(i=33325),5121===s&&(i=33321)),6407===r&&(5126===s&&(i=34837),5131===s&&(i=34843),5121===s&&(i=32849)),6408===r&&(5126===s&&(i=34836),5131===s&&(i=34842),5121===s&&(i=32856)),33325!==i&&33326!==i&&34842!==i&&34836!==i||t.get("EXT_color_buffer_float"),i}function w(e){return e===fe||e===me||e===ye?9728:9729}function _(t){const n=t.target;n.removeEventListener("dispose",_),function(t){const n=r.get(t);void 0!==n.__webglInit&&(e.deleteTexture(n.__webglTexture),r.remove(t))}(n),n.isVideoTexture&&d.delete(n),a.memory.textures--}function S(t){const n=t.target;n.removeEventListener("dispose",S),function(t){const n=t.texture,s=r.get(t),i=r.get(n);if(t){if(void 0!==i.__webglTexture&&(e.deleteTexture(i.__webglTexture),a.memory.textures--),t.depthTexture&&t.depthTexture.dispose(),t.isWebGLCubeRenderTarget)for(let t=0;t<6;t++)e.deleteFramebuffer(s.__webglFramebuffer[t]),s.__webglDepthbuffer&&e.deleteRenderbuffer(s.__webglDepthbuffer[t]);else e.deleteFramebuffer(s.__webglFramebuffer),s.__webglDepthbuffer&&e.deleteRenderbuffer(s.__webglDepthbuffer),s.__webglMultisampledFramebuffer&&e.deleteFramebuffer(s.__webglMultisampledFramebuffer),s.__webglColorRenderbuffer&&e.deleteRenderbuffer(s.__webglColorRenderbuffer),s.__webglDepthRenderbuffer&&e.deleteRenderbuffer(s.__webglDepthRenderbuffer);if(t.isWebGLMultipleRenderTargets)for(let t=0,s=n.length;t<s;t++){const s=r.get(n[t]);s.__webglTexture&&(e.deleteTexture(s.__webglTexture),a.memory.textures--),r.remove(n[t])}r.remove(n),r.remove(t)}}(n)}let T=0;function E(e,t){const s=r.get(e);if(e.isVideoTexture&&function(e){const t=a.render.frame;d.get(e)!==t&&(d.set(e,t),e.update())}(e),e.version>0&&s.__version!==e.version){const n=e.image;if(void 0===n)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==n.complete)return void k(s,e,t);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.activeTexture(33984+t),n.bindTexture(3553,s.__webglTexture)}function M(t,s){const a=r.get(t);t.version>0&&a.__version!==t.version?function(t,r,s){if(6!==r.image.length)return;R(t,r),n.activeTexture(33984+s),n.bindTexture(34067,t.__webglTexture),e.pixelStorei(37440,r.flipY),e.pixelStorei(37441,r.premultiplyAlpha),e.pixelStorei(3317,r.unpackAlignment),e.pixelStorei(37443,0);const a=r&&(r.isCompressedTexture||r.image[0].isCompressedTexture),l=r.image[0]&&r.image[0].isDataTexture,c=[];for(let e=0;e<6;e++)c[e]=a||l?l?r.image[e].image:r.image[e]:g(r.image[e],!1,!0,u);const h=c[0],d=y(h)||o,p=i.convert(r.format),f=i.convert(r.type),m=b(r.internalFormat,p,f);let w;if(I(34067,r,d),a){for(let e=0;e<6;e++){w=c[e].mipmaps;for(let t=0;t<w.length;t++){const s=w[t];r.format!==$e&&r.format!==Fe?null!==p?n.compressedTexImage2D(34069+e,t,m,s.width,s.height,0,s.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(34069+e,t,m,s.width,s.height,0,p,f,s.data)}}t.__maxMipLevel=w.length-1}else{w=r.mipmaps;for(let e=0;e<6;e++)if(l){n.texImage2D(34069+e,0,m,c[e].width,c[e].height,0,p,f,c[e].data);for(let t=0;t<w.length;t++){const r=w[t].image[e].image;n.texImage2D(34069+e,t+1,m,r.width,r.height,0,p,f,r.data)}}else{n.texImage2D(34069+e,0,m,p,f,c[e]);for(let t=0;t<w.length;t++){const r=w[t];n.texImage2D(34069+e,t+1,m,p,f,r.image[e])}}t.__maxMipLevel=w.length}x(r,d)&&v(34067,r,h.width,h.height),t.__version=r.version,r.onUpdate&&r.onUpdate(r)}(a,t,s):(n.activeTexture(33984+s),n.bindTexture(34067,a.__webglTexture))}const C={[he]:10497,[de]:33071,[pe]:33648},A={[fe]:9728,[me]:9984,[ye]:9986,[ve]:9729,[be]:9985,[_e]:9987};function I(n,i,a){if(a?(e.texParameteri(n,10242,C[i.wrapS]),e.texParameteri(n,10243,C[i.wrapT]),32879!==n&&35866!==n||e.texParameteri(n,32882,C[i.wrapR]),e.texParameteri(n,10240,A[i.magFilter]),e.texParameteri(n,10241,A[i.minFilter])):(e.texParameteri(n,10242,33071),e.texParameteri(n,10243,33071),32879!==n&&35866!==n||e.texParameteri(n,32882,33071),i.wrapS===de&&i.wrapT===de||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(n,10240,w(i.magFilter)),e.texParameteri(n,10241,w(i.minFilter)),i.minFilter!==fe&&i.minFilter!==ve&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===t.has("EXT_texture_filter_anisotropic")){const a=t.get("EXT_texture_filter_anisotropic");if(i.type===Re&&!1===t.has("OES_texture_float_linear"))return;if(!1===o&&i.type===ke&&!1===t.has("OES_texture_half_float_linear"))return;(i.anisotropy>1||r.get(i).__currentAnisotropy)&&(e.texParameterf(n,a.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(i.anisotropy,s.getMaxAnisotropy())),r.get(i).__currentAnisotropy=i.anisotropy)}}function R(t,n){void 0===t.__webglInit&&(t.__webglInit=!0,n.addEventListener("dispose",_),t.__webglTexture=e.createTexture(),a.memory.textures++)}function k(t,r,s){let a=3553;r.isDataTexture2DArray&&(a=35866),r.isDataTexture3D&&(a=32879),R(t,r),n.activeTexture(33984+s),n.bindTexture(a,t.__webglTexture),e.pixelStorei(37440,r.flipY),e.pixelStorei(37441,r.premultiplyAlpha),e.pixelStorei(3317,r.unpackAlignment),e.pixelStorei(37443,0);const l=function(e){return!o&&(e.wrapS!==de||e.wrapT!==de||e.minFilter!==fe&&e.minFilter!==ve)}(r)&&!1===y(r.image),u=g(r.image,l,!1,c),h=y(u)||o,d=i.convert(r.format);let p,f=i.convert(r.type),m=b(r.internalFormat,d,f);I(a,r,h);const w=r.mipmaps;if(r.isDepthTexture)m=6402,o?m=r.type===Re?36012:r.type===Ie?33190:r.type===Oe?35056:33189:r.type===Re&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),r.format===Ve&&6402===m&&r.type!==Ce&&r.type!==Ie&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),r.type=Ce,f=i.convert(r.type)),r.format===Ge&&6402===m&&(m=34041,r.type!==Oe&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),r.type=Oe,f=i.convert(r.type))),n.texImage2D(3553,0,m,u.width,u.height,0,d,f,null);else if(r.isDataTexture)if(w.length>0&&h){for(let e=0,t=w.length;e<t;e++)p=w[e],n.texImage2D(3553,e,m,p.width,p.height,0,d,f,p.data);r.generateMipmaps=!1,t.__maxMipLevel=w.length-1}else n.texImage2D(3553,0,m,u.width,u.height,0,d,f,u.data),t.__maxMipLevel=0;else if(r.isCompressedTexture){for(let e=0,t=w.length;e<t;e++)p=w[e],r.format!==$e&&r.format!==Fe?null!==d?n.compressedTexImage2D(3553,e,m,p.width,p.height,0,p.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(3553,e,m,p.width,p.height,0,d,f,p.data);t.__maxMipLevel=w.length-1}else if(r.isDataTexture2DArray)n.texImage3D(35866,0,m,u.width,u.height,u.depth,0,d,f,u.data),t.__maxMipLevel=0;else if(r.isDataTexture3D)n.texImage3D(32879,0,m,u.width,u.height,u.depth,0,d,f,u.data),t.__maxMipLevel=0;else if(w.length>0&&h){for(let e=0,t=w.length;e<t;e++)p=w[e],n.texImage2D(3553,e,m,d,f,p);r.generateMipmaps=!1,t.__maxMipLevel=w.length-1}else n.texImage2D(3553,0,m,d,f,u),t.__maxMipLevel=0;x(r,h)&&v(a,r,u.width,u.height),t.__version=r.version,r.onUpdate&&r.onUpdate(r)}function N(t,s,a,o,l){const u=i.convert(a.format),c=i.convert(a.type),h=b(a.internalFormat,u,c);32879===l||35866===l?n.texImage3D(l,0,h,s.width,s.height,s.depth,0,u,c,null):n.texImage2D(l,0,h,s.width,s.height,0,u,c,null),n.bindFramebuffer(36160,t),e.framebufferTexture2D(36160,o,l,r.get(a).__webglTexture,0),n.bindFramebuffer(36160,null)}function L(t,n,r){if(e.bindRenderbuffer(36161,t),n.depthBuffer&&!n.stencilBuffer){let s=33189;if(r){const t=n.depthTexture;t&&t.isDepthTexture&&(t.type===Re?s=36012:t.type===Ie&&(s=33190));const r=D(n);e.renderbufferStorageMultisample(36161,r,s,n.width,n.height)}else e.renderbufferStorage(36161,s,n.width,n.height);e.framebufferRenderbuffer(36160,36096,36161,t)}else if(n.depthBuffer&&n.stencilBuffer){if(r){const t=D(n);e.renderbufferStorageMultisample(36161,t,35056,n.width,n.height)}else e.renderbufferStorage(36161,34041,n.width,n.height);e.framebufferRenderbuffer(36160,33306,36161,t)}else{const t=!0===n.isWebGLMultipleRenderTargets?n.texture[0]:n.texture,s=i.convert(t.format),a=i.convert(t.type),o=b(t.internalFormat,s,a);if(r){const t=D(n);e.renderbufferStorageMultisample(36161,t,o,n.width,n.height)}else e.renderbufferStorage(36161,o,n.width,n.height)}e.bindRenderbuffer(36161,null)}function D(e){return o&&e.isWebGLMultisampleRenderTarget?Math.min(h,e.samples):0}let O=!1,P=!1;this.allocateTextureUnit=function(){const e=T;return e>=l&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+l),T+=1,e},this.resetTextureUnits=function(){T=0},this.setTexture2D=E,this.setTexture2DArray=function(e,t){const s=r.get(e);e.version>0&&s.__version!==e.version?k(s,e,t):(n.activeTexture(33984+t),n.bindTexture(35866,s.__webglTexture))},this.setTexture3D=function(e,t){const s=r.get(e);e.version>0&&s.__version!==e.version?k(s,e,t):(n.activeTexture(33984+t),n.bindTexture(32879,s.__webglTexture))},this.setTextureCube=M,this.setupRenderTarget=function(t){const l=t.texture,u=r.get(t),c=r.get(l);t.addEventListener("dispose",S),!0!==t.isWebGLMultipleRenderTargets&&(c.__webglTexture=e.createTexture(),c.__version=l.version,a.memory.textures++);const h=!0===t.isWebGLCubeRenderTarget,d=!0===t.isWebGLMultipleRenderTargets,p=!0===t.isWebGLMultisampleRenderTarget,f=l.isDataTexture3D||l.isDataTexture2DArray,m=y(t)||o;if(!o||l.format!==Fe||l.type!==Re&&l.type!==ke||(l.format=$e,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),h){u.__webglFramebuffer=[];for(let t=0;t<6;t++)u.__webglFramebuffer[t]=e.createFramebuffer()}else if(u.__webglFramebuffer=e.createFramebuffer(),d)if(s.drawBuffers){const n=t.texture;for(let t=0,s=n.length;t<s;t++){const s=r.get(n[t]);void 0===s.__webglTexture&&(s.__webglTexture=e.createTexture(),a.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");else if(p)if(o){u.__webglMultisampledFramebuffer=e.createFramebuffer(),u.__webglColorRenderbuffer=e.createRenderbuffer(),e.bindRenderbuffer(36161,u.__webglColorRenderbuffer);const r=i.convert(l.format),s=i.convert(l.type),a=b(l.internalFormat,r,s),o=D(t);e.renderbufferStorageMultisample(36161,o,a,t.width,t.height),n.bindFramebuffer(36160,u.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064,36161,u.__webglColorRenderbuffer),e.bindRenderbuffer(36161,null),t.depthBuffer&&(u.__webglDepthRenderbuffer=e.createRenderbuffer(),L(u.__webglDepthRenderbuffer,t,!0)),n.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(h){n.bindTexture(34067,c.__webglTexture),I(34067,l,m);for(let e=0;e<6;e++)N(u.__webglFramebuffer[e],t,l,36064,34069+e);x(l,m)&&v(34067,l,t.width,t.height),n.unbindTexture()}else if(d){const e=t.texture;for(let s=0,i=e.length;s<i;s++){const i=e[s],a=r.get(i);n.bindTexture(3553,a.__webglTexture),I(3553,i,m),N(u.__webglFramebuffer,t,i,36064+s,3553),x(i,m)&&v(3553,i,t.width,t.height)}n.unbindTexture()}else{let e=3553;f&&(o?e=l.isDataTexture3D?32879:35866:console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")),n.bindTexture(e,c.__webglTexture),I(e,l,m),N(u.__webglFramebuffer,t,l,36064,e),x(l,m)&&v(e,l,t.width,t.height,t.depth),n.unbindTexture()}t.depthBuffer&&function(t){const s=r.get(t),i=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture){if(i)throw new Error("target.depthTexture not supported in Cube render targets");!function(t,s){if(s&&s.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(36160,t),!s.depthTexture||!s.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");r.get(s.depthTexture).__webglTexture&&s.depthTexture.image.width===s.width&&s.depthTexture.image.height===s.height||(s.depthTexture.image.width=s.width,s.depthTexture.image.height=s.height,s.depthTexture.needsUpdate=!0),E(s.depthTexture,0);const i=r.get(s.depthTexture).__webglTexture;if(s.depthTexture.format===Ve)e.framebufferTexture2D(36160,36096,3553,i,0);else{if(s.depthTexture.format!==Ge)throw new Error("Unknown depthTexture format");e.framebufferTexture2D(36160,33306,3553,i,0)}}(s.__webglFramebuffer,t)}else if(i){s.__webglDepthbuffer=[];for(let r=0;r<6;r++)n.bindFramebuffer(36160,s.__webglFramebuffer[r]),s.__webglDepthbuffer[r]=e.createRenderbuffer(),L(s.__webglDepthbuffer[r],t,!1)}else n.bindFramebuffer(36160,s.__webglFramebuffer),s.__webglDepthbuffer=e.createRenderbuffer(),L(s.__webglDepthbuffer,t,!1);n.bindFramebuffer(36160,null)}(t)},this.updateRenderTargetMipmap=function(e){const t=y(e)||o,s=!0===e.isWebGLMultipleRenderTargets?e.texture:[e.texture];for(let i=0,a=s.length;i<a;i++){const a=s[i];if(x(a,t)){const t=e.isWebGLCubeRenderTarget?34067:3553,s=r.get(a).__webglTexture;n.bindTexture(t,s),v(t,a,e.width,e.height),n.unbindTexture()}}},this.updateMultisampleRenderTarget=function(t){if(t.isWebGLMultisampleRenderTarget)if(o){const s=t.width,i=t.height;let a=16384;t.depthBuffer&&(a|=256),t.stencilBuffer&&(a|=1024);const o=r.get(t);n.bindFramebuffer(36008,o.__webglMultisampledFramebuffer),n.bindFramebuffer(36009,o.__webglFramebuffer),e.blitFramebuffer(0,0,s,i,0,0,s,i,a,9728),n.bindFramebuffer(36008,null),n.bindFramebuffer(36009,o.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(e,t){e&&e.isWebGLRenderTarget&&(!1===O&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),O=!0),e=e.texture),E(e,t)},this.safeSetTextureCube=function(e,t){e&&e.isWebGLCubeRenderTarget&&(!1===P&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),P=!0),e=e.texture),M(e,t)}}function yl(e,t,n){const r=n.isWebGL2;return{convert:function(e){let n;if(e===Te)return 5121;if(e===Ne)return 32819;if(e===Le)return 32820;if(e===De)return 33635;if(e===Ee)return 5120;if(e===Me)return 5122;if(e===Ce)return 5123;if(e===Ae)return 5124;if(e===Ie)return 5125;if(e===Re)return 5126;if(e===ke)return r?5131:(n=t.get("OES_texture_half_float"),null!==n?n.HALF_FLOAT_OES:null);if(e===Pe)return 6406;if(e===Fe)return 6407;if(e===$e)return 6408;if(e===Be)return 6409;if(e===Ue)return 6410;if(e===Ve)return 6402;if(e===Ge)return 34041;if(e===We)return 6403;if(e===He)return 36244;if(e===je)return 33319;if(e===Xe)return 33320;if(e===qe)return 36248;if(e===Ke)return 36249;if(e===Ye||e===Je||e===Ze||e===Qe){if(n=t.get("WEBGL_compressed_texture_s3tc"),null===n)return null;if(e===Ye)return n.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===Je)return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===Ze)return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===Qe)return n.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(e===et||e===tt||e===nt||e===rt){if(n=t.get("WEBGL_compressed_texture_pvrtc"),null===n)return null;if(e===et)return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===tt)return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===nt)return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===rt)return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(e===st)return n=t.get("WEBGL_compressed_texture_etc1"),null!==n?n.COMPRESSED_RGB_ETC1_WEBGL:null;if((e===it||e===at)&&(n=t.get("WEBGL_compressed_texture_etc"),null!==n)){if(e===it)return n.COMPRESSED_RGB8_ETC2;if(e===at)return n.COMPRESSED_RGBA8_ETC2_EAC}return e===ot||e===lt||e===ut||e===ct||e===ht||e===dt||e===pt||e===ft||e===mt||e===gt||e===yt||e===xt||e===vt||e===bt||e===_t||e===St||e===Tt||e===Et||e===Mt||e===Ct||e===At||e===It||e===Rt||e===kt||e===Nt||e===Lt||e===Dt||e===Ot?(n=t.get("WEBGL_compressed_texture_astc"),null!==n?e:null):e===wt?(n=t.get("EXT_texture_compression_bptc"),null!==n?e:null):e===Oe?r?34042:(n=t.get("WEBGL_depth_texture"),null!==n?n.UNSIGNED_INT_24_8_WEBGL:null):void 0}}}class xl extends Mi{constructor(e=[]){super(),this.cameras=e}}xl.prototype.isArrayCamera=!0;class vl extends us{constructor(){super(),this.type="Group"}}vl.prototype.isGroup=!0;const bl={type:"move"};class wl{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new vl,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new vl,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new or,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new or),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new vl,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new or,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new or),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,n){let r=null,s=null,i=null;const a=this._targetRay,o=this._grip,l=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState)if(null!==a&&(r=t.getPose(e.targetRaySpace,n),null!==r&&(a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),r.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(r.linearVelocity)):a.hasLinearVelocity=!1,r.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(r.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(bl))),l&&e.hand){i=!0;for(const r of e.hand.values()){const e=t.getJointPose(r,n);if(void 0===l.joints[r.jointName]){const e=new vl;e.matrixAutoUpdate=!1,e.visible=!1,l.joints[r.jointName]=e,l.add(e)}const s=l.joints[r.jointName];null!==e&&(s.matrix.fromArray(e.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),s.jointRadius=e.radius),s.visible=null!==e}const r=l.joints["index-finger-tip"],s=l.joints["thumb-tip"],a=r.position.distanceTo(s.position),o=.02,u=.005;l.inputState.pinching&&a>o+u?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&a<=o-u&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==o&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),null!==s&&(o.matrix.fromArray(s.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),s.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(s.linearVelocity)):o.hasLinearVelocity=!1,s.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(s.angularVelocity)):o.hasAngularVelocity=!1));return null!==a&&(a.visible=null!==r),null!==o&&(o.visible=null!==s),null!==l&&(l.visible=null!==i),this}}class _l extends Pn{constructor(e,t){super();const n=this,r=e.state;let s=null,i=1,a=null,o="local-floor",l=null,u=null,c=null,h=null,d=null,p=!1,f=null,m=null,g=null,y=null,x=null,v=null;const b=[],w=new Map,_=new Mi;_.layers.enable(1),_.viewport=new nr;const S=new Mi;S.layers.enable(2),S.viewport=new nr;const T=[_,S],E=new xl;E.layers.enable(1),E.layers.enable(2);let M=null,C=null;function A(e){const t=w.get(e.inputSource);t&&t.dispatchEvent({type:e.type,data:e.inputSource})}function I(){w.forEach((function(e,t){e.disconnect(t)})),w.clear(),M=null,C=null,r.bindXRFramebuffer(null),e.setRenderTarget(e.getRenderTarget()),c&&t.deleteFramebuffer(c),f&&t.deleteFramebuffer(f),m&&t.deleteRenderbuffer(m),g&&t.deleteRenderbuffer(g),c=null,f=null,m=null,g=null,d=null,h=null,u=null,s=null,O.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function R(e){const t=s.inputSources;for(let e=0;e<b.length;e++)w.set(t[e],b[e]);for(let t=0;t<e.removed.length;t++){const n=e.removed[t],r=w.get(n);r&&(r.dispatchEvent({type:"disconnected",data:n}),w.delete(n))}for(let t=0;t<e.added.length;t++){const n=e.added[t],r=w.get(n);r&&r.dispatchEvent({type:"connected",data:n})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=b[e];return void 0===t&&(t=new wl,b[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=b[e];return void 0===t&&(t=new wl,b[e]=t),t.getGripSpace()},this.getHand=function(e){let t=b[e];return void 0===t&&(t=new wl,b[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){i=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){o=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return a},this.getBaseLayer=function(){return null!==h?h:d},this.getBinding=function(){return u},this.getFrame=function(){return y},this.getSession=function(){return s},this.setSession=async function(e){if(s=e,null!==s){s.addEventListener("select",A),s.addEventListener("selectstart",A),s.addEventListener("selectend",A),s.addEventListener("squeeze",A),s.addEventListener("squeezestart",A),s.addEventListener("squeezeend",A),s.addEventListener("end",I),s.addEventListener("inputsourceschange",R);const e=t.getContextAttributes();if(!0!==e.xrCompatible&&await t.makeXRCompatible(),void 0===s.renderState.layers){const n={antialias:e.antialias,alpha:e.alpha,depth:e.depth,stencil:e.stencil,framebufferScaleFactor:i};d=new XRWebGLLayer(s,t,n),s.updateRenderState({baseLayer:d})}else if(t instanceof WebGLRenderingContext){const n={antialias:!0,alpha:e.alpha,depth:e.depth,stencil:e.stencil,framebufferScaleFactor:i};d=new XRWebGLLayer(s,t,n),s.updateRenderState({layers:[d]})}else{p=e.antialias;let n=null;e.depth&&(v=256,e.stencil&&(v|=1024),x=e.stencil?33306:36096,n=e.stencil?35056:33190);const a={colorFormat:e.alpha?32856:32849,depthFormat:n,scaleFactor:i};u=new XRWebGLBinding(s,t),h=u.createProjectionLayer(a),c=t.createFramebuffer(),s.updateRenderState({layers:[h]}),p&&(f=t.createFramebuffer(),m=t.createRenderbuffer(),t.bindRenderbuffer(36161,m),t.renderbufferStorageMultisample(36161,4,32856,h.textureWidth,h.textureHeight),r.bindFramebuffer(36160,f),t.framebufferRenderbuffer(36160,36064,36161,m),t.bindRenderbuffer(36161,null),null!==n&&(g=t.createRenderbuffer(),t.bindRenderbuffer(36161,g),t.renderbufferStorageMultisample(36161,4,n,h.textureWidth,h.textureHeight),t.framebufferRenderbuffer(36160,x,36161,g),t.bindRenderbuffer(36161,null)),r.bindFramebuffer(36160,null))}a=await s.requestReferenceSpace(o),O.setContext(s),O.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};const k=new or,N=new or;function L(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.updateCamera=function(e){if(null===s)return;E.near=S.near=_.near=e.near,E.far=S.far=_.far=e.far,M===E.near&&C===E.far||(s.updateRenderState({depthNear:E.near,depthFar:E.far}),M=E.near,C=E.far);const t=e.parent,n=E.cameras;L(E,t);for(let e=0;e<n.length;e++)L(n[e],t);E.matrixWorld.decompose(E.position,E.quaternion,E.scale),e.position.copy(E.position),e.quaternion.copy(E.quaternion),e.scale.copy(E.scale),e.matrix.copy(E.matrix),e.matrixWorld.copy(E.matrixWorld);const r=e.children;for(let e=0,t=r.length;e<t;e++)r[e].updateMatrixWorld(!0);2===n.length?function(e,t,n){k.setFromMatrixPosition(t.matrixWorld),N.setFromMatrixPosition(n.matrixWorld);const r=k.distanceTo(N),s=t.projectionMatrix.elements,i=n.projectionMatrix.elements,a=s[14]/(s[10]-1),o=s[14]/(s[10]+1),l=(s[9]+1)/s[5],u=(s[9]-1)/s[5],c=(s[8]-1)/s[0],h=(i[8]+1)/i[0],d=a*c,p=a*h,f=r/(-c+h),m=f*-c;t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(m),e.translateZ(f),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert();const g=a+f,y=o+f,x=d-m,v=p+(r-m),b=l*o/y*g,w=u*o/y*g;e.projectionMatrix.makePerspective(x,v,b,w,g,y)}(E,_,S):E.projectionMatrix.copy(_.projectionMatrix)},this.getCamera=function(){return E},this.getFoveation=function(){return null!==h?h.fixedFoveation:null!==d?d.fixedFoveation:void 0},this.setFoveation=function(e){null!==h&&(h.fixedFoveation=e),null!==d&&void 0!==d.fixedFoveation&&(d.fixedFoveation=e)};let D=null;const O=new $i;O.setAnimationLoop((function(e,n){if(l=n.getViewerPose(a),y=n,null!==l){const e=l.views;null!==d&&r.bindXRFramebuffer(d.framebuffer);let n=!1;e.length!==E.cameras.length&&(E.cameras.length=0,n=!0);for(let s=0;s<e.length;s++){const i=e[s];let a=null;if(null!==d)a=d.getViewport(i);else{const e=u.getViewSubImage(h,i);r.bindXRFramebuffer(c),void 0!==e.depthStencilTexture&&t.framebufferTexture2D(36160,x,3553,e.depthStencilTexture,0),t.framebufferTexture2D(36160,36064,3553,e.colorTexture,0),a=e.viewport}const o=T[s];o.matrix.fromArray(i.transform.matrix),o.projectionMatrix.fromArray(i.projectionMatrix),o.viewport.set(a.x,a.y,a.width,a.height),0===s&&E.matrix.copy(o.matrix),!0===n&&E.cameras.push(o)}p&&(r.bindXRFramebuffer(f),null!==v&&t.clear(v))}const i=s.inputSources;for(let e=0;e<b.length;e++){const t=b[e],r=i[e];t.update(r,n,a)}if(D&&D(e,n),p){const e=h.textureWidth,n=h.textureHeight;r.bindFramebuffer(36008,f),r.bindFramebuffer(36009,c),t.invalidateFramebuffer(36008,[x]),t.invalidateFramebuffer(36009,[x]),t.blitFramebuffer(0,0,e,n,0,0,e,n,16384,9728),t.invalidateFramebuffer(36008,[36064]),r.bindFramebuffer(36008,null),r.bindFramebuffer(36009,null),r.bindFramebuffer(36160,f)}y=null})),this.setAnimationLoop=function(e){D=e},this.dispose=function(){}}}function Sl(e){function t(t,n){t.opacity.value=n.opacity,n.color&&t.diffuse.value.copy(n.color),n.emissive&&t.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),n.map&&(t.map.value=n.map),n.alphaMap&&(t.alphaMap.value=n.alphaMap),n.specularMap&&(t.specularMap.value=n.specularMap),n.alphaTest>0&&(t.alphaTest.value=n.alphaTest);const r=e.get(n).envMap;if(r){t.envMap.value=r,t.flipEnvMap.value=r.isCubeTexture&&!1===r.isRenderTargetTexture?-1:1,t.reflectivity.value=n.reflectivity,t.ior.value=n.ior,t.refractionRatio.value=n.refractionRatio;const s=e.get(r).__maxMipLevel;void 0!==s&&(t.maxMipLevel.value=s)}let s,i;n.lightMap&&(t.lightMap.value=n.lightMap,t.lightMapIntensity.value=n.lightMapIntensity),n.aoMap&&(t.aoMap.value=n.aoMap,t.aoMapIntensity.value=n.aoMapIntensity),n.map?s=n.map:n.specularMap?s=n.specularMap:n.displacementMap?s=n.displacementMap:n.normalMap?s=n.normalMap:n.bumpMap?s=n.bumpMap:n.roughnessMap?s=n.roughnessMap:n.metalnessMap?s=n.metalnessMap:n.alphaMap?s=n.alphaMap:n.emissiveMap?s=n.emissiveMap:n.clearcoatMap?s=n.clearcoatMap:n.clearcoatNormalMap?s=n.clearcoatNormalMap:n.clearcoatRoughnessMap?s=n.clearcoatRoughnessMap:n.specularIntensityMap?s=n.specularIntensityMap:n.specularTintMap?s=n.specularTintMap:n.transmissionMap?s=n.transmissionMap:n.thicknessMap&&(s=n.thicknessMap),void 0!==s&&(s.isWebGLRenderTarget&&(s=s.texture),!0===s.matrixAutoUpdate&&s.updateMatrix(),t.uvTransform.value.copy(s.matrix)),n.aoMap?i=n.aoMap:n.lightMap&&(i=n.lightMap),void 0!==i&&(i.isWebGLRenderTarget&&(i=i.texture),!0===i.matrixAutoUpdate&&i.updateMatrix(),t.uv2Transform.value.copy(i.matrix))}function n(t,n){t.roughness.value=n.roughness,t.metalness.value=n.metalness,n.roughnessMap&&(t.roughnessMap.value=n.roughnessMap),n.metalnessMap&&(t.metalnessMap.value=n.metalnessMap),n.emissiveMap&&(t.emissiveMap.value=n.emissiveMap),n.bumpMap&&(t.bumpMap.value=n.bumpMap,t.bumpScale.value=n.bumpScale,n.side===m&&(t.bumpScale.value*=-1)),n.normalMap&&(t.normalMap.value=n.normalMap,t.normalScale.value.copy(n.normalScale),n.side===m&&t.normalScale.value.negate()),n.displacementMap&&(t.displacementMap.value=n.displacementMap,t.displacementScale.value=n.displacementScale,t.displacementBias.value=n.displacementBias),e.get(n).envMap&&(t.envMapIntensity.value=n.envMapIntensity)}return{refreshFogUniforms:function(e,t){e.fogColor.value.copy(t.color),t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)},refreshMaterialUniforms:function(e,r,s,i,a){r.isMeshBasicMaterial?t(e,r):r.isMeshLambertMaterial?(t(e,r),function(e,t){t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap)}(e,r)):r.isMeshToonMaterial?(t(e,r),function(e,t){t.gradientMap&&(e.gradientMap.value=t.gradientMap),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===m&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===m&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,r)):r.isMeshPhongMaterial?(t(e,r),function(e,t){e.specular.value.copy(t.specular),e.shininess.value=Math.max(t.shininess,1e-4),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===m&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===m&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,r)):r.isMeshStandardMaterial?(t(e,r),r.isMeshPhysicalMaterial?function(e,t,r){n(e,t),e.ior.value=t.ior,t.sheenTint&&e.sheenTint.value.copy(t.sheenTint),t.clearcoat>0&&(e.clearcoat.value=t.clearcoat,e.clearcoatRoughness.value=t.clearcoatRoughness,t.clearcoatMap&&(e.clearcoatMap.value=t.clearcoatMap),t.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=t.clearcoatRoughnessMap),t.clearcoatNormalMap&&(e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),e.clearcoatNormalMap.value=t.clearcoatNormalMap,t.side===m&&e.clearcoatNormalScale.value.negate())),t.transmission>0&&(e.transmission.value=t.transmission,e.transmissionSamplerMap.value=r.texture,e.transmissionSamplerSize.value.set(r.width,r.height),t.transmissionMap&&(e.transmissionMap.value=t.transmissionMap),e.thickness.value=t.thickness,t.thicknessMap&&(e.thicknessMap.value=t.thicknessMap),e.attenuationDistance.value=t.attenuationDistance,e.attenuationTint.value.copy(t.attenuationTint)),e.specularIntensity.value=t.specularIntensity,e.specularTint.value.copy(t.specularTint),t.specularIntensityMap&&(e.specularIntensityMap.value=t.specularIntensityMap),t.specularTintMap&&(e.specularTintMap.value=t.specularTintMap)}(e,r,a):n(e,r)):r.isMeshMatcapMaterial?(t(e,r),function(e,t){t.matcap&&(e.matcap.value=t.matcap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===m&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===m&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,r)):r.isMeshDepthMaterial?(t(e,r),function(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,r)):r.isMeshDistanceMaterial?(t(e,r),function(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias),e.referencePosition.value.copy(t.referencePosition),e.nearDistance.value=t.nearDistance,e.farDistance.value=t.farDistance}(e,r)):r.isMeshNormalMaterial?(t(e,r),function(e,t){t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===m&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===m&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,r)):r.isLineBasicMaterial?(function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity}(e,r),r.isLineDashedMaterial&&function(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}(e,r)):r.isPointsMaterial?function(e,t,n,r){let s;e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.size.value=t.size*n,e.scale.value=.5*r,t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap),t.alphaTest>0&&(e.alphaTest.value=t.alphaTest),t.map?s=t.map:t.alphaMap&&(s=t.alphaMap),void 0!==s&&(!0===s.matrixAutoUpdate&&s.updateMatrix(),e.uvTransform.value.copy(s.matrix))}(e,r,s,i):r.isSpriteMaterial?function(e,t){let n;e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.rotation.value=t.rotation,t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap),t.alphaTest>0&&(e.alphaTest.value=t.alphaTest),t.map?n=t.map:t.alphaMap&&(n=t.alphaMap),void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),e.uvTransform.value.copy(n.matrix))}(e,r):r.isShadowMaterial?(e.color.value.copy(r.color),e.opacity.value=r.opacity):r.isShaderMaterial&&(r.uniformsNeedUpdate=!1)}}}function Tl(e={}){const t=void 0!==e.canvas?e.canvas:function(){const e=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return e.style.display="block",e}(),n=void 0!==e.context?e.context:null,r=void 0!==e.alpha&&e.alpha,s=void 0===e.depth||e.depth,i=void 0===e.stencil||e.stencil,a=void 0!==e.antialias&&e.antialias,o=void 0===e.premultipliedAlpha||e.premultipliedAlpha,l=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,u=void 0!==e.powerPreference?e.powerPreference:"default",c=void 0!==e.failIfMajorPerformanceCaveat&&e.failIfMajorPerformanceCaveat;let h=null,d=null;const p=[],y=[];this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=Yt,this.physicallyCorrectLights=!1,this.toneMapping=Z,this.toneMappingExposure=1;const x=this;let v=!1,b=0,w=0,_=null,S=-1,T=null;const E=new nr,M=new nr;let C=null,A=t.width,I=t.height,R=1,k=null,N=null;const L=new nr(0,0,A,I),D=new nr(0,0,A,I);let O=!1;const P=[],F=new Fi;let $=!1,B=!1,U=null;const z=new $r,V=new or,G={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function W(){return null===_?R:1}let H,j,X,q,K,Y,J,Q,ee,te,ne,re,se,ie,ae,oe,le,ue,ce,he,pe,me,ge,ye=n;function xe(e,n){for(let r=0;r<e.length;r++){const s=e[r],i=t.getContext(s,n);if(null!==i)return i}return null}try{const e={alpha:r,depth:s,stencil:i,antialias:a,premultipliedAlpha:o,preserveDrawingBuffer:l,powerPreference:u,failIfMajorPerformanceCaveat:c};if(t.addEventListener("webglcontextlost",we,!1),t.addEventListener("webglcontextrestored",Se,!1),null===ye){const t=["webgl2","webgl","experimental-webgl"];if(!0===x.isWebGL1Renderer&&t.shift(),ye=xe(t,e),null===ye)throw xe(t)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===ye.getShaderPrecisionFormat&&(ye.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}function ve(){H=new va(ye),j=new Xi(ye,H,e),H.init(j),me=new yl(ye,H,j),X=new ml(ye,H,j),P[0]=1029,q=new _a(ye),K=new Qo,Y=new gl(ye,H,X,K,j,me,q),J=new Ki(x),Q=new xa(x),ee=new Bi(ye,j),ge=new Hi(ye,H,ee,j),te=new ba(ye,ee,q,ge),ne=new Ma(ye,te,ee,q),ce=new Ea(ye),oe=new qi(K),re=new Zo(x,J,Q,H,j,ge,oe),se=new Sl(K),ie=new rl(K),ae=new ul(H,j),ue=new Wi(x,J,X,ne,o),le=new fl(x,ne,j),he=new ji(ye,H,q,j),pe=new wa(ye,H,q,j),q.programs=re.programs,x.capabilities=j,x.extensions=H,x.properties=K,x.renderLists=ie,x.shadowMap=le,x.state=X,x.info=q}ve();const be=new _l(x,ye);function we(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),v=!0}function Se(){console.log("THREE.WebGLRenderer: Context Restored."),v=!1;const e=q.autoReset,t=le.enabled,n=le.autoUpdate,r=le.needsUpdate,s=le.type;ve(),q.autoReset=e,le.enabled=t,le.autoUpdate=n,le.needsUpdate=r,le.type=s}function Ee(e){const t=e.target;t.removeEventListener("dispose",Ee),function(e){(function(e){const t=K.get(e).programs;void 0!==t&&t.forEach((function(e){re.releaseProgram(e)}))})(e),K.remove(e)}(t)}this.xr=be,this.getContext=function(){return ye},this.getContextAttributes=function(){return ye.getContextAttributes()},this.forceContextLoss=function(){const e=H.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){const e=H.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return R},this.setPixelRatio=function(e){void 0!==e&&(R=e,this.setSize(A,I,!1))},this.getSize=function(e){return e.set(A,I)},this.setSize=function(e,n,r){be.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(A=e,I=n,t.width=Math.floor(e*R),t.height=Math.floor(n*R),!1!==r&&(t.style.width=e+"px",t.style.height=n+"px"),this.setViewport(0,0,e,n))},this.getDrawingBufferSize=function(e){return e.set(A*R,I*R).floor()},this.setDrawingBufferSize=function(e,n,r){A=e,I=n,R=r,t.width=Math.floor(e*r),t.height=Math.floor(n*r),this.setViewport(0,0,e,n)},this.getCurrentViewport=function(e){return e.copy(E)},this.getViewport=function(e){return e.copy(L)},this.setViewport=function(e,t,n,r){e.isVector4?L.set(e.x,e.y,e.z,e.w):L.set(e,t,n,r),X.viewport(E.copy(L).multiplyScalar(R).floor())},this.getScissor=function(e){return e.copy(D)},this.setScissor=function(e,t,n,r){e.isVector4?D.set(e.x,e.y,e.z,e.w):D.set(e,t,n,r),X.scissor(M.copy(D).multiplyScalar(R).floor())},this.getScissorTest=function(){return O},this.setScissorTest=function(e){X.setScissorTest(O=e)},this.setOpaqueSort=function(e){k=e},this.setTransparentSort=function(e){N=e},this.getClearColor=function(e){return e.copy(ue.getClearColor())},this.setClearColor=function(){ue.setClearColor.apply(ue,arguments)},this.getClearAlpha=function(){return ue.getClearAlpha()},this.setClearAlpha=function(){ue.setClearAlpha.apply(ue,arguments)},this.clear=function(e,t,n){let r=0;(void 0===e||e)&&(r|=16384),(void 0===t||t)&&(r|=256),(void 0===n||n)&&(r|=1024),ye.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",we,!1),t.removeEventListener("webglcontextrestored",Se,!1),ie.dispose(),ae.dispose(),K.dispose(),J.dispose(),Q.dispose(),ne.dispose(),ge.dispose(),be.dispose(),be.removeEventListener("sessionstart",Ce),be.removeEventListener("sessionend",Ae),U&&(U.dispose(),U=null),Ie.stop()},this.renderBufferImmediate=function(e,t){ge.initAttributes();const n=K.get(e);e.hasPositions&&!n.position&&(n.position=ye.createBuffer()),e.hasNormals&&!n.normal&&(n.normal=ye.createBuffer()),e.hasUvs&&!n.uv&&(n.uv=ye.createBuffer()),e.hasColors&&!n.color&&(n.color=ye.createBuffer());const r=t.getAttributes();e.hasPositions&&(ye.bindBuffer(34962,n.position),ye.bufferData(34962,e.positionArray,35048),ge.enableAttribute(r.position.location),ye.vertexAttribPointer(r.position.location,3,5126,!1,0,0)),e.hasNormals&&(ye.bindBuffer(34962,n.normal),ye.bufferData(34962,e.normalArray,35048),ge.enableAttribute(r.normal.location),ye.vertexAttribPointer(r.normal.location,3,5126,!1,0,0)),e.hasUvs&&(ye.bindBuffer(34962,n.uv),ye.bufferData(34962,e.uvArray,35048),ge.enableAttribute(r.uv.location),ye.vertexAttribPointer(r.uv.location,2,5126,!1,0,0)),e.hasColors&&(ye.bindBuffer(34962,n.color),ye.bufferData(34962,e.colorArray,35048),ge.enableAttribute(r.color.location),ye.vertexAttribPointer(r.color.location,3,5126,!1,0,0)),ge.disableUnusedAttributes(),ye.drawArrays(4,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,n,r,s,i){null===t&&(t=G);const a=s.isMesh&&s.matrixWorld.determinant()<0,o=Be(e,t,r,s);X.setMaterial(r,a);let l=n.index;const u=n.attributes.position;if(null===l){if(void 0===u||0===u.count)return}else if(0===l.count)return;let c,h=1;!0===r.wireframe&&(l=te.getWireframeAttribute(n),h=2),void 0===n.morphAttributes.position&&void 0===n.morphAttributes.normal||ce.update(s,n,r,o),ge.setup(s,r,o,n,l);let d=he;null!==l&&(c=ee.get(l),d=pe,d.setIndex(c));const p=null!==l?l.count:u.count,f=n.drawRange.start*h,m=n.drawRange.count*h,g=null!==i?i.start*h:0,y=null!==i?i.count*h:1/0,x=Math.max(f,g),v=Math.min(p,f+m,g+y)-1,b=Math.max(0,v-x+1);if(0!==b){if(s.isMesh)!0===r.wireframe?(X.setLineWidth(r.wireframeLinewidth*W()),d.setMode(1)):d.setMode(4);else if(s.isLine){let e=r.linewidth;void 0===e&&(e=1),X.setLineWidth(e*W()),s.isLineSegments?d.setMode(1):s.isLineLoop?d.setMode(2):d.setMode(3)}else s.isPoints?d.setMode(0):s.isSprite&&d.setMode(4);if(s.isInstancedMesh)d.renderInstances(x,b,s.count);else if(n.isInstancedBufferGeometry){const e=Math.min(n.instanceCount,n._maxInstanceCount);d.renderInstances(x,b,e)}else d.render(x,b)}},this.compile=function(e,t){d=ae.get(e),d.init(),y.push(d),e.traverseVisible((function(e){e.isLight&&e.layers.test(t.layers)&&(d.pushLight(e),e.castShadow&&d.pushShadow(e))})),d.setupLights(x.physicallyCorrectLights),e.traverse((function(t){const n=t.material;if(n)if(Array.isArray(n))for(let r=0;r<n.length;r++)Pe(n[r],e,t);else Pe(n,e,t)})),y.pop(),d=null};let Me=null;function Ce(){Ie.stop()}function Ae(){Ie.start()}const Ie=new $i;function Ne(e,t,n,r){if(!1===e.visible)return;if(e.layers.test(t.layers))if(e.isGroup)n=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)d.pushLight(e),e.castShadow&&d.pushShadow(e);else if(e.isSprite){if(!e.frustumCulled||F.intersectsSprite(e)){r&&V.setFromMatrixPosition(e.matrixWorld).applyMatrix4(z);const t=ne.update(e),s=e.material;s.visible&&h.push(e,t,s,n,V.z,null)}}else if(e.isImmediateRenderObject)r&&V.setFromMatrixPosition(e.matrixWorld).applyMatrix4(z),h.push(e,null,e.material,n,V.z,null);else if((e.isMesh||e.isLine||e.isPoints)&&(e.isSkinnedMesh&&e.skeleton.frame!==q.render.frame&&(e.skeleton.update(),e.skeleton.frame=q.render.frame),!e.frustumCulled||F.intersectsObject(e))){r&&V.setFromMatrixPosition(e.matrixWorld).applyMatrix4(z);const t=ne.update(e),s=e.material;if(Array.isArray(s)){const r=t.groups;for(let i=0,a=r.length;i<a;i++){const a=r[i],o=s[a.materialIndex];o&&o.visible&&h.push(e,t,o,n,V.z,a)}}else s.visible&&h.push(e,t,s,n,V.z,null)}const s=e.children;for(let e=0,i=s.length;e<i;e++)Ne(s[e],t,n,r)}function Le(e,t,n,r){const s=e.opaque,i=e.transmissive,o=e.transparent;d.setupLightsView(n),i.length>0&&function(e,t,n){if(null===U){const e=!0===a&&!0===j.isWebGL2;U=new(e?ir:rr)(1024,1024,{generateMipmaps:!0,type:null!==me.convert(ke)?ke:Te,minFilter:_e,magFilter:fe,wrapS:de,wrapT:de})}const r=x.getRenderTarget();x.setRenderTarget(U),x.clear();const s=x.toneMapping;x.toneMapping=Z,De(e,t,n),x.toneMapping=s,Y.updateMultisampleRenderTarget(U),Y.updateRenderTargetMipmap(U),x.setRenderTarget(r)}(s,t,n),r&&X.viewport(E.copy(r)),s.length>0&&De(s,t,n),i.length>0&&De(i,t,n),o.length>0&&De(o,t,n)}function De(e,t,n){const r=!0===t.isScene?t.overrideMaterial:null;for(let s=0,i=e.length;s<i;s++){const i=e[s],a=i.object,o=i.geometry,l=null===r?i.material:r,u=i.group;a.layers.test(n.layers)&&Oe(a,t,n,o,l,u)}}function Oe(e,t,n,r,s,i){if(e.onBeforeRender(x,t,n,r,s,i),e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),e.isImmediateRenderObject){const r=Be(n,t,s,e);X.setMaterial(s),ge.reset(),function(e,t){e.render((function(e){x.renderBufferImmediate(e,t)}))}(e,r)}else!0===s.transparent&&s.side===g?(s.side=m,s.needsUpdate=!0,x.renderBufferDirect(n,t,r,s,e,i),s.side=f,s.needsUpdate=!0,x.renderBufferDirect(n,t,r,s,e,i),s.side=g):x.renderBufferDirect(n,t,r,s,e,i);e.onAfterRender(x,t,n,r,s,i)}function Pe(e,t,n){!0!==t.isScene&&(t=G);const r=K.get(e),s=d.state.lights,i=d.state.shadowsArray,a=s.state.version,o=re.getParameters(e,s.state,i,t,n),l=re.getProgramCacheKey(o);let u=r.programs;r.environment=e.isMeshStandardMaterial?t.environment:null,r.fog=t.fog,r.envMap=(e.isMeshStandardMaterial?Q:J).get(e.envMap||r.environment),void 0===u&&(e.addEventListener("dispose",Ee),u=new Map,r.programs=u);let c=u.get(l);if(void 0!==c){if(r.currentProgram===c&&r.lightsStateVersion===a)return Fe(e,o),c}else o.uniforms=re.getUniforms(e),e.onBuild(o,x),e.onBeforeCompile(o,x),c=re.acquireProgram(o,l),u.set(l,c),r.uniforms=o.uniforms;const h=r.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(h.clippingPlanes=oe.uniform),Fe(e,o),r.needsLights=function(e){return e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights}(e),r.lightsStateVersion=a,r.needsLights&&(h.ambientLightColor.value=s.state.ambient,h.lightProbe.value=s.state.probe,h.directionalLights.value=s.state.directional,h.directionalLightShadows.value=s.state.directionalShadow,h.spotLights.value=s.state.spot,h.spotLightShadows.value=s.state.spotShadow,h.rectAreaLights.value=s.state.rectArea,h.ltc_1.value=s.state.rectAreaLTC1,h.ltc_2.value=s.state.rectAreaLTC2,h.pointLights.value=s.state.point,h.pointLightShadows.value=s.state.pointShadow,h.hemisphereLights.value=s.state.hemi,h.directionalShadowMap.value=s.state.directionalShadowMap,h.directionalShadowMatrix.value=s.state.directionalShadowMatrix,h.spotShadowMap.value=s.state.spotShadowMap,h.spotShadowMatrix.value=s.state.spotShadowMatrix,h.pointShadowMap.value=s.state.pointShadowMap,h.pointShadowMatrix.value=s.state.pointShadowMatrix);const p=c.getUniforms(),f=ko.seqWithValue(p.seq,h);return r.currentProgram=c,r.uniformsList=f,c}function Fe(e,t){const n=K.get(e);n.outputEncoding=t.outputEncoding,n.instancing=t.instancing,n.skinning=t.skinning,n.morphTargets=t.morphTargets,n.morphNormals=t.morphNormals,n.numClippingPlanes=t.numClippingPlanes,n.numIntersection=t.numClipIntersection,n.vertexAlphas=t.vertexAlphas,n.vertexTangents=t.vertexTangents}function Be(e,t,n,r){!0!==t.isScene&&(t=G),Y.resetTextureUnits();const s=t.fog,i=n.isMeshStandardMaterial?t.environment:null,a=null===_?x.outputEncoding:_.texture.encoding,o=(n.isMeshStandardMaterial?Q:J).get(n.envMap||i),l=!0===n.vertexColors&&!!r.geometry&&!!r.geometry.attributes.color&&4===r.geometry.attributes.color.itemSize,u=!!r.geometry&&!!r.geometry.attributes.tangent,c=!!r.geometry&&!!r.geometry.morphAttributes.position,h=!!r.geometry&&!!r.geometry.morphAttributes.normal,p=K.get(n),f=d.state.lights;if(!0===$&&(!0===B||e!==T)){const t=e===T&&n.id===S;oe.setState(n,e,t)}let m=!1;n.version===p.__version?p.needsLights&&p.lightsStateVersion!==f.state.version||p.outputEncoding!==a||r.isInstancedMesh&&!1===p.instancing?m=!0:r.isInstancedMesh||!0!==p.instancing?r.isSkinnedMesh&&!1===p.skinning?m=!0:r.isSkinnedMesh||!0!==p.skinning?p.envMap!==o||n.fog&&p.fog!==s?m=!0:void 0===p.numClippingPlanes||p.numClippingPlanes===oe.numPlanes&&p.numIntersection===oe.numIntersection?(p.vertexAlphas!==l||p.vertexTangents!==u||p.morphTargets!==c||p.morphNormals!==h)&&(m=!0):m=!0:m=!0:m=!0:(m=!0,p.__version=n.version);let g=p.currentProgram;!0===m&&(g=Pe(n,t,r));let y=!1,v=!1,b=!1;const w=g.getUniforms(),E=p.uniforms;if(X.useProgram(g.program)&&(y=!0,v=!0,b=!0),n.id!==S&&(S=n.id,v=!0),y||T!==e){if(w.setValue(ye,"projectionMatrix",e.projectionMatrix),j.logarithmicDepthBuffer&&w.setValue(ye,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),T!==e&&(T=e,v=!0,b=!0),n.isShaderMaterial||n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshStandardMaterial||n.envMap){const t=w.map.cameraPosition;void 0!==t&&t.setValue(ye,V.setFromMatrixPosition(e.matrixWorld))}(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial)&&w.setValue(ye,"isOrthographic",!0===e.isOrthographicCamera),(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial||n.isShadowMaterial||r.isSkinnedMesh)&&w.setValue(ye,"viewMatrix",e.matrixWorldInverse)}if(r.isSkinnedMesh){w.setOptional(ye,r,"bindMatrix"),w.setOptional(ye,r,"bindMatrixInverse");const e=r.skeleton;e&&(j.floatVertexTextures?(null===e.boneTexture&&e.computeBoneTexture(),w.setValue(ye,"boneTexture",e.boneTexture,Y),w.setValue(ye,"boneTextureSize",e.boneTextureSize)):w.setOptional(ye,e,"boneMatrices"))}var M,C;return(v||p.receiveShadow!==r.receiveShadow)&&(p.receiveShadow=r.receiveShadow,w.setValue(ye,"receiveShadow",r.receiveShadow)),v&&(w.setValue(ye,"toneMappingExposure",x.toneMappingExposure),p.needsLights&&(C=b,(M=E).ambientLightColor.needsUpdate=C,M.lightProbe.needsUpdate=C,M.directionalLights.needsUpdate=C,M.directionalLightShadows.needsUpdate=C,M.pointLights.needsUpdate=C,M.pointLightShadows.needsUpdate=C,M.spotLights.needsUpdate=C,M.spotLightShadows.needsUpdate=C,M.rectAreaLights.needsUpdate=C,M.hemisphereLights.needsUpdate=C),s&&n.fog&&se.refreshFogUniforms(E,s),se.refreshMaterialUniforms(E,n,R,I,U),ko.upload(ye,p.uniformsList,E,Y)),n.isShaderMaterial&&!0===n.uniformsNeedUpdate&&(ko.upload(ye,p.uniformsList,E,Y),n.uniformsNeedUpdate=!1),n.isSpriteMaterial&&w.setValue(ye,"center",r.center),w.setValue(ye,"modelViewMatrix",r.modelViewMatrix),w.setValue(ye,"normalMatrix",r.normalMatrix),w.setValue(ye,"modelMatrix",r.matrixWorld),g}Ie.setAnimationLoop((function(e){Me&&Me(e)})),"undefined"!=typeof window&&Ie.setContext(window),this.setAnimationLoop=function(e){Me=e,be.setAnimationLoop(e),null===e?Ie.stop():Ie.start()},be.addEventListener("sessionstart",Ce),be.addEventListener("sessionend",Ae),this.render=function(e,t){if(void 0!==t&&!0!==t.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===v)return;!0===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),!0===be.enabled&&!0===be.isPresenting&&(!0===be.cameraAutoUpdate&&be.updateCamera(t),t=be.getCamera()),!0===e.isScene&&e.onBeforeRender(x,e,t,_),d=ae.get(e,y.length),d.init(),y.push(d),z.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),F.setFromProjectionMatrix(z),B=this.localClippingEnabled,$=oe.init(this.clippingPlanes,B,t),h=ie.get(e,p.length),h.init(),p.push(h),Ne(e,t,0,x.sortObjects),h.finish(),!0===x.sortObjects&&h.sort(k,N),!0===$&&oe.beginShadows();const n=d.state.shadowsArray;if(le.render(n,e,t),!0===$&&oe.endShadows(),!0===this.info.autoReset&&this.info.reset(),ue.render(h,e),d.setupLights(x.physicallyCorrectLights),t.isArrayCamera){const n=t.cameras;for(let t=0,r=n.length;t<r;t++){const r=n[t];Le(h,e,r,r.viewport)}}else Le(h,e,t);null!==_&&(Y.updateMultisampleRenderTarget(_),Y.updateRenderTargetMipmap(_)),!0===e.isScene&&e.onAfterRender(x,e,t),X.buffers.depth.setTest(!0),X.buffers.depth.setMask(!0),X.buffers.color.setMask(!0),X.setPolygonOffset(!1),ge.resetDefaultState(),S=-1,T=null,y.pop(),d=y.length>0?y[y.length-1]:null,p.pop(),h=p.length>0?p[p.length-1]:null},this.getActiveCubeFace=function(){return b},this.getActiveMipmapLevel=function(){return w},this.getRenderTarget=function(){return _},this.setRenderTarget=function(e,t=0,n=0){_=e,b=t,w=n,e&&void 0===K.get(e).__webglFramebuffer&&Y.setupRenderTarget(e);let r=null,s=!1,i=!1;if(e){const n=e.texture;(n.isDataTexture3D||n.isDataTexture2DArray)&&(i=!0);const a=K.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(r=a[t],s=!0):r=e.isWebGLMultisampleRenderTarget?K.get(e).__webglMultisampledFramebuffer:a,E.copy(e.viewport),M.copy(e.scissor),C=e.scissorTest}else E.copy(L).multiplyScalar(R).floor(),M.copy(D).multiplyScalar(R).floor(),C=O;if(X.bindFramebuffer(36160,r)&&j.drawBuffers){let t=!1;if(e)if(e.isWebGLMultipleRenderTargets){const n=e.texture;if(P.length!==n.length||36064!==P[0]){for(let e=0,t=n.length;e<t;e++)P[e]=36064+e;P.length=n.length,t=!0}}else 1===P.length&&36064===P[0]||(P[0]=36064,P.length=1,t=!0);else 1===P.length&&1029===P[0]||(P[0]=1029,P.length=1,t=!0);t&&(j.isWebGL2?ye.drawBuffers(P):H.get("WEBGL_draw_buffers").drawBuffersWEBGL(P))}if(X.viewport(E),X.scissor(M),X.setScissorTest(C),s){const r=K.get(e.texture);ye.framebufferTexture2D(36160,36064,34069+t,r.__webglTexture,n)}else if(i){const r=K.get(e.texture),s=t||0;ye.framebufferTextureLayer(36160,36064,r.__webglTexture,n||0,s)}S=-1},this.readRenderTargetPixels=function(e,t,n,r,s,i,a){if(!e||!e.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let o=K.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==a&&(o=o[a]),o){X.bindFramebuffer(36160,o);try{const a=e.texture,o=a.format,l=a.type;if(o!==$e&&me.convert(o)!==ye.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const u=l===ke&&(H.has("EXT_color_buffer_half_float")||j.isWebGL2&&H.has("EXT_color_buffer_float"));if(!(l===Te||me.convert(l)===ye.getParameter(35738)||l===Re&&(j.isWebGL2||H.has("OES_texture_float")||H.has("WEBGL_color_buffer_float"))||u))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===ye.checkFramebufferStatus(36160)?t>=0&&t<=e.width-r&&n>=0&&n<=e.height-s&&ye.readPixels(t,n,r,s,me.convert(o),me.convert(l),i):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{const e=null!==_?K.get(_).__webglFramebuffer:null;X.bindFramebuffer(36160,e)}}},this.copyFramebufferToTexture=function(e,t,n=0){const r=Math.pow(2,-n),s=Math.floor(t.image.width*r),i=Math.floor(t.image.height*r);let a=me.convert(t.format);j.isWebGL2&&(6407===a&&(a=32849),6408===a&&(a=32856)),Y.setTexture2D(t,0),ye.copyTexImage2D(3553,n,a,e.x,e.y,s,i,0),X.unbindTexture()},this.copyTextureToTexture=function(e,t,n,r=0){const s=t.image.width,i=t.image.height,a=me.convert(n.format),o=me.convert(n.type);Y.setTexture2D(n,0),ye.pixelStorei(37440,n.flipY),ye.pixelStorei(37441,n.premultiplyAlpha),ye.pixelStorei(3317,n.unpackAlignment),t.isDataTexture?ye.texSubImage2D(3553,r,e.x,e.y,s,i,a,o,t.image.data):t.isCompressedTexture?ye.compressedTexSubImage2D(3553,r,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,a,t.mipmaps[0].data):ye.texSubImage2D(3553,r,e.x,e.y,a,o,t.image),0===r&&n.generateMipmaps&&ye.generateMipmap(3553),X.unbindTexture()},this.copyTextureToTexture3D=function(e,t,n,r,s=0){if(x.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const i=e.max.x-e.min.x+1,a=e.max.y-e.min.y+1,o=e.max.z-e.min.z+1,l=me.convert(r.format),u=me.convert(r.type);let c;if(r.isDataTexture3D)Y.setTexture3D(r,0),c=32879;else{if(!r.isDataTexture2DArray)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");Y.setTexture2DArray(r,0),c=35866}ye.pixelStorei(37440,r.flipY),ye.pixelStorei(37441,r.premultiplyAlpha),ye.pixelStorei(3317,r.unpackAlignment);const h=ye.getParameter(3314),d=ye.getParameter(32878),p=ye.getParameter(3316),f=ye.getParameter(3315),m=ye.getParameter(32877),g=n.isCompressedTexture?n.mipmaps[0]:n.image;ye.pixelStorei(3314,g.width),ye.pixelStorei(32878,g.height),ye.pixelStorei(3316,e.min.x),ye.pixelStorei(3315,e.min.y),ye.pixelStorei(32877,e.min.z),n.isDataTexture||n.isDataTexture3D?ye.texSubImage3D(c,s,t.x,t.y,t.z,i,a,o,l,u,g.data):n.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),ye.compressedTexSubImage3D(c,s,t.x,t.y,t.z,i,a,o,l,g.data)):ye.texSubImage3D(c,s,t.x,t.y,t.z,i,a,o,l,u,g),ye.pixelStorei(3314,h),ye.pixelStorei(32878,d),ye.pixelStorei(3316,p),ye.pixelStorei(3315,f),ye.pixelStorei(32877,m),0===s&&r.generateMipmaps&&ye.generateMipmap(c),X.unbindTexture()},this.initTexture=function(e){Y.setTexture2D(e,0),X.unbindTexture()},this.resetState=function(){b=0,w=0,_=null,X.reset(),ge.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class El extends Tl{}El.prototype.isWebGL1Renderer=!0;class Ml{constructor(e,t=25e-5){this.name="",this.color=new Is(e),this.density=t}clone(){return new Ml(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}Ml.prototype.isFogExp2=!0;class Cl{constructor(e,t=1,n=1e3){this.name="",this.color=new Is(e),this.near=t,this.far=n}clone(){return new Cl(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}Cl.prototype.isFog=!0;class Al extends us{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return null!==this.fog&&(t.object.fog=this.fog.toJSON()),t}}Al.prototype.isScene=!0;class Il{constructor(e,t){this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=En,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=zn()}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let r=0,s=this.stride;r<s;r++)this.array[e+r]=t.array[n+r];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=zn()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=zn()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}Il.prototype.isInterleavedBuffer=!0;const Rl=new or;class kl{constructor(e,t,n,r=!1){this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=!0===r}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Rl.x=this.getX(t),Rl.y=this.getY(t),Rl.z=this.getZ(t),Rl.applyMatrix4(e),this.setXYZ(t,Rl.x,Rl.y,Rl.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Rl.x=this.getX(t),Rl.y=this.getY(t),Rl.z=this.getZ(t),Rl.applyNormalMatrix(e),this.setXYZ(t,Rl.x,Rl.y,Rl.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Rl.x=this.getX(t),Rl.y=this.getY(t),Rl.z=this.getZ(t),Rl.transformDirection(e),this.setXYZ(t,Rl.x,Rl.y,Rl.z);return this}setX(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){return this.data.array[e*this.data.stride+this.offset]}getY(e){return this.data.array[e*this.data.stride+this.offset+1]}getZ(e){return this.data.array[e*this.data.stride+this.offset+2]}getW(e){return this.data.array[e*this.data.stride+this.offset+3]}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this}setXYZW(e,t,n,r,s){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this.data.array[e+3]=s,this}clone(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const n=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[n+t])}return new Ls(new this.array.constructor(e),this.itemSize,this.normalized)}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new kl(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const n=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[n+t])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}kl.prototype.isInterleavedBufferAttribute=!0;class Nl extends _s{constructor(e){super(),this.type="SpriteMaterial",this.color=new Is(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this}}let Ll;Nl.prototype.isSpriteMaterial=!0;const Dl=new or,Ol=new or,Pl=new or,Fl=new Kn,$l=new Kn,Bl=new $r,Ul=new or,zl=new or,Vl=new or,Gl=new Kn,Wl=new Kn,Hl=new Kn;class jl extends us{constructor(e){if(super(),this.type="Sprite",void 0===Ll){Ll=new ei;const e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),t=new Il(e,5);Ll.setIndex([0,1,2,0,2,3]),Ll.setAttribute("position",new kl(t,3,0,!1)),Ll.setAttribute("uv",new kl(t,2,3,!1))}this.geometry=Ll,this.material=void 0!==e?e:new Nl,this.center=new Kn(.5,.5)}raycast(e,t){null===e.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Ol.setFromMatrixScale(this.matrixWorld),Bl.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Pl.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&Ol.multiplyScalar(-Pl.z);const n=this.material.rotation;let r,s;0!==n&&(s=Math.cos(n),r=Math.sin(n));const i=this.center;Xl(Ul.set(-.5,-.5,0),Pl,i,Ol,r,s),Xl(zl.set(.5,-.5,0),Pl,i,Ol,r,s),Xl(Vl.set(.5,.5,0),Pl,i,Ol,r,s),Gl.set(0,0),Wl.set(1,0),Hl.set(1,1);let a=e.ray.intersectTriangle(Ul,zl,Vl,!1,Dl);if(null===a&&(Xl(zl.set(-.5,.5,0),Pl,i,Ol,r,s),Wl.set(0,1),a=e.ray.intersectTriangle(Ul,Vl,zl,!1,Dl),null===a))return;const o=e.ray.origin.distanceTo(Dl);o<e.near||o>e.far||t.push({distance:o,point:Dl.clone(),uv:bs.getUV(Dl,Ul,zl,Vl,Gl,Wl,Hl,new Kn),face:null,object:this})}copy(e){return super.copy(e),void 0!==e.center&&this.center.copy(e.center),this.material=e.material,this}}function Xl(e,t,n,r,s,i){Fl.subVectors(e,n).addScalar(.5).multiply(r),void 0!==s?($l.x=i*Fl.x-s*Fl.y,$l.y=s*Fl.x+i*Fl.y):$l.copy(Fl),e.copy(t),e.x+=$l.x,e.y+=$l.y,e.applyMatrix4(Bl)}jl.prototype.isSprite=!0;const ql=new or,Kl=new or;class Yl extends us{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let e=0,n=t.length;e<n;e++){const n=t[e];this.addLevel(n.object.clone(),n.distance)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0){t=Math.abs(t);const n=this.levels;let r;for(r=0;r<n.length&&!(t<n[r].distance);r++);return n.splice(r,0,{distance:t,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,r;for(n=1,r=t.length;n<r&&!(e<t[n].distance);n++);return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){ql.setFromMatrixPosition(this.matrixWorld);const n=e.ray.origin.distanceTo(ql);this.getObjectForDistance(n).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){ql.setFromMatrixPosition(e.matrixWorld),Kl.setFromMatrixPosition(this.matrixWorld);const n=ql.distanceTo(Kl)/e.zoom;let r,s;for(t[0].object.visible=!0,r=1,s=t.length;r<s&&n>=t[r].distance;r++)t[r-1].object.visible=!1,t[r].object.visible=!0;for(this._currentLevel=r-1;r<s;r++)t[r].object.visible=!1}}toJSON(e){const t=super.toJSON(e);!1===this.autoUpdate&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let e=0,r=n.length;e<r;e++){const r=n[e];t.object.levels.push({object:r.object.uuid,distance:r.distance})}return t}}const Jl=new or,Zl=new nr,Ql=new nr,eu=new or,tu=new $r;class nu extends xi{constructor(e,t){super(e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new $r,this.bindMatrixInverse=new $r}copy(e){return super.copy(e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new nr,t=this.geometry.attributes.skinWeight;for(let n=0,r=t.count;n<r;n++){e.x=t.getX(n),e.y=t.getY(n),e.z=t.getZ(n),e.w=t.getW(n);const r=1/e.manhattanLength();r!==1/0?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){const n=this.skeleton,r=this.geometry;Zl.fromBufferAttribute(r.attributes.skinIndex,e),Ql.fromBufferAttribute(r.attributes.skinWeight,e),Jl.fromBufferAttribute(r.attributes.position,e).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let e=0;e<4;e++){const r=Ql.getComponent(e);if(0!==r){const s=Zl.getComponent(e);tu.multiplyMatrices(n.bones[s].matrixWorld,n.boneInverses[s]),t.addScaledVector(eu.copy(Jl).applyMatrix4(tu),r)}}return t.applyMatrix4(this.bindMatrixInverse)}}nu.prototype.isSkinnedMesh=!0;class ru extends us{constructor(){super(),this.type="Bone"}}ru.prototype.isBone=!0;class su extends er{constructor(e=null,t=1,n=1,r,s,i,a,o,l=fe,u=fe,c,h){super(null,i,a,o,l,u,r,s,c,h),this.image={data:e,width:t,height:n},this.magFilter=l,this.minFilter=u,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}su.prototype.isDataTexture=!0;const iu=new $r,au=new $r;class ou{constructor(e=[],t=[]){this.uuid=zn(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(16*e.length),0===t.length)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let e=0,t=this.bones.length;e<t;e++)this.boneInverses.push(new $r)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const t=new $r;this.bones[e]&&t.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(t)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const t=this.bones[e];t&&t.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const t=this.bones[e];t&&(t.parent&&t.parent.isBone?(t.matrix.copy(t.parent.matrixWorld).invert(),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,r=this.boneTexture;for(let r=0,s=e.length;r<s;r++){const s=e[r]?e[r].matrixWorld:au;iu.multiplyMatrices(s,t[r]),iu.toArray(n,16*r)}null!==r&&(r.needsUpdate=!0)}clone(){return new ou(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(4*this.bones.length);e=jn(e),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new su(t,e,e,$e,Re);return this.boneMatrices=t,this.boneTexture=n,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const n=this.bones[t];if(n.name===e)return n}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,r=e.bones.length;n<r;n++){const r=e.bones[n];let s=t[r];void 0===s&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),s=new ru),this.bones.push(s),this.boneInverses.push((new $r).fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let r=0,s=t.length;r<s;r++){const s=t[r];e.bones.push(s.uuid);const i=n[r];e.boneInverses.push(i.toArray())}return e}}class lu extends Ls{constructor(e,t,n,r=1){"number"==typeof n&&(r=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(e,t,n),this.meshPerAttribute=r}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}lu.prototype.isInstancedBufferAttribute=!0;const uu=new $r,cu=new $r,hu=[],du=new xi;class pu extends xi{constructor(e,t,n){super(e,t),this.instanceMatrix=new lu(new Float32Array(16*n),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(e){return super.copy(e),this.instanceMatrix.copy(e.instanceMatrix),null!==e.instanceColor&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,3*e)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,16*e)}raycast(e,t){const n=this.matrixWorld,r=this.count;if(du.geometry=this.geometry,du.material=this.material,void 0!==du.material)for(let s=0;s<r;s++){this.getMatrixAt(s,uu),cu.multiplyMatrices(n,uu),du.matrixWorld=cu,du.raycast(e,hu);for(let e=0,n=hu.length;e<n;e++){const n=hu[e];n.instanceId=s,n.object=this,t.push(n)}hu.length=0}}setColorAt(e,t){null===this.instanceColor&&(this.instanceColor=new lu(new Float32Array(3*this.instanceMatrix.count),3)),t.toArray(this.instanceColor.array,3*e)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,16*e)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}pu.prototype.isInstancedMesh=!0;class fu extends _s{constructor(e){super(),this.type="LineBasicMaterial",this.color=new Is(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this}}fu.prototype.isLineBasicMaterial=!0;const mu=new or,gu=new or,yu=new $r,xu=new Fr,vu=new Ir;class bu extends us{constructor(e=new ei,t=new fu){super(),this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(null===e.index){const t=e.attributes.position,n=[0];for(let e=1,r=t.count;e<r;e++)mu.fromBufferAttribute(t,e-1),gu.fromBufferAttribute(t,e),n[e]=n[e-1],n[e]+=mu.distanceTo(gu);e.setAttribute("lineDistance",new Vs(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(e,t){const n=this.geometry,r=this.matrixWorld,s=e.params.Line.threshold,i=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),vu.copy(n.boundingSphere),vu.applyMatrix4(r),vu.radius+=s,!1===e.ray.intersectsSphere(vu))return;yu.copy(r).invert(),xu.copy(e.ray).applyMatrix4(yu);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a,l=new or,u=new or,c=new or,h=new or,d=this.isLineSegments?2:1;if(n.isBufferGeometry){const r=n.index,s=n.attributes.position;if(null!==r)for(let n=Math.max(0,i.start),a=Math.min(r.count,i.start+i.count)-1;n<a;n+=d){const i=r.getX(n),a=r.getX(n+1);if(l.fromBufferAttribute(s,i),u.fromBufferAttribute(s,a),xu.distanceSqToSegment(l,u,h,c)>o)continue;h.applyMatrix4(this.matrixWorld);const d=e.ray.origin.distanceTo(h);d<e.near||d>e.far||t.push({distance:d,point:c.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}else for(let n=Math.max(0,i.start),r=Math.min(s.count,i.start+i.count)-1;n<r;n+=d){if(l.fromBufferAttribute(s,n),u.fromBufferAttribute(s,n+1),xu.distanceSqToSegment(l,u,h,c)>o)continue;h.applyMatrix4(this.matrixWorld);const r=e.ray.origin.distanceTo(h);r<e.near||r>e.far||t.push({distance:r,point:c.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const e=t[n[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,n=e.length;t<n;t++){const n=e[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=t}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}bu.prototype.isLine=!0;const wu=new or,_u=new or;class Su extends bu{constructor(e,t){super(e,t),this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(null===e.index){const t=e.attributes.position,n=[];for(let e=0,r=t.count;e<r;e+=2)wu.fromBufferAttribute(t,e),_u.fromBufferAttribute(t,e+1),n[e]=0===e?0:n[e-1],n[e+1]=n[e]+wu.distanceTo(_u);e.setAttribute("lineDistance",new Vs(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}Su.prototype.isLineSegments=!0;class Tu extends bu{constructor(e,t){super(e,t),this.type="LineLoop"}}Tu.prototype.isLineLoop=!0;class Eu extends _s{constructor(e){super(),this.type="PointsMaterial",this.color=new Is(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this}}Eu.prototype.isPointsMaterial=!0;const Mu=new $r,Cu=new Fr,Au=new Ir,Iu=new or;class Ru extends us{constructor(e=new ei,t=new Eu){super(),this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,r=this.matrixWorld,s=e.params.Points.threshold,i=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),Au.copy(n.boundingSphere),Au.applyMatrix4(r),Au.radius+=s,!1===e.ray.intersectsSphere(Au))return;Mu.copy(r).invert(),Cu.copy(e.ray).applyMatrix4(Mu);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a;if(n.isBufferGeometry){const s=n.index,a=n.attributes.position;if(null!==s)for(let n=Math.max(0,i.start),l=Math.min(s.count,i.start+i.count);n<l;n++){const i=s.getX(n);Iu.fromBufferAttribute(a,i),ku(Iu,i,o,r,e,t,this)}else for(let n=Math.max(0,i.start),s=Math.min(a.count,i.start+i.count);n<s;n++)Iu.fromBufferAttribute(a,n),ku(Iu,n,o,r,e,t,this)}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const e=t[n[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,n=e.length;t<n;t++){const n=e[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=t}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}function ku(e,t,n,r,s,i,a){const o=Cu.distanceSqToPoint(e);if(o<n){const n=new or;Cu.closestPointToPoint(e,n),n.applyMatrix4(r);const l=s.ray.origin.distanceTo(n);if(l<s.near||l>s.far)return;i.push({distance:l,distanceToRay:Math.sqrt(o),point:n,index:t,face:null,object:a})}}Ru.prototype.isPoints=!0;class Nu extends er{constructor(e,t,n,r,s,i,a,o,l){super(e,t,n,r,s,i,a,o,l),this.format=void 0!==a?a:Fe,this.minFilter=void 0!==i?i:ve,this.magFilter=void 0!==s?s:ve,this.generateMipmaps=!1;const u=this;"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback((function t(){u.needsUpdate=!0,e.requestVideoFrameCallback(t)}))}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;!1=="requestVideoFrameCallback"in e&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}Nu.prototype.isVideoTexture=!0;class Lu extends er{constructor(e,t,n,r,s,i,a,o,l,u,c,h){super(null,i,a,o,l,u,r,s,c,h),this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}Lu.prototype.isCompressedTexture=!0;class Du extends er{constructor(e,t,n,r,s,i,a,o,l){super(e,t,n,r,s,i,a,o,l),this.needsUpdate=!0}}Du.prototype.isCanvasTexture=!0;class Ou extends er{constructor(e,t,n,r,s,i,a,o,l,u){if((u=void 0!==u?u:Ve)!==Ve&&u!==Ge)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&u===Ve&&(n=Ce),void 0===n&&u===Ge&&(n=Oe),super(null,r,s,i,a,o,u,n,l),this.image={width:e,height:t},this.magFilter=void 0!==a?a:fe,this.minFilter=void 0!==o?o:fe,this.flipY=!1,this.generateMipmaps=!1}}Ou.prototype.isDepthTexture=!0;class Pu extends ei{constructor(e=1,t=8,n=0,r=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:r},t=Math.max(3,t);const s=[],i=[],a=[],o=[],l=new or,u=new Kn;i.push(0,0,0),a.push(0,0,1),o.push(.5,.5);for(let s=0,c=3;s<=t;s++,c+=3){const h=n+s/t*r;l.x=e*Math.cos(h),l.y=e*Math.sin(h),i.push(l.x,l.y,l.z),a.push(0,0,1),u.x=(i[c]/e+1)/2,u.y=(i[c+1]/e+1)/2,o.push(u.x,u.y)}for(let e=1;e<=t;e++)s.push(e,e+1,0);this.setIndex(s),this.setAttribute("position",new Vs(i,3)),this.setAttribute("normal",new Vs(a,3)),this.setAttribute("uv",new Vs(o,2))}static fromJSON(e){return new Pu(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class Fu extends ei{constructor(e=1,t=1,n=1,r=8,s=1,i=!1,a=0,o=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:r,heightSegments:s,openEnded:i,thetaStart:a,thetaLength:o};const l=this;r=Math.floor(r),s=Math.floor(s);const u=[],c=[],h=[],d=[];let p=0;const f=[],m=n/2;let g=0;function y(n){const s=p,i=new Kn,f=new or;let y=0;const x=!0===n?e:t,v=!0===n?1:-1;for(let e=1;e<=r;e++)c.push(0,m*v,0),h.push(0,v,0),d.push(.5,.5),p++;const b=p;for(let e=0;e<=r;e++){const t=e/r*o+a,n=Math.cos(t),s=Math.sin(t);f.x=x*s,f.y=m*v,f.z=x*n,c.push(f.x,f.y,f.z),h.push(0,v,0),i.x=.5*n+.5,i.y=.5*s*v+.5,d.push(i.x,i.y),p++}for(let e=0;e<r;e++){const t=s+e,r=b+e;!0===n?u.push(r,r+1,t):u.push(r+1,r,t),y+=3}l.addGroup(g,y,!0===n?1:2),g+=y}!function(){const i=new or,y=new or;let x=0;const v=(t-e)/n;for(let l=0;l<=s;l++){const u=[],g=l/s,x=g*(t-e)+e;for(let e=0;e<=r;e++){const t=e/r,s=t*o+a,l=Math.sin(s),f=Math.cos(s);y.x=x*l,y.y=-g*n+m,y.z=x*f,c.push(y.x,y.y,y.z),i.set(l,v,f).normalize(),h.push(i.x,i.y,i.z),d.push(t,1-g),u.push(p++)}f.push(u)}for(let e=0;e<r;e++)for(let t=0;t<s;t++){const n=f[t][e],r=f[t+1][e],s=f[t+1][e+1],i=f[t][e+1];u.push(n,r,i),u.push(r,s,i),x+=6}l.addGroup(g,x,0),g+=x}(),!1===i&&(e>0&&y(!0),t>0&&y(!1)),this.setIndex(u),this.setAttribute("position",new Vs(c,3)),this.setAttribute("normal",new Vs(h,3)),this.setAttribute("uv",new Vs(d,2))}static fromJSON(e){return new Fu(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class $u extends Fu{constructor(e=1,t=1,n=8,r=1,s=!1,i=0,a=2*Math.PI){super(0,e,t,n,r,s,i,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:r,openEnded:s,thetaStart:i,thetaLength:a}}static fromJSON(e){return new $u(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Bu extends ei{constructor(e,t,n=1,r=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:r};const s=[],i=[];function a(e,t,n,r){const s=r+1,i=[];for(let r=0;r<=s;r++){i[r]=[];const a=e.clone().lerp(n,r/s),o=t.clone().lerp(n,r/s),l=s-r;for(let e=0;e<=l;e++)i[r][e]=0===e&&r===s?a:a.clone().lerp(o,e/l)}for(let e=0;e<s;e++)for(let t=0;t<2*(s-e)-1;t++){const n=Math.floor(t/2);t%2==0?(o(i[e][n+1]),o(i[e+1][n]),o(i[e][n])):(o(i[e][n+1]),o(i[e+1][n+1]),o(i[e+1][n]))}}function o(e){s.push(e.x,e.y,e.z)}function l(t,n){const r=3*t;n.x=e[r+0],n.y=e[r+1],n.z=e[r+2]}function u(e,t,n,r){r<0&&1===e.x&&(i[t]=e.x-1),0===n.x&&0===n.z&&(i[t]=r/2/Math.PI+.5)}function c(e){return Math.atan2(e.z,-e.x)}!function(e){const n=new or,r=new or,s=new or;for(let i=0;i<t.length;i+=3)l(t[i+0],n),l(t[i+1],r),l(t[i+2],s),a(n,r,s,e)}(r),function(e){const t=new or;for(let n=0;n<s.length;n+=3)t.x=s[n+0],t.y=s[n+1],t.z=s[n+2],t.normalize().multiplyScalar(e),s[n+0]=t.x,s[n+1]=t.y,s[n+2]=t.z}(n),function(){const e=new or;for(let n=0;n<s.length;n+=3){e.x=s[n+0],e.y=s[n+1],e.z=s[n+2];const r=c(e)/2/Math.PI+.5,a=(t=e,Math.atan2(-t.y,Math.sqrt(t.x*t.x+t.z*t.z))/Math.PI+.5);i.push(r,1-a)}var t;(function(){const e=new or,t=new or,n=new or,r=new or,a=new Kn,o=new Kn,l=new Kn;for(let h=0,d=0;h<s.length;h+=9,d+=6){e.set(s[h+0],s[h+1],s[h+2]),t.set(s[h+3],s[h+4],s[h+5]),n.set(s[h+6],s[h+7],s[h+8]),a.set(i[d+0],i[d+1]),o.set(i[d+2],i[d+3]),l.set(i[d+4],i[d+5]),r.copy(e).add(t).add(n).divideScalar(3);const p=c(r);u(a,d+0,e,p),u(o,d+2,t,p),u(l,d+4,n,p)}})(),function(){for(let e=0;e<i.length;e+=6){const t=i[e+0],n=i[e+2],r=i[e+4],s=Math.max(t,n,r),a=Math.min(t,n,r);s>.9&&a<.1&&(t<.2&&(i[e+0]+=1),n<.2&&(i[e+2]+=1),r<.2&&(i[e+4]+=1))}}()}(),this.setAttribute("position",new Vs(s,3)),this.setAttribute("normal",new Vs(s.slice(),3)),this.setAttribute("uv",new Vs(i,2)),0===r?this.computeVertexNormals():this.normalizeNormals()}static fromJSON(e){return new Bu(e.vertices,e.indices,e.radius,e.details)}}class Uu extends Bu{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,r=1/n;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-n,0,-r,n,0,r,-n,0,r,n,-r,-n,0,-r,n,0,r,-n,0,r,n,0,-n,0,-r,n,0,-r,-n,0,r,n,0,r],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Uu(e.radius,e.detail)}}const zu=new or,Vu=new or,Gu=new or,Wu=new bs;class Hu extends ei{constructor(e,t){if(super(),this.type="EdgesGeometry",this.parameters={thresholdAngle:t},t=void 0!==t?t:1,!0===e.isGeometry)return void console.error("THREE.EdgesGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");const n=Math.pow(10,4),r=Math.cos(Bn*t),s=e.getIndex(),i=e.getAttribute("position"),a=s?s.count:i.count,o=[0,0,0],l=["a","b","c"],u=new Array(3),c={},h=[];for(let e=0;e<a;e+=3){s?(o[0]=s.getX(e),o[1]=s.getX(e+1),o[2]=s.getX(e+2)):(o[0]=e,o[1]=e+1,o[2]=e+2);const{a:t,b:a,c:d}=Wu;if(t.fromBufferAttribute(i,o[0]),a.fromBufferAttribute(i,o[1]),d.fromBufferAttribute(i,o[2]),Wu.getNormal(Gu),u[0]=`${Math.round(t.x*n)},${Math.round(t.y*n)},${Math.round(t.z*n)}`,u[1]=`${Math.round(a.x*n)},${Math.round(a.y*n)},${Math.round(a.z*n)}`,u[2]=`${Math.round(d.x*n)},${Math.round(d.y*n)},${Math.round(d.z*n)}`,u[0]!==u[1]&&u[1]!==u[2]&&u[2]!==u[0])for(let e=0;e<3;e++){const t=(e+1)%3,n=u[e],s=u[t],i=Wu[l[e]],a=Wu[l[t]],d=`${n}_${s}`,p=`${s}_${n}`;p in c&&c[p]?(Gu.dot(c[p].normal)<=r&&(h.push(i.x,i.y,i.z),h.push(a.x,a.y,a.z)),c[p]=null):d in c||(c[d]={index0:o[e],index1:o[t],normal:Gu.clone()})}}for(const e in c)if(c[e]){const{index0:t,index1:n}=c[e];zu.fromBufferAttribute(i,t),Vu.fromBufferAttribute(i,n),h.push(zu.x,zu.y,zu.z),h.push(Vu.x,Vu.y,Vu.z)}this.setAttribute("position",new Vs(h,3))}}class ju{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,r=this.getPoint(0),s=0;t.push(0);for(let i=1;i<=e;i++)n=this.getPoint(i/e),s+=n.distanceTo(r),t.push(s),r=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let r=0;const s=n.length;let i;i=t||e*n[s-1];let a,o=0,l=s-1;for(;o<=l;)if(r=Math.floor(o+(l-o)/2),a=n[r]-i,a<0)o=r+1;else{if(!(a>0)){l=r;break}l=r-1}if(r=l,n[r]===i)return r/(s-1);const u=n[r];return(r+(i-u)/(n[r+1]-u))/(s-1)}getTangent(e,t){const n=1e-4;let r=e-n,s=e+n;r<0&&(r=0),s>1&&(s=1);const i=this.getPoint(r),a=this.getPoint(s),o=t||(i.isVector2?new Kn:new or);return o.copy(a).sub(i).normalize(),o}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new or,r=[],s=[],i=[],a=new or,o=new $r;for(let t=0;t<=e;t++){const n=t/e;r[t]=this.getTangentAt(n,new or),r[t].normalize()}s[0]=new or,i[0]=new or;let l=Number.MAX_VALUE;const u=Math.abs(r[0].x),c=Math.abs(r[0].y),h=Math.abs(r[0].z);u<=l&&(l=u,n.set(1,0,0)),c<=l&&(l=c,n.set(0,1,0)),h<=l&&n.set(0,0,1),a.crossVectors(r[0],n).normalize(),s[0].crossVectors(r[0],a),i[0].crossVectors(r[0],s[0]);for(let t=1;t<=e;t++){if(s[t]=s[t-1].clone(),i[t]=i[t-1].clone(),a.crossVectors(r[t-1],r[t]),a.length()>Number.EPSILON){a.normalize();const e=Math.acos(Vn(r[t-1].dot(r[t]),-1,1));s[t].applyMatrix4(o.makeRotationAxis(a,e))}i[t].crossVectors(r[t],s[t])}if(!0===t){let t=Math.acos(Vn(s[0].dot(s[e]),-1,1));t/=e,r[0].dot(a.crossVectors(s[0],s[e]))>0&&(t=-t);for(let n=1;n<=e;n++)s[n].applyMatrix4(o.makeRotationAxis(r[n],t*n)),i[n].crossVectors(r[n],s[n])}return{tangents:r,normals:s,binormals:i}}clone(){return(new this.constructor).copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class Xu extends ju{constructor(e=0,t=0,n=1,r=1,s=0,i=2*Math.PI,a=!1,o=0){super(),this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=r,this.aStartAngle=s,this.aEndAngle=i,this.aClockwise=a,this.aRotation=o}getPoint(e,t){const n=t||new Kn,r=2*Math.PI;let s=this.aEndAngle-this.aStartAngle;const i=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=r;for(;s>r;)s-=r;s<Number.EPSILON&&(s=i?0:r),!0!==this.aClockwise||i||(s===r?s=-r:s-=r);const a=this.aStartAngle+e*s;let o=this.aX+this.xRadius*Math.cos(a),l=this.aY+this.yRadius*Math.sin(a);if(0!==this.aRotation){const e=Math.cos(this.aRotation),t=Math.sin(this.aRotation),n=o-this.aX,r=l-this.aY;o=n*e-r*t+this.aX,l=n*t+r*e+this.aY}return n.set(o,l)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}Xu.prototype.isEllipseCurve=!0;class qu extends Xu{constructor(e,t,n,r,s,i){super(e,t,n,n,r,s,i),this.type="ArcCurve"}}function Ku(){let e=0,t=0,n=0,r=0;function s(s,i,a,o){e=s,t=a,n=-3*s+3*i-2*a-o,r=2*s-2*i+a+o}return{initCatmullRom:function(e,t,n,r,i){s(t,n,i*(n-e),i*(r-t))},initNonuniformCatmullRom:function(e,t,n,r,i,a,o){let l=(t-e)/i-(n-e)/(i+a)+(n-t)/a,u=(n-t)/a-(r-t)/(a+o)+(r-n)/o;l*=a,u*=a,s(t,n,l,u)},calc:function(s){const i=s*s;return e+t*s+n*i+r*(i*s)}}}qu.prototype.isArcCurve=!0;const Yu=new or,Ju=new Ku,Zu=new Ku,Qu=new Ku;class ec extends ju{constructor(e=[],t=!1,n="centripetal",r=.5){super(),this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=r}getPoint(e,t=new or){const n=t,r=this.points,s=r.length,i=(s-(this.closed?0:1))*e;let a,o,l=Math.floor(i),u=i-l;this.closed?l+=l>0?0:(Math.floor(Math.abs(l)/s)+1)*s:0===u&&l===s-1&&(l=s-2,u=1),this.closed||l>0?a=r[(l-1)%s]:(Yu.subVectors(r[0],r[1]).add(r[0]),a=Yu);const c=r[l%s],h=r[(l+1)%s];if(this.closed||l+2<s?o=r[(l+2)%s]:(Yu.subVectors(r[s-1],r[s-2]).add(r[s-1]),o=Yu),"centripetal"===this.curveType||"chordal"===this.curveType){const e="chordal"===this.curveType?.5:.25;let t=Math.pow(a.distanceToSquared(c),e),n=Math.pow(c.distanceToSquared(h),e),r=Math.pow(h.distanceToSquared(o),e);n<1e-4&&(n=1),t<1e-4&&(t=n),r<1e-4&&(r=n),Ju.initNonuniformCatmullRom(a.x,c.x,h.x,o.x,t,n,r),Zu.initNonuniformCatmullRom(a.y,c.y,h.y,o.y,t,n,r),Qu.initNonuniformCatmullRom(a.z,c.z,h.z,o.z,t,n,r)}else"catmullrom"===this.curveType&&(Ju.initCatmullRom(a.x,c.x,h.x,o.x,this.tension),Zu.initCatmullRom(a.y,c.y,h.y,o.y,this.tension),Qu.initCatmullRom(a.z,c.z,h.z,o.z,this.tension));return n.set(Ju.calc(u),Zu.calc(u),Qu.calc(u)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const n=e.points[t];this.points.push(n.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const n=this.points[t];e.points.push(n.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const n=e.points[t];this.points.push((new or).fromArray(n))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function tc(e,t,n,r,s){const i=.5*(r-t),a=.5*(s-n),o=e*e;return(2*n-2*r+i+a)*(e*o)+(-3*n+3*r-2*i-a)*o+i*e+n}function nc(e,t,n,r){return function(e,t){const n=1-e;return n*n*t}(e,t)+function(e,t){return 2*(1-e)*e*t}(e,n)+function(e,t){return e*e*t}(e,r)}function rc(e,t,n,r,s){return function(e,t){const n=1-e;return n*n*n*t}(e,t)+function(e,t){const n=1-e;return 3*n*n*e*t}(e,n)+function(e,t){return 3*(1-e)*e*e*t}(e,r)+function(e,t){return e*e*e*t}(e,s)}ec.prototype.isCatmullRomCurve3=!0;class sc extends ju{constructor(e=new Kn,t=new Kn,n=new Kn,r=new Kn){super(),this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=r}getPoint(e,t=new Kn){const n=t,r=this.v0,s=this.v1,i=this.v2,a=this.v3;return n.set(rc(e,r.x,s.x,i.x,a.x),rc(e,r.y,s.y,i.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}sc.prototype.isCubicBezierCurve=!0;class ic extends ju{constructor(e=new or,t=new or,n=new or,r=new or){super(),this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=r}getPoint(e,t=new or){const n=t,r=this.v0,s=this.v1,i=this.v2,a=this.v3;return n.set(rc(e,r.x,s.x,i.x,a.x),rc(e,r.y,s.y,i.y,a.y),rc(e,r.z,s.z,i.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}ic.prototype.isCubicBezierCurve3=!0;class ac extends ju{constructor(e=new Kn,t=new Kn){super(),this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new Kn){const n=t;return 1===e?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){const n=t||new Kn;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}ac.prototype.isLineCurve=!0;class oc extends ju{constructor(e=new or,t=new or){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=e,this.v2=t}getPoint(e,t=new or){const n=t;return 1===e?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class lc extends ju{constructor(e=new Kn,t=new Kn,n=new Kn){super(),this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new Kn){const n=t,r=this.v0,s=this.v1,i=this.v2;return n.set(nc(e,r.x,s.x,i.x),nc(e,r.y,s.y,i.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}lc.prototype.isQuadraticBezierCurve=!0;class uc extends ju{constructor(e=new or,t=new or,n=new or){super(),this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new or){const n=t,r=this.v0,s=this.v1,i=this.v2;return n.set(nc(e,r.x,s.x,i.x),nc(e,r.y,s.y,i.y),nc(e,r.z,s.z,i.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}uc.prototype.isQuadraticBezierCurve3=!0;class cc extends ju{constructor(e=[]){super(),this.type="SplineCurve",this.points=e}getPoint(e,t=new Kn){const n=t,r=this.points,s=(r.length-1)*e,i=Math.floor(s),a=s-i,o=r[0===i?i:i-1],l=r[i],u=r[i>r.length-2?r.length-1:i+1],c=r[i>r.length-3?r.length-1:i+2];return n.set(tc(a,o.x,l.x,u.x,c.x),tc(a,o.y,l.y,u.y,c.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const n=e.points[t];this.points.push(n.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const n=this.points[t];e.points.push(n.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const n=e.points[t];this.points.push((new Kn).fromArray(n))}return this}}cc.prototype.isSplineCurve=!0;var hc=Object.freeze({__proto__:null,ArcCurve:qu,CatmullRomCurve3:ec,CubicBezierCurve:sc,CubicBezierCurve3:ic,EllipseCurve:Xu,LineCurve:ac,LineCurve3:oc,QuadraticBezierCurve:lc,QuadraticBezierCurve3:uc,SplineCurve:cc});function dc(e,t,n,r,s){let i,a;if(s===function(e,t,n,r){let s=0;for(let i=t,a=n-r;i<n;i+=r)s+=(e[a]-e[i])*(e[i+1]+e[a+1]),a=i;return s}(e,t,n,r)>0)for(i=t;i<n;i+=r)a=Lc(i,e[i],e[i+1],a);else for(i=n-r;i>=t;i-=r)a=Lc(i,e[i],e[i+1],a);return a&&Cc(a,a.next)&&(Dc(a),a=a.next),a}function pc(e,t){if(!e)return e;t||(t=e);let n,r=e;do{if(n=!1,r.steiner||!Cc(r,r.next)&&0!==Mc(r.prev,r,r.next))r=r.next;else{if(Dc(r),r=t=r.prev,r===r.next)break;n=!0}}while(n||r!==t);return t}function fc(e,t,n,r,s,i,a){if(!e)return;!a&&i&&function(e,t,n,r){let s=e;do{null===s.z&&(s.z=_c(s.x,s.y,t,n,r)),s.prevZ=s.prev,s.nextZ=s.next,s=s.next}while(s!==e);s.prevZ.nextZ=null,s.prevZ=null,function(e){let t,n,r,s,i,a,o,l,u=1;do{for(n=e,e=null,i=null,a=0;n;){for(a++,r=n,o=0,t=0;t<u&&(o++,r=r.nextZ,r);t++);for(l=u;o>0||l>0&&r;)0!==o&&(0===l||!r||n.z<=r.z)?(s=n,n=n.nextZ,o--):(s=r,r=r.nextZ,l--),i?i.nextZ=s:e=s,s.prevZ=i,i=s;n=r}i.nextZ=null,u*=2}while(a>1)}(s)}(e,r,s,i);let o,l,u=e;for(;e.prev!==e.next;)if(o=e.prev,l=e.next,i?gc(e,r,s,i):mc(e))t.push(o.i/n),t.push(e.i/n),t.push(l.i/n),Dc(e),e=l.next,u=l.next;else if((e=l)===u){a?1===a?fc(e=yc(pc(e),t,n),t,n,r,s,i,2):2===a&&xc(e,t,n,r,s,i):fc(pc(e),t,n,r,s,i,1);break}}function mc(e){const t=e.prev,n=e,r=e.next;if(Mc(t,n,r)>=0)return!1;let s=e.next.next;for(;s!==e.prev;){if(Tc(t.x,t.y,n.x,n.y,r.x,r.y,s.x,s.y)&&Mc(s.prev,s,s.next)>=0)return!1;s=s.next}return!0}function gc(e,t,n,r){const s=e.prev,i=e,a=e.next;if(Mc(s,i,a)>=0)return!1;const o=s.x<i.x?s.x<a.x?s.x:a.x:i.x<a.x?i.x:a.x,l=s.y<i.y?s.y<a.y?s.y:a.y:i.y<a.y?i.y:a.y,u=s.x>i.x?s.x>a.x?s.x:a.x:i.x>a.x?i.x:a.x,c=s.y>i.y?s.y>a.y?s.y:a.y:i.y>a.y?i.y:a.y,h=_c(o,l,t,n,r),d=_c(u,c,t,n,r);let p=e.prevZ,f=e.nextZ;for(;p&&p.z>=h&&f&&f.z<=d;){if(p!==e.prev&&p!==e.next&&Tc(s.x,s.y,i.x,i.y,a.x,a.y,p.x,p.y)&&Mc(p.prev,p,p.next)>=0)return!1;if(p=p.prevZ,f!==e.prev&&f!==e.next&&Tc(s.x,s.y,i.x,i.y,a.x,a.y,f.x,f.y)&&Mc(f.prev,f,f.next)>=0)return!1;f=f.nextZ}for(;p&&p.z>=h;){if(p!==e.prev&&p!==e.next&&Tc(s.x,s.y,i.x,i.y,a.x,a.y,p.x,p.y)&&Mc(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;f&&f.z<=d;){if(f!==e.prev&&f!==e.next&&Tc(s.x,s.y,i.x,i.y,a.x,a.y,f.x,f.y)&&Mc(f.prev,f,f.next)>=0)return!1;f=f.nextZ}return!0}function yc(e,t,n){let r=e;do{const s=r.prev,i=r.next.next;!Cc(s,i)&&Ac(s,r,r.next,i)&&kc(s,i)&&kc(i,s)&&(t.push(s.i/n),t.push(r.i/n),t.push(i.i/n),Dc(r),Dc(r.next),r=e=i),r=r.next}while(r!==e);return pc(r)}function xc(e,t,n,r,s,i){let a=e;do{let e=a.next.next;for(;e!==a.prev;){if(a.i!==e.i&&Ec(a,e)){let o=Nc(a,e);return a=pc(a,a.next),o=pc(o,o.next),fc(a,t,n,r,s,i),void fc(o,t,n,r,s,i)}e=e.next}a=a.next}while(a!==e)}function vc(e,t){return e.x-t.x}function bc(e,t){if(t=function(e,t){let n=t;const r=e.x,s=e.y;let i,a=-1/0;do{if(s<=n.y&&s>=n.next.y&&n.next.y!==n.y){const e=n.x+(s-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(e<=r&&e>a){if(a=e,e===r){if(s===n.y)return n;if(s===n.next.y)return n.next}i=n.x<n.next.x?n:n.next}}n=n.next}while(n!==t);if(!i)return null;if(r===a)return i;const o=i,l=i.x,u=i.y;let c,h=1/0;n=i;do{r>=n.x&&n.x>=l&&r!==n.x&&Tc(s<u?r:a,s,l,u,s<u?a:r,s,n.x,n.y)&&(c=Math.abs(s-n.y)/(r-n.x),kc(n,e)&&(c<h||c===h&&(n.x>i.x||n.x===i.x&&wc(i,n)))&&(i=n,h=c)),n=n.next}while(n!==o);return i}(e,t),t){const n=Nc(t,e);pc(t,t.next),pc(n,n.next)}}function wc(e,t){return Mc(e.prev,e,t.prev)<0&&Mc(t.next,e,e.next)<0}function _c(e,t,n,r,s){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-n)*s)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-r)*s)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function Sc(e){let t=e,n=e;do{(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next}while(t!==e);return n}function Tc(e,t,n,r,s,i,a,o){return(s-a)*(t-o)-(e-a)*(i-o)>=0&&(e-a)*(r-o)-(n-a)*(t-o)>=0&&(n-a)*(i-o)-(s-a)*(r-o)>=0}function Ec(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){let n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&Ac(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}(e,t)&&(kc(e,t)&&kc(t,e)&&function(e,t){let n=e,r=!1;const s=(e.x+t.x)/2,i=(e.y+t.y)/2;do{n.y>i!=n.next.y>i&&n.next.y!==n.y&&s<(n.next.x-n.x)*(i-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next}while(n!==e);return r}(e,t)&&(Mc(e.prev,e,t.prev)||Mc(e,t.prev,t))||Cc(e,t)&&Mc(e.prev,e,e.next)>0&&Mc(t.prev,t,t.next)>0)}function Mc(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function Cc(e,t){return e.x===t.x&&e.y===t.y}function Ac(e,t,n,r){const s=Rc(Mc(e,t,n)),i=Rc(Mc(e,t,r)),a=Rc(Mc(n,r,e)),o=Rc(Mc(n,r,t));return s!==i&&a!==o||!(0!==s||!Ic(e,n,t))||!(0!==i||!Ic(e,r,t))||!(0!==a||!Ic(n,e,r))||!(0!==o||!Ic(n,t,r))}function Ic(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function Rc(e){return e>0?1:e<0?-1:0}function kc(e,t){return Mc(e.prev,e,e.next)<0?Mc(e,t,e.next)>=0&&Mc(e,e.prev,t)>=0:Mc(e,t,e.prev)<0||Mc(e,e.next,t)<0}function Nc(e,t){const n=new Oc(e.i,e.x,e.y),r=new Oc(t.i,t.x,t.y),s=e.next,i=t.prev;return e.next=t,t.prev=e,n.next=s,s.prev=n,r.next=n,n.prev=r,i.next=r,r.prev=i,r}function Lc(e,t,n,r){const s=new Oc(e,t,n);return r?(s.next=r.next,s.prev=r,r.next.prev=s,r.next=s):(s.prev=s,s.next=s),s}function Dc(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function Oc(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}class Pc{static area(e){const t=e.length;let n=0;for(let r=t-1,s=0;s<t;r=s++)n+=e[r].x*e[s].y-e[s].x*e[r].y;return.5*n}static isClockWise(e){return Pc.area(e)<0}static triangulateShape(e,t){const n=[],r=[],s=[];Fc(e),$c(n,e);let i=e.length;t.forEach(Fc);for(let e=0;e<t.length;e++)r.push(i),i+=t[e].length,$c(n,t[e]);const a=function(e,t,n=2){const r=t&&t.length,s=r?t[0]*n:e.length;let i=dc(e,0,s,n,!0);const a=[];if(!i||i.next===i.prev)return a;let o,l,u,c,h,d,p;if(r&&(i=function(e,t,n,r){const s=[];let i,a,o,l,u;for(i=0,a=t.length;i<a;i++)o=t[i]*r,l=i<a-1?t[i+1]*r:e.length,u=dc(e,o,l,r,!1),u===u.next&&(u.steiner=!0),s.push(Sc(u));for(s.sort(vc),i=0;i<s.length;i++)bc(s[i],n),n=pc(n,n.next);return n}(e,t,i,n)),e.length>80*n){o=u=e[0],l=c=e[1];for(let t=n;t<s;t+=n)h=e[t],d=e[t+1],h<o&&(o=h),d<l&&(l=d),h>u&&(u=h),d>c&&(c=d);p=Math.max(u-o,c-l),p=0!==p?1/p:0}return fc(i,a,n,o,l,p),a}(n,r);for(let e=0;e<a.length;e+=3)s.push(a.slice(e,e+3));return s}}function Fc(e){const t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function $c(e,t){for(let n=0;n<t.length;n++)e.push(t[n].x),e.push(t[n].y)}class Bc extends ei{constructor(e,t){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,r=[],s=[];for(let t=0,n=e.length;t<n;t++)i(e[t]);function i(e){const i=[],a=void 0!==t.curveSegments?t.curveSegments:12,o=void 0!==t.steps?t.steps:1;let l=void 0!==t.depth?t.depth:100,u=void 0===t.bevelEnabled||t.bevelEnabled,c=void 0!==t.bevelThickness?t.bevelThickness:6,h=void 0!==t.bevelSize?t.bevelSize:c-2,d=void 0!==t.bevelOffset?t.bevelOffset:0,p=void 0!==t.bevelSegments?t.bevelSegments:3;const f=t.extrudePath,m=void 0!==t.UVGenerator?t.UVGenerator:Uc;void 0!==t.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),l=t.amount);let g,y,x,v,b,w=!1;f&&(g=f.getSpacedPoints(o),w=!0,u=!1,y=f.computeFrenetFrames(o,!1),x=new or,v=new or,b=new or),u||(p=0,c=0,h=0,d=0);const _=e.extractPoints(a);let S=_.shape;const T=_.holes;if(!Pc.isClockWise(S)){S=S.reverse();for(let e=0,t=T.length;e<t;e++){const t=T[e];Pc.isClockWise(t)&&(T[e]=t.reverse())}}const E=Pc.triangulateShape(S,T),M=S;for(let e=0,t=T.length;e<t;e++){const t=T[e];S=S.concat(t)}function C(e,t,n){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(n).add(e)}const A=S.length,I=E.length;function R(e,t,n){let r,s,i;const a=e.x-t.x,o=e.y-t.y,l=n.x-e.x,u=n.y-e.y,c=a*a+o*o,h=a*u-o*l;if(Math.abs(h)>Number.EPSILON){const h=Math.sqrt(c),d=Math.sqrt(l*l+u*u),p=t.x-o/h,f=t.y+a/h,m=((n.x-u/d-p)*u-(n.y+l/d-f)*l)/(a*u-o*l);r=p+a*m-e.x,s=f+o*m-e.y;const g=r*r+s*s;if(g<=2)return new Kn(r,s);i=Math.sqrt(g/2)}else{let e=!1;a>Number.EPSILON?l>Number.EPSILON&&(e=!0):a<-Number.EPSILON?l<-Number.EPSILON&&(e=!0):Math.sign(o)===Math.sign(u)&&(e=!0),e?(r=-o,s=a,i=Math.sqrt(c)):(r=a,s=o,i=Math.sqrt(c/2))}return new Kn(r/i,s/i)}const k=[];for(let e=0,t=M.length,n=t-1,r=e+1;e<t;e++,n++,r++)n===t&&(n=0),r===t&&(r=0),k[e]=R(M[e],M[n],M[r]);const N=[];let L,D=k.concat();for(let e=0,t=T.length;e<t;e++){const t=T[e];L=[];for(let e=0,n=t.length,r=n-1,s=e+1;e<n;e++,r++,s++)r===n&&(r=0),s===n&&(s=0),L[e]=R(t[e],t[r],t[s]);N.push(L),D=D.concat(L)}for(let e=0;e<p;e++){const t=e/p,n=c*Math.cos(t*Math.PI/2),r=h*Math.sin(t*Math.PI/2)+d;for(let e=0,t=M.length;e<t;e++){const t=C(M[e],k[e],r);F(t.x,t.y,-n)}for(let e=0,t=T.length;e<t;e++){const t=T[e];L=N[e];for(let e=0,s=t.length;e<s;e++){const s=C(t[e],L[e],r);F(s.x,s.y,-n)}}}const O=h+d;for(let e=0;e<A;e++){const t=u?C(S[e],D[e],O):S[e];w?(v.copy(y.normals[0]).multiplyScalar(t.x),x.copy(y.binormals[0]).multiplyScalar(t.y),b.copy(g[0]).add(v).add(x),F(b.x,b.y,b.z)):F(t.x,t.y,0)}for(let e=1;e<=o;e++)for(let t=0;t<A;t++){const n=u?C(S[t],D[t],O):S[t];w?(v.copy(y.normals[e]).multiplyScalar(n.x),x.copy(y.binormals[e]).multiplyScalar(n.y),b.copy(g[e]).add(v).add(x),F(b.x,b.y,b.z)):F(n.x,n.y,l/o*e)}for(let e=p-1;e>=0;e--){const t=e/p,n=c*Math.cos(t*Math.PI/2),r=h*Math.sin(t*Math.PI/2)+d;for(let e=0,t=M.length;e<t;e++){const t=C(M[e],k[e],r);F(t.x,t.y,l+n)}for(let e=0,t=T.length;e<t;e++){const t=T[e];L=N[e];for(let e=0,s=t.length;e<s;e++){const s=C(t[e],L[e],r);w?F(s.x,s.y+g[o-1].y,g[o-1].x+n):F(s.x,s.y,l+n)}}}function P(e,t){let n=e.length;for(;--n>=0;){const r=n;let s=n-1;s<0&&(s=e.length-1);for(let e=0,n=o+2*p;e<n;e++){const n=A*e,i=A*(e+1);B(t+r+n,t+s+n,t+s+i,t+r+i)}}}function F(e,t,n){i.push(e),i.push(t),i.push(n)}function $(e,t,s){U(e),U(t),U(s);const i=r.length/3,a=m.generateTopUV(n,r,i-3,i-2,i-1);z(a[0]),z(a[1]),z(a[2])}function B(e,t,s,i){U(e),U(t),U(i),U(t),U(s),U(i);const a=r.length/3,o=m.generateSideWallUV(n,r,a-6,a-3,a-2,a-1);z(o[0]),z(o[1]),z(o[3]),z(o[1]),z(o[2]),z(o[3])}function U(e){r.push(i[3*e+0]),r.push(i[3*e+1]),r.push(i[3*e+2])}function z(e){s.push(e.x),s.push(e.y)}!function(){const e=r.length/3;if(u){let e=0,t=A*e;for(let e=0;e<I;e++){const n=E[e];$(n[2]+t,n[1]+t,n[0]+t)}e=o+2*p,t=A*e;for(let e=0;e<I;e++){const n=E[e];$(n[0]+t,n[1]+t,n[2]+t)}}else{for(let e=0;e<I;e++){const t=E[e];$(t[2],t[1],t[0])}for(let e=0;e<I;e++){const t=E[e];$(t[0]+A*o,t[1]+A*o,t[2]+A*o)}}n.addGroup(e,r.length/3-e,0)}(),function(){const e=r.length/3;let t=0;P(M,t),t+=M.length;for(let e=0,n=T.length;e<n;e++){const n=T[e];P(n,t),t+=n.length}n.addGroup(e,r.length/3-e,1)}()}this.setAttribute("position",new Vs(r,3)),this.setAttribute("uv",new Vs(s,2)),this.computeVertexNormals()}toJSON(){const e=super.toJSON();return function(e,t,n){if(n.shapes=[],Array.isArray(e))for(let t=0,r=e.length;t<r;t++){const r=e[t];n.shapes.push(r.uuid)}else n.shapes.push(e.uuid);return void 0!==t.extrudePath&&(n.options.extrudePath=t.extrudePath.toJSON()),n}(this.parameters.shapes,this.parameters.options,e)}static fromJSON(e,t){const n=[];for(let r=0,s=e.shapes.length;r<s;r++){const s=t[e.shapes[r]];n.push(s)}const r=e.options.extrudePath;return void 0!==r&&(e.options.extrudePath=(new hc[r.type]).fromJSON(r)),new Bc(n,e.options)}}const Uc={generateTopUV:function(e,t,n,r,s){const i=t[3*n],a=t[3*n+1],o=t[3*r],l=t[3*r+1],u=t[3*s],c=t[3*s+1];return[new Kn(i,a),new Kn(o,l),new Kn(u,c)]},generateSideWallUV:function(e,t,n,r,s,i){const a=t[3*n],o=t[3*n+1],l=t[3*n+2],u=t[3*r],c=t[3*r+1],h=t[3*r+2],d=t[3*s],p=t[3*s+1],f=t[3*s+2],m=t[3*i],g=t[3*i+1],y=t[3*i+2];return Math.abs(o-c)<Math.abs(a-u)?[new Kn(a,1-l),new Kn(u,1-h),new Kn(d,1-f),new Kn(m,1-y)]:[new Kn(o,1-l),new Kn(c,1-h),new Kn(p,1-f),new Kn(g,1-y)]}};class zc extends Bu{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2;super([-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new zc(e.radius,e.detail)}}class Vc extends ei{constructor(e,t=12,n=0,r=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:r},t=Math.floor(t),r=Vn(r,0,2*Math.PI);const s=[],i=[],a=[],o=1/t,l=new or,u=new Kn;for(let s=0;s<=t;s++){const c=n+s*o*r,h=Math.sin(c),d=Math.cos(c);for(let n=0;n<=e.length-1;n++)l.x=e[n].x*h,l.y=e[n].y,l.z=e[n].x*d,i.push(l.x,l.y,l.z),u.x=s/t,u.y=n/(e.length-1),a.push(u.x,u.y)}for(let n=0;n<t;n++)for(let t=0;t<e.length-1;t++){const r=t+n*e.length,i=r,a=r+e.length,o=r+e.length+1,l=r+1;s.push(i,a,l),s.push(a,o,l)}if(this.setIndex(s),this.setAttribute("position",new Vs(i,3)),this.setAttribute("uv",new Vs(a,2)),this.computeVertexNormals(),r===2*Math.PI){const n=this.attributes.normal.array,r=new or,s=new or,i=new or,a=t*e.length*3;for(let t=0,o=0;t<e.length;t++,o+=3)r.x=n[o+0],r.y=n[o+1],r.z=n[o+2],s.x=n[a+o+0],s.y=n[a+o+1],s.z=n[a+o+2],i.addVectors(r,s).normalize(),n[o+0]=n[a+o+0]=i.x,n[o+1]=n[a+o+1]=i.y,n[o+2]=n[a+o+2]=i.z}}static fromJSON(e){return new Vc(e.points,e.segments,e.phiStart,e.phiLength)}}class Gc extends Bu{constructor(e=1,t=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Gc(e.radius,e.detail)}}class Wc extends ei{constructor(e,t,n){super(),this.type="ParametricGeometry",this.parameters={func:e,slices:t,stacks:n};const r=[],s=[],i=[],a=[],o=1e-5,l=new or,u=new or,c=new or,h=new or,d=new or;e.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");const p=t+1;for(let r=0;r<=n;r++){const p=r/n;for(let n=0;n<=t;n++){const r=n/t;e(r,p,u),s.push(u.x,u.y,u.z),r-o>=0?(e(r-o,p,c),h.subVectors(u,c)):(e(r+o,p,c),h.subVectors(c,u)),p-o>=0?(e(r,p-o,c),d.subVectors(u,c)):(e(r,p+o,c),d.subVectors(c,u)),l.crossVectors(h,d).normalize(),i.push(l.x,l.y,l.z),a.push(r,p)}}for(let e=0;e<n;e++)for(let n=0;n<t;n++){const t=e*p+n,s=e*p+n+1,i=(e+1)*p+n+1,a=(e+1)*p+n;r.push(t,s,a),r.push(s,i,a)}this.setIndex(r),this.setAttribute("position",new Vs(s,3)),this.setAttribute("normal",new Vs(i,3)),this.setAttribute("uv",new Vs(a,2))}}class Hc extends ei{constructor(e=.5,t=1,n=8,r=1,s=0,i=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:r,thetaStart:s,thetaLength:i},n=Math.max(3,n);const a=[],o=[],l=[],u=[];let c=e;const h=(t-e)/(r=Math.max(1,r)),d=new or,p=new Kn;for(let e=0;e<=r;e++){for(let e=0;e<=n;e++){const r=s+e/n*i;d.x=c*Math.cos(r),d.y=c*Math.sin(r),o.push(d.x,d.y,d.z),l.push(0,0,1),p.x=(d.x/t+1)/2,p.y=(d.y/t+1)/2,u.push(p.x,p.y)}c+=h}for(let e=0;e<r;e++){const t=e*(n+1);for(let e=0;e<n;e++){const r=e+t,s=r,i=r+n+1,o=r+n+2,l=r+1;a.push(s,i,l),a.push(i,o,l)}}this.setIndex(a),this.setAttribute("position",new Vs(o,3)),this.setAttribute("normal",new Vs(l,3)),this.setAttribute("uv",new Vs(u,2))}static fromJSON(e){return new Hc(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class jc extends ei{constructor(e,t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],r=[],s=[],i=[];let a=0,o=0;if(!1===Array.isArray(e))l(e);else for(let t=0;t<e.length;t++)l(e[t]),this.addGroup(a,o,t),a+=o,o=0;function l(e){const a=r.length/3,l=e.extractPoints(t);let u=l.shape;const c=l.holes;!1===Pc.isClockWise(u)&&(u=u.reverse());for(let e=0,t=c.length;e<t;e++){const t=c[e];!0===Pc.isClockWise(t)&&(c[e]=t.reverse())}const h=Pc.triangulateShape(u,c);for(let e=0,t=c.length;e<t;e++){const t=c[e];u=u.concat(t)}for(let e=0,t=u.length;e<t;e++){const t=u[e];r.push(t.x,t.y,0),s.push(0,0,1),i.push(t.x,t.y)}for(let e=0,t=h.length;e<t;e++){const t=h[e],r=t[0]+a,s=t[1]+a,i=t[2]+a;n.push(r,s,i),o+=3}}this.setIndex(n),this.setAttribute("position",new Vs(r,3)),this.setAttribute("normal",new Vs(s,3)),this.setAttribute("uv",new Vs(i,2))}toJSON(){const e=super.toJSON();return function(e,t){if(t.shapes=[],Array.isArray(e))for(let n=0,r=e.length;n<r;n++){const r=e[n];t.shapes.push(r.uuid)}else t.shapes.push(e.uuid);return t}(this.parameters.shapes,e)}static fromJSON(e,t){const n=[];for(let r=0,s=e.shapes.length;r<s;r++){const s=t[e.shapes[r]];n.push(s)}return new jc(n,e.curveSegments)}}class Xc extends ei{constructor(e=1,t=32,n=16,r=0,s=2*Math.PI,i=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:r,phiLength:s,thetaStart:i,thetaLength:a},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const o=Math.min(i+a,Math.PI);let l=0;const u=[],c=new or,h=new or,d=[],p=[],f=[],m=[];for(let d=0;d<=n;d++){const g=[],y=d/n;let x=0;0==d&&0==i?x=.5/t:d==n&&o==Math.PI&&(x=-.5/t);for(let n=0;n<=t;n++){const o=n/t;c.x=-e*Math.cos(r+o*s)*Math.sin(i+y*a),c.y=e*Math.cos(i+y*a),c.z=e*Math.sin(r+o*s)*Math.sin(i+y*a),p.push(c.x,c.y,c.z),h.copy(c).normalize(),f.push(h.x,h.y,h.z),m.push(o+x,1-y),g.push(l++)}u.push(g)}for(let e=0;e<n;e++)for(let r=0;r<t;r++){const t=u[e][r+1],s=u[e][r],a=u[e+1][r],l=u[e+1][r+1];(0!==e||i>0)&&d.push(t,s,l),(e!==n-1||o<Math.PI)&&d.push(s,a,l)}this.setIndex(d),this.setAttribute("position",new Vs(p,3)),this.setAttribute("normal",new Vs(f,3)),this.setAttribute("uv",new Vs(m,2))}static fromJSON(e){return new Xc(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class qc extends Bu{constructor(e=1,t=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new qc(e.radius,e.detail)}}class Kc extends Bc{constructor(e,t={}){const n=t.font;if(!n||!n.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new ei;const r=n.generateShapes(e,t.size);t.depth=void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),super(r,t),this.type="TextGeometry"}}class Yc extends ei{constructor(e=1,t=.4,n=8,r=6,s=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:r,arc:s},n=Math.floor(n),r=Math.floor(r);const i=[],a=[],o=[],l=[],u=new or,c=new or,h=new or;for(let i=0;i<=n;i++)for(let d=0;d<=r;d++){const p=d/r*s,f=i/n*Math.PI*2;c.x=(e+t*Math.cos(f))*Math.cos(p),c.y=(e+t*Math.cos(f))*Math.sin(p),c.z=t*Math.sin(f),a.push(c.x,c.y,c.z),u.x=e*Math.cos(p),u.y=e*Math.sin(p),h.subVectors(c,u).normalize(),o.push(h.x,h.y,h.z),l.push(d/r),l.push(i/n)}for(let e=1;e<=n;e++)for(let t=1;t<=r;t++){const n=(r+1)*e+t-1,s=(r+1)*(e-1)+t-1,a=(r+1)*(e-1)+t,o=(r+1)*e+t;i.push(n,s,o),i.push(s,a,o)}this.setIndex(i),this.setAttribute("position",new Vs(a,3)),this.setAttribute("normal",new Vs(o,3)),this.setAttribute("uv",new Vs(l,2))}static fromJSON(e){return new Yc(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Jc extends ei{constructor(e=1,t=.4,n=64,r=8,s=2,i=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:r,p:s,q:i},n=Math.floor(n),r=Math.floor(r);const a=[],o=[],l=[],u=[],c=new or,h=new or,d=new or,p=new or,f=new or,m=new or,g=new or;for(let a=0;a<=n;++a){const x=a/n*s*Math.PI*2;y(x,s,i,e,d),y(x+.01,s,i,e,p),m.subVectors(p,d),g.addVectors(p,d),f.crossVectors(m,g),g.crossVectors(f,m),f.normalize(),g.normalize();for(let e=0;e<=r;++e){const s=e/r*Math.PI*2,i=-t*Math.cos(s),p=t*Math.sin(s);c.x=d.x+(i*g.x+p*f.x),c.y=d.y+(i*g.y+p*f.y),c.z=d.z+(i*g.z+p*f.z),o.push(c.x,c.y,c.z),h.subVectors(c,d).normalize(),l.push(h.x,h.y,h.z),u.push(a/n),u.push(e/r)}}for(let e=1;e<=n;e++)for(let t=1;t<=r;t++){const n=(r+1)*(e-1)+(t-1),s=(r+1)*e+(t-1),i=(r+1)*e+t,o=(r+1)*(e-1)+t;a.push(n,s,o),a.push(s,i,o)}function y(e,t,n,r,s){const i=Math.cos(e),a=Math.sin(e),o=n/t*e,l=Math.cos(o);s.x=r*(2+l)*.5*i,s.y=r*(2+l)*a*.5,s.z=r*Math.sin(o)*.5}this.setIndex(a),this.setAttribute("position",new Vs(o,3)),this.setAttribute("normal",new Vs(l,3)),this.setAttribute("uv",new Vs(u,2))}static fromJSON(e){return new Jc(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class Zc extends ei{constructor(e,t=64,n=1,r=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:r,closed:s};const i=e.computeFrenetFrames(t,s);this.tangents=i.tangents,this.normals=i.normals,this.binormals=i.binormals;const a=new or,o=new or,l=new Kn;let u=new or;const c=[],h=[],d=[],p=[];function f(s){u=e.getPointAt(s/t,u);const l=i.normals[s],d=i.binormals[s];for(let e=0;e<=r;e++){const t=e/r*Math.PI*2,s=Math.sin(t),i=-Math.cos(t);o.x=i*l.x+s*d.x,o.y=i*l.y+s*d.y,o.z=i*l.z+s*d.z,o.normalize(),h.push(o.x,o.y,o.z),a.x=u.x+n*o.x,a.y=u.y+n*o.y,a.z=u.z+n*o.z,c.push(a.x,a.y,a.z)}}!function(){for(let e=0;e<t;e++)f(e);f(!1===s?t:0),function(){for(let e=0;e<=t;e++)for(let n=0;n<=r;n++)l.x=e/t,l.y=n/r,d.push(l.x,l.y)}(),function(){for(let e=1;e<=t;e++)for(let t=1;t<=r;t++){const n=(r+1)*(e-1)+(t-1),s=(r+1)*e+(t-1),i=(r+1)*e+t,a=(r+1)*(e-1)+t;p.push(n,s,a),p.push(s,i,a)}}()}(),this.setIndex(p),this.setAttribute("position",new Vs(c,3)),this.setAttribute("normal",new Vs(h,3)),this.setAttribute("uv",new Vs(d,2))}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Zc((new hc[e.path.type]).fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class Qc extends ei{constructor(e){if(super(),this.type="WireframeGeometry",!0===e.isGeometry)return void console.error("THREE.WireframeGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");const t=[],n=new Set,r=new or,s=new or;if(null!==e.index){const i=e.attributes.position,a=e.index;let o=e.groups;0===o.length&&(o=[{start:0,count:a.count,materialIndex:0}]);for(let e=0,l=o.length;e<l;++e){const l=o[e],u=l.start;for(let e=u,o=u+l.count;e<o;e+=3)for(let o=0;o<3;o++){const l=a.getX(e+o),u=a.getX(e+(o+1)%3);r.fromBufferAttribute(i,l),s.fromBufferAttribute(i,u),!0===eh(r,s,n)&&(t.push(r.x,r.y,r.z),t.push(s.x,s.y,s.z))}}}else{const i=e.attributes.position;for(let e=0,a=i.count/3;e<a;e++)for(let a=0;a<3;a++){const o=3*e+a,l=3*e+(a+1)%3;r.fromBufferAttribute(i,o),s.fromBufferAttribute(i,l),!0===eh(r,s,n)&&(t.push(r.x,r.y,r.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new Vs(t,3))}}function eh(e,t,n){const r=`${e.x},${e.y},${e.z}-${t.x},${t.y},${t.z}`,s=`${t.x},${t.y},${t.z}-${e.x},${e.y},${e.z}`;return!0!==n.has(r)&&!0!==n.has(s)&&(n.add(r,s),!0)}var th=Object.freeze({__proto__:null,BoxGeometry:bi,BoxBufferGeometry:bi,CircleGeometry:Pu,CircleBufferGeometry:Pu,ConeGeometry:$u,ConeBufferGeometry:$u,CylinderGeometry:Fu,CylinderBufferGeometry:Fu,DodecahedronGeometry:Uu,DodecahedronBufferGeometry:Uu,EdgesGeometry:Hu,ExtrudeGeometry:Bc,ExtrudeBufferGeometry:Bc,IcosahedronGeometry:zc,IcosahedronBufferGeometry:zc,LatheGeometry:Vc,LatheBufferGeometry:Vc,OctahedronGeometry:Gc,OctahedronBufferGeometry:Gc,ParametricGeometry:Wc,ParametricBufferGeometry:Wc,PlaneGeometry:Ui,PlaneBufferGeometry:Ui,PolyhedronGeometry:Bu,PolyhedronBufferGeometry:Bu,RingGeometry:Hc,RingBufferGeometry:Hc,ShapeGeometry:jc,ShapeBufferGeometry:jc,SphereGeometry:Xc,SphereBufferGeometry:Xc,TetrahedronGeometry:qc,TetrahedronBufferGeometry:qc,TextGeometry:Kc,TextBufferGeometry:Kc,TorusGeometry:Yc,TorusBufferGeometry:Yc,TorusKnotGeometry:Jc,TorusKnotBufferGeometry:Jc,TubeGeometry:Zc,TubeBufferGeometry:Zc,WireframeGeometry:Qc});class nh extends _s{constructor(e){super(),this.type="ShadowMaterial",this.color=new Is(0),this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this}}nh.prototype.isShadowMaterial=!0;class rh extends _s{constructor(e){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Is(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Is(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=on,this.normalScale=new Kn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}rh.prototype.isMeshStandardMaterial=!0;class sh extends rh{constructor(e){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Kn(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Vn(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),this.sheenTint=new Is(0),this.transmission=0,this.transmissionMap=null,this.thickness=.01,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationTint=new Is(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularTint=new Is(1,1,1),this.specularTintMap=null,this._clearcoat=0,this._transmission=0,this.setValues(e)}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.sheenTint.copy(e.sheenTint),this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationTint.copy(e.attenuationTint),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularTint.copy(e.specularTint),this.specularTintMap=e.specularTintMap,this}}sh.prototype.isMeshPhysicalMaterial=!0;class ih extends _s{constructor(e){super(),this.type="MeshPhongMaterial",this.color=new Is(16777215),this.specular=new Is(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Is(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=on,this.normalScale=new Kn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=K,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}ih.prototype.isMeshPhongMaterial=!0;class ah extends _s{constructor(e){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Is(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Is(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=on,this.normalScale=new Kn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}ah.prototype.isMeshToonMaterial=!0;class oh extends _s{constructor(e){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=on,this.normalScale=new Kn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}oh.prototype.isMeshNormalMaterial=!0;class lh extends _s{constructor(e){super(),this.type="MeshLambertMaterial",this.color=new Is(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Is(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=K,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}lh.prototype.isMeshLambertMaterial=!0;class uh extends _s{constructor(e){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Is(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=on,this.normalScale=new Kn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this}}uh.prototype.isMeshMatcapMaterial=!0;class ch extends fu{constructor(e){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}ch.prototype.isLineDashedMaterial=!0;var hh=Object.freeze({__proto__:null,ShadowMaterial:nh,SpriteMaterial:Nl,RawShaderMaterial:Ji,ShaderMaterial:Ti,PointsMaterial:Eu,MeshPhysicalMaterial:sh,MeshStandardMaterial:rh,MeshPhongMaterial:ih,MeshToonMaterial:ah,MeshNormalMaterial:oh,MeshLambertMaterial:lh,MeshDepthMaterial:cl,MeshDistanceMaterial:hl,MeshBasicMaterial:Rs,MeshMatcapMaterial:uh,LineDashedMaterial:ch,LineBasicMaterial:fu,Material:_s});const dh={arraySlice:function(e,t,n){return dh.isTypedArray(e)?new e.constructor(e.subarray(t,void 0!==n?n:e.length)):e.slice(t,n)},convertArray:function(e,t,n){return!e||!n&&e.constructor===t?e:"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e)},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(e){const t=e.length,n=new Array(t);for(let e=0;e!==t;++e)n[e]=e;return n.sort((function(t,n){return e[t]-e[n]})),n},sortedArray:function(e,t,n){const r=e.length,s=new e.constructor(r);for(let i=0,a=0;a!==r;++i){const r=n[i]*t;for(let n=0;n!==t;++n)s[a++]=e[r+n]}return s},flattenJSON:function(e,t,n,r){let s=1,i=e[0];for(;void 0!==i&&void 0===i[r];)i=e[s++];if(void 0===i)return;let a=i[r];if(void 0!==a)if(Array.isArray(a))do{a=i[r],void 0!==a&&(t.push(i.time),n.push.apply(n,a)),i=e[s++]}while(void 0!==i);else if(void 0!==a.toArray)do{a=i[r],void 0!==a&&(t.push(i.time),a.toArray(n,n.length)),i=e[s++]}while(void 0!==i);else do{a=i[r],void 0!==a&&(t.push(i.time),n.push(a)),i=e[s++]}while(void 0!==i)},subclip:function(e,t,n,r,s=30){const i=e.clone();i.name=t;const a=[];for(let e=0;e<i.tracks.length;++e){const t=i.tracks[e],o=t.getValueSize(),l=[],u=[];for(let e=0;e<t.times.length;++e){const i=t.times[e]*s;if(!(i<n||i>=r)){l.push(t.times[e]);for(let n=0;n<o;++n)u.push(t.values[e*o+n])}}0!==l.length&&(t.times=dh.convertArray(l,t.times.constructor),t.values=dh.convertArray(u,t.values.constructor),a.push(t))}i.tracks=a;let o=1/0;for(let e=0;e<i.tracks.length;++e)o>i.tracks[e].times[0]&&(o=i.tracks[e].times[0]);for(let e=0;e<i.tracks.length;++e)i.tracks[e].shift(-1*o);return i.resetDuration(),i},makeClipAdditive:function(e,t=0,n=e,r=30){r<=0&&(r=30);const s=n.tracks.length,i=t/r;for(let t=0;t<s;++t){const r=n.tracks[t],s=r.ValueTypeName;if("bool"===s||"string"===s)continue;const a=e.tracks.find((function(e){return e.name===r.name&&e.ValueTypeName===s}));if(void 0===a)continue;let o=0;const l=r.getValueSize();r.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(o=l/3);let u=0;const c=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=c/3);const h=r.times.length-1;let d;if(i<=r.times[0]){const e=o,t=l-o;d=dh.arraySlice(r.values,e,t)}else if(i>=r.times[h]){const e=h*l+o,t=e+l-o;d=dh.arraySlice(r.values,e,t)}else{const e=r.createInterpolant(),t=o,n=l-o;e.evaluate(i),d=dh.arraySlice(e.resultBuffer,t,n)}"quaternion"===s&&(new ar).fromArray(d).normalize().conjugate().toArray(d);const p=a.times.length;for(let e=0;e<p;++e){const t=e*c+u;if("quaternion"===s)ar.multiplyQuaternionsFlat(a.values,t,d,0,a.values,t);else{const e=c-2*u;for(let n=0;n<e;++n)a.values[t+n]-=d[n]}}}return e.blendMode=jt,e}};class ph{constructor(e,t,n,r){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==r?r:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,r=t[n],s=t[n-1];e:{t:{let i;n:{r:if(!(e<r)){for(let i=n+2;;){if(void 0===r){if(e<s)break r;return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,e,s)}if(n===i)break;if(s=r,r=t[++n],e<r)break t}i=t.length;break n}if(e>=s)break e;{const a=t[1];e<a&&(n=2,s=a);for(let i=n-2;;){if(void 0===s)return this._cachedIndex=0,this.beforeStart_(0,e,r);if(n===i)break;if(r=s,s=t[--n-1],e>=s)break t}i=n,n=0}}for(;n<i;){const r=n+i>>>1;e<t[r]?i=r:n=r+1}if(r=t[n],s=t[n-1],void 0===s)return this._cachedIndex=0,this.beforeStart_(0,e,r);if(void 0===r)return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,s,e)}this._cachedIndex=n,this.intervalChanged_(n,s,r)}return this.interpolate_(n,s,e,r)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,r=this.valueSize,s=e*r;for(let e=0;e!==r;++e)t[e]=n[s+e];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}ph.prototype.beforeStart_=ph.prototype.copySampleValue_,ph.prototype.afterEnd_=ph.prototype.copySampleValue_;class fh extends ph{constructor(e,t,n,r){super(e,t,n,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Vt,endingEnd:Vt}}intervalChanged_(e,t,n){const r=this.parameterPositions;let s=e-2,i=e+1,a=r[s],o=r[i];if(void 0===a)switch(this.getSettings_().endingStart){case Gt:s=e,a=2*t-n;break;case Wt:s=r.length-2,a=t+r[s]-r[s+1];break;default:s=e,a=n}if(void 0===o)switch(this.getSettings_().endingEnd){case Gt:i=e,o=2*n-t;break;case Wt:i=1,o=n+r[1]-r[0];break;default:i=e-1,o=t}const l=.5*(n-t),u=this.valueSize;this._weightPrev=l/(t-a),this._weightNext=l/(o-n),this._offsetPrev=s*u,this._offsetNext=i*u}interpolate_(e,t,n,r){const s=this.resultBuffer,i=this.sampleValues,a=this.valueSize,o=e*a,l=o-a,u=this._offsetPrev,c=this._offsetNext,h=this._weightPrev,d=this._weightNext,p=(n-t)/(r-t),f=p*p,m=f*p,g=-h*m+2*h*f-h*p,y=(1+h)*m+(-1.5-2*h)*f+(-.5+h)*p+1,x=(-1-d)*m+(1.5+d)*f+.5*p,v=d*m-d*f;for(let e=0;e!==a;++e)s[e]=g*i[u+e]+y*i[l+e]+x*i[o+e]+v*i[c+e];return s}}class mh extends ph{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e,t,n,r){const s=this.resultBuffer,i=this.sampleValues,a=this.valueSize,o=e*a,l=o-a,u=(n-t)/(r-t),c=1-u;for(let e=0;e!==a;++e)s[e]=i[l+e]*c+i[o+e]*u;return s}}class gh extends ph{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e){return this.copySampleValue_(e-1)}}class yh{constructor(e,t,n,r){if(void 0===e)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=dh.convertArray(t,this.TimeBufferType),this.values=dh.convertArray(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:dh.convertArray(e.times,Array),values:dh.convertArray(e.values,Array)};const t=e.getInterpolation();t!==e.DefaultInterpolation&&(n.interpolation=t)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new gh(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new mh(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new fh(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case Bt:t=this.InterpolantFactoryMethodDiscrete;break;case Ut:t=this.InterpolantFactoryMethodLinear;break;case zt:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){const t="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(t);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",t),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Bt;case this.InterpolantFactoryMethodLinear:return Ut;case this.InterpolantFactoryMethodSmooth:return zt}}getValueSize(){return this.values.length/this.times.length}shift(e){if(0!==e){const t=this.times;for(let n=0,r=t.length;n!==r;++n)t[n]+=e}return this}scale(e){if(1!==e){const t=this.times;for(let n=0,r=t.length;n!==r;++n)t[n]*=e}return this}trim(e,t){const n=this.times,r=n.length;let s=0,i=r-1;for(;s!==r&&n[s]<e;)++s;for(;-1!==i&&n[i]>t;)--i;if(++i,0!==s||i!==r){s>=i&&(i=Math.max(i,1),s=i-1);const e=this.getValueSize();this.times=dh.arraySlice(n,s,i),this.values=dh.arraySlice(this.values,s*e,i*e)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,r=this.values,s=n.length;0===s&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let i=null;for(let t=0;t!==s;t++){const r=n[t];if("number"==typeof r&&isNaN(r)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,t,r),e=!1;break}if(null!==i&&i>r){console.error("THREE.KeyframeTrack: Out of order keys.",this,t,r,i),e=!1;break}i=r}if(void 0!==r&&dh.isTypedArray(r))for(let t=0,n=r.length;t!==n;++t){const n=r[t];if(isNaN(n)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,t,n),e=!1;break}}return e}optimize(){const e=dh.arraySlice(this.times),t=dh.arraySlice(this.values),n=this.getValueSize(),r=this.getInterpolation()===zt,s=e.length-1;let i=1;for(let a=1;a<s;++a){let s=!1;const o=e[a];if(o!==e[a+1]&&(1!==a||o!==e[0]))if(r)s=!0;else{const e=a*n,r=e-n,i=e+n;for(let a=0;a!==n;++a){const n=t[e+a];if(n!==t[r+a]||n!==t[i+a]){s=!0;break}}}if(s){if(a!==i){e[i]=e[a];const r=a*n,s=i*n;for(let e=0;e!==n;++e)t[s+e]=t[r+e]}++i}}if(s>0){e[i]=e[s];for(let e=s*n,r=i*n,a=0;a!==n;++a)t[r+a]=t[e+a];++i}return i!==e.length?(this.times=dh.arraySlice(e,0,i),this.values=dh.arraySlice(t,0,i*n)):(this.times=e,this.values=t),this}clone(){const e=dh.arraySlice(this.times,0),t=dh.arraySlice(this.values,0),n=new(0,this.constructor)(this.name,e,t);return n.createInterpolant=this.createInterpolant,n}}yh.prototype.TimeBufferType=Float32Array,yh.prototype.ValueBufferType=Float32Array,yh.prototype.DefaultInterpolation=Ut;class xh extends yh{}xh.prototype.ValueTypeName="bool",xh.prototype.ValueBufferType=Array,xh.prototype.DefaultInterpolation=Bt,xh.prototype.InterpolantFactoryMethodLinear=void 0,xh.prototype.InterpolantFactoryMethodSmooth=void 0;class vh extends yh{}vh.prototype.ValueTypeName="color";class bh extends yh{}bh.prototype.ValueTypeName="number";class wh extends ph{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e,t,n,r){const s=this.resultBuffer,i=this.sampleValues,a=this.valueSize,o=(n-t)/(r-t);let l=e*a;for(let e=l+a;l!==e;l+=4)ar.slerpFlat(s,0,i,l-a,i,l,o);return s}}class _h extends yh{InterpolantFactoryMethodLinear(e){return new wh(this.times,this.values,this.getValueSize(),e)}}_h.prototype.ValueTypeName="quaternion",_h.prototype.DefaultInterpolation=Ut,_h.prototype.InterpolantFactoryMethodSmooth=void 0;class Sh extends yh{}Sh.prototype.ValueTypeName="string",Sh.prototype.ValueBufferType=Array,Sh.prototype.DefaultInterpolation=Bt,Sh.prototype.InterpolantFactoryMethodLinear=void 0,Sh.prototype.InterpolantFactoryMethodSmooth=void 0;class Th extends yh{}Th.prototype.ValueTypeName="vector";class Eh{constructor(e,t=-1,n,r=Ht){this.name=e,this.tracks=n,this.duration=t,this.blendMode=r,this.uuid=zn(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,r=1/(e.fps||1);for(let e=0,s=n.length;e!==s;++e)t.push(Mh(n[e]).scale(r));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,r={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let e=0,r=n.length;e!==r;++e)t.push(yh.toJSON(n[e]));return r}static CreateFromMorphTargetSequence(e,t,n,r){const s=t.length,i=[];for(let e=0;e<s;e++){let a=[],o=[];a.push((e+s-1)%s,e,(e+1)%s),o.push(0,1,0);const l=dh.getKeyframeOrder(a);a=dh.sortedArray(a,1,l),o=dh.sortedArray(o,1,l),r||0!==a[0]||(a.push(s),o.push(o[0])),i.push(new bh(".morphTargetInfluences["+t[e].name+"]",a,o).scale(1/n))}return new this(e,-1,i)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const t=e;n=t.geometry&&t.geometry.animations||t.animations}for(let e=0;e<n.length;e++)if(n[e].name===t)return n[e];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const r={},s=/^([\w-]*?)([\d]+)$/;for(let t=0,n=e.length;t<n;t++){const n=e[t],i=n.name.match(s);if(i&&i.length>1){const e=i[1];let t=r[e];t||(r[e]=t=[]),t.push(n)}}const i=[];for(const e in r)i.push(this.CreateFromMorphTargetSequence(e,r[e],t,n));return i}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(e,t,n,r,s){if(0!==n.length){const i=[],a=[];dh.flattenJSON(n,i,a,r),0!==i.length&&s.push(new e(t,i,a))}},r=[],s=e.name||"default",i=e.fps||30,a=e.blendMode;let o=e.length||-1;const l=e.hierarchy||[];for(let e=0;e<l.length;e++){const s=l[e].keys;if(s&&0!==s.length)if(s[0].morphTargets){const e={};let t;for(t=0;t<s.length;t++)if(s[t].morphTargets)for(let n=0;n<s[t].morphTargets.length;n++)e[s[t].morphTargets[n]]=-1;for(const n in e){const e=[],i=[];for(let r=0;r!==s[t].morphTargets.length;++r){const r=s[t];e.push(r.time),i.push(r.morphTarget===n?1:0)}r.push(new bh(".morphTargetInfluence["+n+"]",e,i))}o=e.length*(i||1)}else{const i=".bones["+t[e].name+"]";n(Th,i+".position",s,"pos",r),n(_h,i+".quaternion",s,"rot",r),n(Th,i+".scale",s,"scl",r)}}return 0===r.length?null:new this(s,o,r,a)}resetDuration(){let e=0;for(let t=0,n=this.tracks.length;t!==n;++t){const n=this.tracks[t];e=Math.max(e,n.times[n.times.length-1])}return this.duration=e,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function Mh(e){if(void 0===e.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=function(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return bh;case"vector":case"vector2":case"vector3":case"vector4":return Th;case"color":return vh;case"quaternion":return _h;case"bool":case"boolean":return xh;case"string":return Sh}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}(e.type);if(void 0===e.times){const t=[],n=[];dh.flattenJSON(e.keys,t,n,"value"),e.times=t,e.values=n}return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)}const Ch={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};class Ah{constructor(e,t,n){const r=this;let s,i=!1,a=0,o=0;const l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(e){o++,!1===i&&void 0!==r.onStart&&r.onStart(e,a,o),i=!0},this.itemEnd=function(e){a++,void 0!==r.onProgress&&r.onProgress(e,a,o),a===o&&(i=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(e){void 0!==r.onError&&r.onError(e)},this.resolveURL=function(e){return s?s(e):e},this.setURLModifier=function(e){return s=e,this},this.addHandler=function(e,t){return l.push(e,t),this},this.removeHandler=function(e){const t=l.indexOf(e);return-1!==t&&l.splice(t,2),this},this.getHandler=function(e){for(let t=0,n=l.length;t<n;t+=2){const n=l[t],r=l[t+1];if(n.global&&(n.lastIndex=0),n.test(e))return r}return null}}}const Ih=new Ah;class Rh{constructor(e){this.manager=void 0!==e?e:Ih,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise((function(r,s){n.load(e,r,t,s)}))}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const kh={};class Nh extends Rh{constructor(e){super(e)}load(e,t,n,r){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,i=Ch.get(e);if(void 0!==i)return s.manager.itemStart(e),setTimeout((function(){t&&t(i),s.manager.itemEnd(e)}),0),i;if(void 0!==kh[e])return void kh[e].push({onLoad:t,onProgress:n,onError:r});const a=e.match(/^data:(.*?)(;base64)?,(.*)$/);let o;if(a){const n=a[1],i=!!a[2];let o=a[3];o=decodeURIComponent(o),i&&(o=atob(o));try{let r;const i=(this.responseType||"").toLowerCase();switch(i){case"arraybuffer":case"blob":const e=new Uint8Array(o.length);for(let t=0;t<o.length;t++)e[t]=o.charCodeAt(t);r="blob"===i?new Blob([e.buffer],{type:n}):e.buffer;break;case"document":const t=new DOMParser;r=t.parseFromString(o,n);break;case"json":r=JSON.parse(o);break;default:r=o}setTimeout((function(){t&&t(r),s.manager.itemEnd(e)}),0)}catch(t){setTimeout((function(){r&&r(t),s.manager.itemError(e),s.manager.itemEnd(e)}),0)}}else{kh[e]=[],kh[e].push({onLoad:t,onProgress:n,onError:r}),o=new XMLHttpRequest,o.open("GET",e,!0),o.addEventListener("load",(function(t){const n=this.response,r=kh[e];if(delete kh[e],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),Ch.add(e,n);for(let e=0,t=r.length;e<t;e++){const t=r[e];t.onLoad&&t.onLoad(n)}s.manager.itemEnd(e)}else{for(let e=0,n=r.length;e<n;e++){const n=r[e];n.onError&&n.onError(t)}s.manager.itemError(e),s.manager.itemEnd(e)}}),!1),o.addEventListener("progress",(function(t){const n=kh[e];for(let e=0,r=n.length;e<r;e++){const r=n[e];r.onProgress&&r.onProgress(t)}}),!1),o.addEventListener("error",(function(t){const n=kh[e];delete kh[e];for(let e=0,r=n.length;e<r;e++){const r=n[e];r.onError&&r.onError(t)}s.manager.itemError(e),s.manager.itemEnd(e)}),!1),o.addEventListener("abort",(function(t){const n=kh[e];delete kh[e];for(let e=0,r=n.length;e<r;e++){const r=n[e];r.onError&&r.onError(t)}s.manager.itemError(e),s.manager.itemEnd(e)}),!1),void 0!==this.responseType&&(o.responseType=this.responseType),void 0!==this.withCredentials&&(o.withCredentials=this.withCredentials),o.overrideMimeType&&o.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(const e in this.requestHeader)o.setRequestHeader(e,this.requestHeader[e]);o.send(null)}return s.manager.itemStart(e),o}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class Lh extends Rh{constructor(e){super(e)}load(e,t,n,r){const s=this,i=new Nh(this.manager);i.setPath(this.path),i.setRequestHeader(this.requestHeader),i.setWithCredentials(this.withCredentials),i.load(e,(function(n){try{t(s.parse(JSON.parse(n)))}catch(t){r?r(t):console.error(t),s.manager.itemError(e)}}),n,r)}parse(e){const t=[];for(let n=0;n<e.length;n++){const r=Eh.parse(e[n]);t.push(r)}return t}}class Dh extends Rh{constructor(e){super(e)}load(e,t,n,r){const s=this,i=[],a=new Lu,o=new Nh(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(s.withCredentials);let l=0;function u(u){o.load(e[u],(function(e){const n=s.parse(e,!0);i[u]={width:n.width,height:n.height,format:n.format,mipmaps:n.mipmaps},l+=1,6===l&&(1===n.mipmapCount&&(a.minFilter=ve),a.image=i,a.format=n.format,a.needsUpdate=!0,t&&t(a))}),n,r)}if(Array.isArray(e))for(let t=0,n=e.length;t<n;++t)u(t);else o.load(e,(function(e){const n=s.parse(e,!0);if(n.isCubemap){const e=n.mipmaps.length/n.mipmapCount;for(let t=0;t<e;t++){i[t]={mipmaps:[]};for(let e=0;e<n.mipmapCount;e++)i[t].mipmaps.push(n.mipmaps[t*n.mipmapCount+e]),i[t].format=n.format,i[t].width=n.width,i[t].height=n.height}a.image=i}else a.image.width=n.width,a.image.height=n.height,a.mipmaps=n.mipmaps;1===n.mipmapCount&&(a.minFilter=ve),a.format=n.format,a.needsUpdate=!0,t&&t(a)}),n,r);return a}}class Oh extends Rh{constructor(e){super(e)}load(e,t,n,r){void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,i=Ch.get(e);if(void 0!==i)return s.manager.itemStart(e),setTimeout((function(){t&&t(i),s.manager.itemEnd(e)}),0),i;const a=document.createElementNS("http://www.w3.org/1999/xhtml","img");function o(){a.removeEventListener("load",o,!1),a.removeEventListener("error",l,!1),Ch.add(e,this),t&&t(this),s.manager.itemEnd(e)}function l(t){a.removeEventListener("load",o,!1),a.removeEventListener("error",l,!1),r&&r(t),s.manager.itemError(e),s.manager.itemEnd(e)}return a.addEventListener("load",o,!1),a.addEventListener("error",l,!1),"data:"!==e.substr(0,5)&&void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),s.manager.itemStart(e),a.src=e,a}}class Ph extends Rh{constructor(e){super(e)}load(e,t,n,r){const s=new Ii,i=new Oh(this.manager);i.setCrossOrigin(this.crossOrigin),i.setPath(this.path);let a=0;function o(n){i.load(e[n],(function(e){s.images[n]=e,a++,6===a&&(s.needsUpdate=!0,t&&t(s))}),void 0,r)}for(let t=0;t<e.length;++t)o(t);return s}}class Fh extends Rh{constructor(e){super(e)}load(e,t,n,r){const s=this,i=new su,a=new Nh(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(s.withCredentials),a.load(e,(function(e){const n=s.parse(e);n&&(void 0!==n.image?i.image=n.image:void 0!==n.data&&(i.image.width=n.width,i.image.height=n.height,i.image.data=n.data),i.wrapS=void 0!==n.wrapS?n.wrapS:de,i.wrapT=void 0!==n.wrapT?n.wrapT:de,i.magFilter=void 0!==n.magFilter?n.magFilter:ve,i.minFilter=void 0!==n.minFilter?n.minFilter:ve,i.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,void 0!==n.encoding&&(i.encoding=n.encoding),void 0!==n.flipY&&(i.flipY=n.flipY),void 0!==n.format&&(i.format=n.format),void 0!==n.type&&(i.type=n.type),void 0!==n.mipmaps&&(i.mipmaps=n.mipmaps,i.minFilter=_e),1===n.mipmapCount&&(i.minFilter=ve),void 0!==n.generateMipmaps&&(i.generateMipmaps=n.generateMipmaps),i.needsUpdate=!0,t&&t(i,n))}),n,r),i}}class $h extends Rh{constructor(e){super(e)}load(e,t,n,r){const s=new er,i=new Oh(this.manager);return i.setCrossOrigin(this.crossOrigin),i.setPath(this.path),i.load(e,(function(n){s.image=n;const r=e.search(/\.jpe?g($|\?)/i)>0||0===e.search(/^data\:image\/jpeg/);s.format=r?Fe:$e,s.needsUpdate=!0,void 0!==t&&t(s)}),n,r),s}}class Bh extends ju{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new ac(t,e))}getPoint(e){const t=e*this.getLength(),n=this.getCurveLengths();let r=0;for(;r<n.length;){if(n[r]>=t){const e=n[r]-t,s=this.curves[r],i=s.getLength(),a=0===i?0:1-e/i;return s.getPointAt(a)}r++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,r=this.curves.length;n<r;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let r=0,s=this.curves;r<s.length;r++){const i=s[r],a=i&&i.isEllipseCurve?2*e:i&&(i.isLineCurve||i.isLineCurve3)?1:i&&i.isSplineCurve?e*i.points.length:e,o=i.getPoints(a);for(let e=0;e<o.length;e++){const r=o[e];n&&n.equals(r)||(t.push(r),n=r)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const n=e.curves[t];this.curves.push(n.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const n=this.curves[t];e.curves.push(n.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const n=e.curves[t];this.curves.push((new hc[n.type]).fromJSON(n))}return this}}class Uh extends Bh{constructor(e){super(),this.type="Path",this.currentPoint=new Kn,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new ac(this.currentPoint.clone(),new Kn(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,r){const s=new lc(this.currentPoint.clone(),new Kn(e,t),new Kn(n,r));return this.curves.push(s),this.currentPoint.set(n,r),this}bezierCurveTo(e,t,n,r,s,i){const a=new sc(this.currentPoint.clone(),new Kn(e,t),new Kn(n,r),new Kn(s,i));return this.curves.push(a),this.currentPoint.set(s,i),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new cc(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,r,s,i){const a=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(e+a,t+o,n,r,s,i),this}absarc(e,t,n,r,s,i){return this.absellipse(e,t,n,n,r,s,i),this}ellipse(e,t,n,r,s,i,a,o){const l=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(e+l,t+u,n,r,s,i,a,o),this}absellipse(e,t,n,r,s,i,a,o){const l=new Xu(e,t,n,r,s,i,a,o);if(this.curves.length>0){const e=l.getPoint(0);e.equals(this.currentPoint)||this.lineTo(e.x,e.y)}this.curves.push(l);const u=l.getPoint(1);return this.currentPoint.copy(u),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class zh extends Uh{constructor(e){super(e),this.uuid=zn(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,r=this.holes.length;n<r;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const n=e.holes[t];this.holes.push(n.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const n=this.holes[t];e.holes.push(n.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const n=e.holes[t];this.holes.push((new Uh).fromJSON(n))}return this}}class Vh extends us{constructor(e,t=1){super(),this.type="Light",this.color=new Is(e),this.intensity=t}dispose(){}copy(e){return super.copy(e),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}Vh.prototype.isLight=!0;class Gh extends Vh{constructor(e,t,n){super(e,n),this.type="HemisphereLight",this.position.copy(us.DefaultUp),this.updateMatrix(),this.groundColor=new Is(t)}copy(e){return Vh.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}Gh.prototype.isHemisphereLight=!0;const Wh=new $r,Hh=new or,jh=new or;class Xh{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Kn(512,512),this.map=null,this.mapPass=null,this.matrix=new $r,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Fi,this._frameExtents=new Kn(1,1),this._viewportCount=1,this._viewports=[new nr(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;Hh.setFromMatrixPosition(e.matrixWorld),t.position.copy(Hh),jh.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(jh),t.updateMatrixWorld(),Wh.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Wh),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class qh extends Xh{constructor(){super(new Mi(50,1,.5,500)),this.focus=1}updateMatrices(e){const t=this.camera,n=2*Un*e.angle*this.focus,r=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;n===t.fov&&r===t.aspect&&s===t.far||(t.fov=n,t.aspect=r,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}qh.prototype.isSpotLightShadow=!0;class Kh extends Vh{constructor(e,t,n=0,r=Math.PI/3,s=0,i=1){super(e,t),this.type="SpotLight",this.position.copy(us.DefaultUp),this.updateMatrix(),this.target=new us,this.distance=n,this.angle=r,this.penumbra=s,this.decay=i,this.shadow=new qh}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}Kh.prototype.isSpotLight=!0;const Yh=new $r,Jh=new or,Zh=new or;class Qh extends Xh{constructor(){super(new Mi(90,1,.5,500)),this._frameExtents=new Kn(4,2),this._viewportCount=6,this._viewports=[new nr(2,1,1,1),new nr(0,1,1,1),new nr(3,1,1,1),new nr(1,1,1,1),new nr(3,0,1,1),new nr(1,0,1,1)],this._cubeDirections=[new or(1,0,0),new or(-1,0,0),new or(0,0,1),new or(0,0,-1),new or(0,1,0),new or(0,-1,0)],this._cubeUps=[new or(0,1,0),new or(0,1,0),new or(0,1,0),new or(0,1,0),new or(0,0,1),new or(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,r=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),Jh.setFromMatrixPosition(e.matrixWorld),n.position.copy(Jh),Zh.copy(n.position),Zh.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Zh),n.updateMatrixWorld(),r.makeTranslation(-Jh.x,-Jh.y,-Jh.z),Yh.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Yh)}}Qh.prototype.isPointLightShadow=!0;class ed extends Vh{constructor(e,t,n=0,r=1){super(e,t),this.type="PointLight",this.distance=n,this.decay=r,this.shadow=new Qh}get power(){return 4*this.intensity*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}ed.prototype.isPointLight=!0;class td extends Xh{constructor(){super(new Yi(-5,5,5,-5,.5,500))}}td.prototype.isDirectionalLightShadow=!0;class nd extends Vh{constructor(e,t){super(e,t),this.type="DirectionalLight",this.position.copy(us.DefaultUp),this.updateMatrix(),this.target=new us,this.shadow=new td}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}nd.prototype.isDirectionalLight=!0;class rd extends Vh{constructor(e,t){super(e,t),this.type="AmbientLight"}}rd.prototype.isAmbientLight=!0;class sd extends Vh{constructor(e,t,n=10,r=10){super(e,t),this.type="RectAreaLight",this.width=n,this.height=r}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}sd.prototype.isRectAreaLight=!0;class id{constructor(){this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new or)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,r=e.y,s=e.z,i=this.coefficients;return t.copy(i[0]).multiplyScalar(.282095),t.addScaledVector(i[1],.488603*r),t.addScaledVector(i[2],.488603*s),t.addScaledVector(i[3],.488603*n),t.addScaledVector(i[4],n*r*1.092548),t.addScaledVector(i[5],r*s*1.092548),t.addScaledVector(i[6],.315392*(3*s*s-1)),t.addScaledVector(i[7],n*s*1.092548),t.addScaledVector(i[8],.546274*(n*n-r*r)),t}getIrradianceAt(e,t){const n=e.x,r=e.y,s=e.z,i=this.coefficients;return t.copy(i[0]).multiplyScalar(.886227),t.addScaledVector(i[1],1.023328*r),t.addScaledVector(i[2],1.023328*s),t.addScaledVector(i[3],1.023328*n),t.addScaledVector(i[4],.858086*n*r),t.addScaledVector(i[5],.858086*r*s),t.addScaledVector(i[6],.743125*s*s-.247708),t.addScaledVector(i[7],.858086*n*s),t.addScaledVector(i[8],.429043*(n*n-r*r)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let r=0;r<9;r++)n[r].fromArray(e,t+3*r);return this}toArray(e=[],t=0){const n=this.coefficients;for(let r=0;r<9;r++)n[r].toArray(e,t+3*r);return e}static getBasisAt(e,t){const n=e.x,r=e.y,s=e.z;t[0]=.282095,t[1]=.488603*r,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*r,t[5]=1.092548*r*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-r*r)}}id.prototype.isSphericalHarmonics3=!0;class ad extends Vh{constructor(e=new id,t=1){super(void 0,t),this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}ad.prototype.isLightProbe=!0;class od extends Rh{constructor(e){super(e),this.textures={}}load(e,t,n,r){const s=this,i=new Nh(s.manager);i.setPath(s.path),i.setRequestHeader(s.requestHeader),i.setWithCredentials(s.withCredentials),i.load(e,(function(n){try{t(s.parse(JSON.parse(n)))}catch(t){r?r(t):console.error(t),s.manager.itemError(e)}}),n,r)}parse(e){const t=this.textures;function n(e){return void 0===t[e]&&console.warn("THREE.MaterialLoader: Undefined texture",e),t[e]}const r=new hh[e.type];if(void 0!==e.uuid&&(r.uuid=e.uuid),void 0!==e.name&&(r.name=e.name),void 0!==e.color&&void 0!==r.color&&r.color.setHex(e.color),void 0!==e.roughness&&(r.roughness=e.roughness),void 0!==e.metalness&&(r.metalness=e.metalness),void 0!==e.sheenTint&&(r.sheenTint=(new Is).setHex(e.sheenTint)),void 0!==e.emissive&&void 0!==r.emissive&&r.emissive.setHex(e.emissive),void 0!==e.specular&&void 0!==r.specular&&r.specular.setHex(e.specular),void 0!==e.specularIntensity&&(r.specularIntensity=e.specularIntensity),void 0!==e.specularTint&&void 0!==r.specularTint&&r.specularTint.setHex(e.specularTint),void 0!==e.shininess&&(r.shininess=e.shininess),void 0!==e.clearcoat&&(r.clearcoat=e.clearcoat),void 0!==e.clearcoatRoughness&&(r.clearcoatRoughness=e.clearcoatRoughness),void 0!==e.transmission&&(r.transmission=e.transmission),void 0!==e.thickness&&(r.thickness=e.thickness),void 0!==e.attenuationDistance&&(r.attenuationDistance=e.attenuationDistance),void 0!==e.attenuationTint&&void 0!==r.attenuationTint&&r.attenuationTint.setHex(e.attenuationTint),void 0!==e.fog&&(r.fog=e.fog),void 0!==e.flatShading&&(r.flatShading=e.flatShading),void 0!==e.blending&&(r.blending=e.blending),void 0!==e.combine&&(r.combine=e.combine),void 0!==e.side&&(r.side=e.side),void 0!==e.shadowSide&&(r.shadowSide=e.shadowSide),void 0!==e.opacity&&(r.opacity=e.opacity),void 0!==e.format&&(r.format=e.format),void 0!==e.transparent&&(r.transparent=e.transparent),void 0!==e.alphaTest&&(r.alphaTest=e.alphaTest),void 0!==e.depthTest&&(r.depthTest=e.depthTest),void 0!==e.depthWrite&&(r.depthWrite=e.depthWrite),void 0!==e.colorWrite&&(r.colorWrite=e.colorWrite),void 0!==e.stencilWrite&&(r.stencilWrite=e.stencilWrite),void 0!==e.stencilWriteMask&&(r.stencilWriteMask=e.stencilWriteMask),void 0!==e.stencilFunc&&(r.stencilFunc=e.stencilFunc),void 0!==e.stencilRef&&(r.stencilRef=e.stencilRef),void 0!==e.stencilFuncMask&&(r.stencilFuncMask=e.stencilFuncMask),void 0!==e.stencilFail&&(r.stencilFail=e.stencilFail),void 0!==e.stencilZFail&&(r.stencilZFail=e.stencilZFail),void 0!==e.stencilZPass&&(r.stencilZPass=e.stencilZPass),void 0!==e.wireframe&&(r.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(r.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.wireframeLinecap&&(r.wireframeLinecap=e.wireframeLinecap),void 0!==e.wireframeLinejoin&&(r.wireframeLinejoin=e.wireframeLinejoin),void 0!==e.rotation&&(r.rotation=e.rotation),1!==e.linewidth&&(r.linewidth=e.linewidth),void 0!==e.dashSize&&(r.dashSize=e.dashSize),void 0!==e.gapSize&&(r.gapSize=e.gapSize),void 0!==e.scale&&(r.scale=e.scale),void 0!==e.polygonOffset&&(r.polygonOffset=e.polygonOffset),void 0!==e.polygonOffsetFactor&&(r.polygonOffsetFactor=e.polygonOffsetFactor),void 0!==e.polygonOffsetUnits&&(r.polygonOffsetUnits=e.polygonOffsetUnits),void 0!==e.dithering&&(r.dithering=e.dithering),void 0!==e.alphaToCoverage&&(r.alphaToCoverage=e.alphaToCoverage),void 0!==e.premultipliedAlpha&&(r.premultipliedAlpha=e.premultipliedAlpha),void 0!==e.visible&&(r.visible=e.visible),void 0!==e.toneMapped&&(r.toneMapped=e.toneMapped),void 0!==e.userData&&(r.userData=e.userData),void 0!==e.vertexColors&&("number"==typeof e.vertexColors?r.vertexColors=e.vertexColors>0:r.vertexColors=e.vertexColors),void 0!==e.uniforms)for(const t in e.uniforms){const s=e.uniforms[t];switch(r.uniforms[t]={},s.type){case"t":r.uniforms[t].value=n(s.value);break;case"c":r.uniforms[t].value=(new Is).setHex(s.value);break;case"v2":r.uniforms[t].value=(new Kn).fromArray(s.value);break;case"v3":r.uniforms[t].value=(new or).fromArray(s.value);break;case"v4":r.uniforms[t].value=(new nr).fromArray(s.value);break;case"m3":r.uniforms[t].value=(new Yn).fromArray(s.value);break;case"m4":r.uniforms[t].value=(new $r).fromArray(s.value);break;default:r.uniforms[t].value=s.value}}if(void 0!==e.defines&&(r.defines=e.defines),void 0!==e.vertexShader&&(r.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(r.fragmentShader=e.fragmentShader),void 0!==e.extensions)for(const t in e.extensions)r.extensions[t]=e.extensions[t];if(void 0!==e.shading&&(r.flatShading=1===e.shading),void 0!==e.size&&(r.size=e.size),void 0!==e.sizeAttenuation&&(r.sizeAttenuation=e.sizeAttenuation),void 0!==e.map&&(r.map=n(e.map)),void 0!==e.matcap&&(r.matcap=n(e.matcap)),void 0!==e.alphaMap&&(r.alphaMap=n(e.alphaMap)),void 0!==e.bumpMap&&(r.bumpMap=n(e.bumpMap)),void 0!==e.bumpScale&&(r.bumpScale=e.bumpScale),void 0!==e.normalMap&&(r.normalMap=n(e.normalMap)),void 0!==e.normalMapType&&(r.normalMapType=e.normalMapType),void 0!==e.normalScale){let t=e.normalScale;!1===Array.isArray(t)&&(t=[t,t]),r.normalScale=(new Kn).fromArray(t)}return void 0!==e.displacementMap&&(r.displacementMap=n(e.displacementMap)),void 0!==e.displacementScale&&(r.displacementScale=e.displacementScale),void 0!==e.displacementBias&&(r.displacementBias=e.displacementBias),void 0!==e.roughnessMap&&(r.roughnessMap=n(e.roughnessMap)),void 0!==e.metalnessMap&&(r.metalnessMap=n(e.metalnessMap)),void 0!==e.emissiveMap&&(r.emissiveMap=n(e.emissiveMap)),void 0!==e.emissiveIntensity&&(r.emissiveIntensity=e.emissiveIntensity),void 0!==e.specularMap&&(r.specularMap=n(e.specularMap)),void 0!==e.specularIntensityMap&&(r.specularIntensityMap=n(e.specularIntensityMap)),void 0!==e.specularTintMap&&(r.specularTintMap=n(e.specularTintMap)),void 0!==e.envMap&&(r.envMap=n(e.envMap)),void 0!==e.envMapIntensity&&(r.envMapIntensity=e.envMapIntensity),void 0!==e.reflectivity&&(r.reflectivity=e.reflectivity),void 0!==e.refractionRatio&&(r.refractionRatio=e.refractionRatio),void 0!==e.lightMap&&(r.lightMap=n(e.lightMap)),void 0!==e.lightMapIntensity&&(r.lightMapIntensity=e.lightMapIntensity),void 0!==e.aoMap&&(r.aoMap=n(e.aoMap)),void 0!==e.aoMapIntensity&&(r.aoMapIntensity=e.aoMapIntensity),void 0!==e.gradientMap&&(r.gradientMap=n(e.gradientMap)),void 0!==e.clearcoatMap&&(r.clearcoatMap=n(e.clearcoatMap)),void 0!==e.clearcoatRoughnessMap&&(r.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),void 0!==e.clearcoatNormalMap&&(r.clearcoatNormalMap=n(e.clearcoatNormalMap)),void 0!==e.clearcoatNormalScale&&(r.clearcoatNormalScale=(new Kn).fromArray(e.clearcoatNormalScale)),void 0!==e.transmissionMap&&(r.transmissionMap=n(e.transmissionMap)),void 0!==e.thicknessMap&&(r.thicknessMap=n(e.thicknessMap)),r}setTextures(e){return this.textures=e,this}}class ld{static decodeText(e){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(e);let t="";for(let n=0,r=e.length;n<r;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch(e){return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return-1===t?"./":e.substr(0,t+1)}}class ud extends ei{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return(new this.constructor).copy(this)}toJSON(){const e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}ud.prototype.isInstancedBufferGeometry=!0;class cd extends Rh{constructor(e){super(e)}load(e,t,n,r){const s=this,i=new Nh(s.manager);i.setPath(s.path),i.setRequestHeader(s.requestHeader),i.setWithCredentials(s.withCredentials),i.load(e,(function(n){try{t(s.parse(JSON.parse(n)))}catch(t){r?r(t):console.error(t),s.manager.itemError(e)}}),n,r)}parse(e){const t={},n={};function r(e,r){if(void 0!==t[r])return t[r];const s=e.interleavedBuffers[r],i=function(e,t){if(void 0!==n[t])return n[t];const r=e.arrayBuffers[t],s=new Uint32Array(r).buffer;return n[t]=s,s}(e,s.buffer),a=js(s.type,i),o=new Il(a,s.stride);return o.uuid=s.uuid,t[r]=o,o}const s=e.isInstancedBufferGeometry?new ud:new ei,i=e.data.index;if(void 0!==i){const e=js(i.type,i.array);s.setIndex(new Ls(e,1))}const a=e.data.attributes;for(const t in a){const n=a[t];let i;if(n.isInterleavedBufferAttribute){const t=r(e.data,n.data);i=new kl(t,n.itemSize,n.offset,n.normalized)}else{const e=js(n.type,n.array);i=new(n.isInstancedBufferAttribute?lu:Ls)(e,n.itemSize,n.normalized)}void 0!==n.name&&(i.name=n.name),void 0!==n.usage&&i.setUsage(n.usage),void 0!==n.updateRange&&(i.updateRange.offset=n.updateRange.offset,i.updateRange.count=n.updateRange.count),s.setAttribute(t,i)}const o=e.data.morphAttributes;if(o)for(const t in o){const n=o[t],i=[];for(let t=0,s=n.length;t<s;t++){const s=n[t];let a;if(s.isInterleavedBufferAttribute){const t=r(e.data,s.data);a=new kl(t,s.itemSize,s.offset,s.normalized)}else{const e=js(s.type,s.array);a=new Ls(e,s.itemSize,s.normalized)}void 0!==s.name&&(a.name=s.name),i.push(a)}s.morphAttributes[t]=i}e.data.morphTargetsRelative&&(s.morphTargetsRelative=!0);const l=e.data.groups||e.data.drawcalls||e.data.offsets;if(void 0!==l)for(let e=0,t=l.length;e!==t;++e){const t=l[e];s.addGroup(t.start,t.count,t.materialIndex)}const u=e.data.boundingSphere;if(void 0!==u){const e=new or;void 0!==u.center&&e.fromArray(u.center),s.boundingSphere=new Ir(e,u.radius)}return e.name&&(s.name=e.name),e.userData&&(s.userData=e.userData),s}}class hd extends Rh{constructor(e){super(e)}load(e,t,n,r){const s=this,i=""===this.path?ld.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const a=new Nh(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,(function(n){let i=null;try{i=JSON.parse(n)}catch(t){return void 0!==r&&r(t),void console.error("THREE:ObjectLoader: Can't parse "+e+".",t.message)}const a=i.metadata;void 0!==a&&void 0!==a.type&&"geometry"!==a.type.toLowerCase()?s.parse(i,t):console.error("THREE.ObjectLoader: Can't load "+e)}),n,r)}async loadAsync(e,t){const n=""===this.path?ld.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||n;const r=new Nh(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials);const s=await r.loadAsync(e,t),i=JSON.parse(s),a=i.metadata;if(void 0===a||void 0===a.type||"geometry"===a.type.toLowerCase())throw new Error("THREE.ObjectLoader: Can't load "+e);return await this.parseAsync(i)}parse(e,t){const n=this.parseAnimations(e.animations),r=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,r),i=this.parseImages(e.images,(function(){void 0!==t&&t(l)})),a=this.parseTextures(e.textures,i),o=this.parseMaterials(e.materials,a),l=this.parseObject(e.object,s,o,a,n),u=this.parseSkeletons(e.skeletons,l);if(this.bindSkeletons(l,u),void 0!==t){let e=!1;for(const t in i)if(i[t]instanceof HTMLImageElement){e=!0;break}!1===e&&t(l)}return l}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,n),s=await this.parseImagesAsync(e.images),i=this.parseTextures(e.textures,s),a=this.parseMaterials(e.materials,i),o=this.parseObject(e.object,r,a,i,t),l=this.parseSkeletons(e.skeletons,o);return this.bindSkeletons(o,l),o}parseShapes(e){const t={};if(void 0!==e)for(let n=0,r=e.length;n<r;n++){const r=(new zh).fromJSON(e[n]);t[r.uuid]=r}return t}parseSkeletons(e,t){const n={},r={};if(t.traverse((function(e){e.isBone&&(r[e.uuid]=e)})),void 0!==e)for(let t=0,s=e.length;t<s;t++){const s=(new ou).fromJSON(e[t],r);n[s.uuid]=s}return n}parseGeometries(e,t){const n={};if(void 0!==e){const r=new cd;for(let s=0,i=e.length;s<i;s++){let i;const a=e[s];switch(a.type){case"BufferGeometry":case"InstancedBufferGeometry":i=r.parse(a);break;case"Geometry":console.error("THREE.ObjectLoader: The legacy Geometry type is no longer supported.");break;default:a.type in th?i=th[a.type].fromJSON(a,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${a.type}"`)}i.uuid=a.uuid,void 0!==a.name&&(i.name=a.name),!0===i.isBufferGeometry&&void 0!==a.userData&&(i.userData=a.userData),n[a.uuid]=i}}return n}parseMaterials(e,t){const n={},r={};if(void 0!==e){const s=new od;s.setTextures(t);for(let t=0,i=e.length;t<i;t++){const i=e[t];if("MultiMaterial"===i.type){const e=[];for(let t=0;t<i.materials.length;t++){const r=i.materials[t];void 0===n[r.uuid]&&(n[r.uuid]=s.parse(r)),e.push(n[r.uuid])}r[i.uuid]=e}else void 0===n[i.uuid]&&(n[i.uuid]=s.parse(i)),r[i.uuid]=n[i.uuid]}}return r}parseAnimations(e){const t={};if(void 0!==e)for(let n=0;n<e.length;n++){const r=e[n],s=Eh.parse(r);t[s.uuid]=s}return t}parseImages(e,t){const n=this,r={};let s;function i(e){if("string"==typeof e){const t=e;return function(e){return n.manager.itemStart(e),s.load(e,(function(){n.manager.itemEnd(e)}),void 0,(function(){n.manager.itemError(e),n.manager.itemEnd(e)}))}(/^(\/\/)|([a-z]+:(\/\/)?)/i.test(t)?t:n.resourcePath+t)}return e.data?{data:js(e.type,e.data),width:e.width,height:e.height}:null}if(void 0!==e&&e.length>0){const n=new Ah(t);s=new Oh(n),s.setCrossOrigin(this.crossOrigin);for(let t=0,n=e.length;t<n;t++){const n=e[t],s=n.url;if(Array.isArray(s)){r[n.uuid]=[];for(let e=0,t=s.length;e<t;e++){const t=i(s[e]);null!==t&&(t instanceof HTMLImageElement?r[n.uuid].push(t):r[n.uuid].push(new su(t.data,t.width,t.height)))}}else{const e=i(n.url);null!==e&&(r[n.uuid]=e)}}}return r}async parseImagesAsync(e){const t=this,n={};let r;async function s(e){if("string"==typeof e){const n=e,s=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(n)?n:t.resourcePath+n;return await r.loadAsync(s)}return e.data?{data:js(e.type,e.data),width:e.width,height:e.height}:null}if(void 0!==e&&e.length>0){r=new Oh(this.manager),r.setCrossOrigin(this.crossOrigin);for(let t=0,r=e.length;t<r;t++){const r=e[t],i=r.url;if(Array.isArray(i)){n[r.uuid]=[];for(let e=0,t=i.length;e<t;e++){const t=i[e],a=await s(t);null!==a&&(a instanceof HTMLImageElement?n[r.uuid].push(a):n[r.uuid].push(new su(a.data,a.width,a.height)))}}else{const e=await s(r.url);null!==e&&(n[r.uuid]=e)}}}return n}parseTextures(e,t){function n(e,t){return"number"==typeof e?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e),t[e])}const r={};if(void 0!==e)for(let s=0,i=e.length;s<i;s++){const i=e[s];let a;void 0===i.image&&console.warn('THREE.ObjectLoader: No "image" specified for',i.uuid),void 0===t[i.image]&&console.warn("THREE.ObjectLoader: Undefined image",i.image);const o=t[i.image];Array.isArray(o)?(a=new Ii(o),6===o.length&&(a.needsUpdate=!0)):(a=o&&o.data?new su(o.data,o.width,o.height):new er(o),o&&(a.needsUpdate=!0)),a.uuid=i.uuid,void 0!==i.name&&(a.name=i.name),void 0!==i.mapping&&(a.mapping=n(i.mapping,dd)),void 0!==i.offset&&a.offset.fromArray(i.offset),void 0!==i.repeat&&a.repeat.fromArray(i.repeat),void 0!==i.center&&a.center.fromArray(i.center),void 0!==i.rotation&&(a.rotation=i.rotation),void 0!==i.wrap&&(a.wrapS=n(i.wrap[0],pd),a.wrapT=n(i.wrap[1],pd)),void 0!==i.format&&(a.format=i.format),void 0!==i.type&&(a.type=i.type),void 0!==i.encoding&&(a.encoding=i.encoding),void 0!==i.minFilter&&(a.minFilter=n(i.minFilter,fd)),void 0!==i.magFilter&&(a.magFilter=n(i.magFilter,fd)),void 0!==i.anisotropy&&(a.anisotropy=i.anisotropy),void 0!==i.flipY&&(a.flipY=i.flipY),void 0!==i.premultiplyAlpha&&(a.premultiplyAlpha=i.premultiplyAlpha),void 0!==i.unpackAlignment&&(a.unpackAlignment=i.unpackAlignment),r[i.uuid]=a}return r}parseObject(e,t,n,r,s){let i,a,o;function l(e){return void 0===t[e]&&console.warn("THREE.ObjectLoader: Undefined geometry",e),t[e]}function u(e){if(void 0!==e){if(Array.isArray(e)){const t=[];for(let r=0,s=e.length;r<s;r++){const s=e[r];void 0===n[s]&&console.warn("THREE.ObjectLoader: Undefined material",s),t.push(n[s])}return t}return void 0===n[e]&&console.warn("THREE.ObjectLoader: Undefined material",e),n[e]}}function c(e){return void 0===r[e]&&console.warn("THREE.ObjectLoader: Undefined texture",e),r[e]}switch(e.type){case"Scene":i=new Al,void 0!==e.background&&(Number.isInteger(e.background)?i.background=new Is(e.background):i.background=c(e.background)),void 0!==e.environment&&(i.environment=c(e.environment)),void 0!==e.fog&&("Fog"===e.fog.type?i.fog=new Cl(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(i.fog=new Ml(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":i=new Mi(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(i.focus=e.focus),void 0!==e.zoom&&(i.zoom=e.zoom),void 0!==e.filmGauge&&(i.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(i.filmOffset=e.filmOffset),void 0!==e.view&&(i.view=Object.assign({},e.view));break;case"OrthographicCamera":i=new Yi(e.left,e.right,e.top,e.bottom,e.near,e.far),void 0!==e.zoom&&(i.zoom=e.zoom),void 0!==e.view&&(i.view=Object.assign({},e.view));break;case"AmbientLight":i=new rd(e.color,e.intensity);break;case"DirectionalLight":i=new nd(e.color,e.intensity);break;case"PointLight":i=new ed(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":i=new sd(e.color,e.intensity,e.width,e.height);break;case"SpotLight":i=new Kh(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":i=new Gh(e.color,e.groundColor,e.intensity);break;case"LightProbe":i=(new ad).fromJSON(e);break;case"SkinnedMesh":a=l(e.geometry),o=u(e.material),i=new nu(a,o),void 0!==e.bindMode&&(i.bindMode=e.bindMode),void 0!==e.bindMatrix&&i.bindMatrix.fromArray(e.bindMatrix),void 0!==e.skeleton&&(i.skeleton=e.skeleton);break;case"Mesh":a=l(e.geometry),o=u(e.material),i=new xi(a,o);break;case"InstancedMesh":a=l(e.geometry),o=u(e.material);const t=e.count,n=e.instanceMatrix,r=e.instanceColor;i=new pu(a,o,t),i.instanceMatrix=new lu(new Float32Array(n.array),16),void 0!==r&&(i.instanceColor=new lu(new Float32Array(r.array),r.itemSize));break;case"LOD":i=new Yl;break;case"Line":i=new bu(l(e.geometry),u(e.material));break;case"LineLoop":i=new Tu(l(e.geometry),u(e.material));break;case"LineSegments":i=new Su(l(e.geometry),u(e.material));break;case"PointCloud":case"Points":i=new Ru(l(e.geometry),u(e.material));break;case"Sprite":i=new jl(u(e.material));break;case"Group":i=new vl;break;case"Bone":i=new ru;break;default:i=new us}if(i.uuid=e.uuid,void 0!==e.name&&(i.name=e.name),void 0!==e.matrix?(i.matrix.fromArray(e.matrix),void 0!==e.matrixAutoUpdate&&(i.matrixAutoUpdate=e.matrixAutoUpdate),i.matrixAutoUpdate&&i.matrix.decompose(i.position,i.quaternion,i.scale)):(void 0!==e.position&&i.position.fromArray(e.position),void 0!==e.rotation&&i.rotation.fromArray(e.rotation),void 0!==e.quaternion&&i.quaternion.fromArray(e.quaternion),void 0!==e.scale&&i.scale.fromArray(e.scale)),void 0!==e.castShadow&&(i.castShadow=e.castShadow),void 0!==e.receiveShadow&&(i.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.bias&&(i.shadow.bias=e.shadow.bias),void 0!==e.shadow.normalBias&&(i.shadow.normalBias=e.shadow.normalBias),void 0!==e.shadow.radius&&(i.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&i.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera&&(i.shadow.camera=this.parseObject(e.shadow.camera))),void 0!==e.visible&&(i.visible=e.visible),void 0!==e.frustumCulled&&(i.frustumCulled=e.frustumCulled),void 0!==e.renderOrder&&(i.renderOrder=e.renderOrder),void 0!==e.userData&&(i.userData=e.userData),void 0!==e.layers&&(i.layers.mask=e.layers),void 0!==e.children){const a=e.children;for(let e=0;e<a.length;e++)i.add(this.parseObject(a[e],t,n,r,s))}if(void 0!==e.animations){const t=e.animations;for(let e=0;e<t.length;e++){const n=t[e];i.animations.push(s[n])}}if("LOD"===e.type){void 0!==e.autoUpdate&&(i.autoUpdate=e.autoUpdate);const t=e.levels;for(let e=0;e<t.length;e++){const n=t[e],r=i.getObjectByProperty("uuid",n.object);void 0!==r&&i.addLevel(r,n.distance)}}return i}bindSkeletons(e,t){0!==Object.keys(t).length&&e.traverse((function(e){if(!0===e.isSkinnedMesh&&void 0!==e.skeleton){const n=t[e.skeleton];void 0===n?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",e.skeleton):e.bind(n,e.bindMatrix)}}))}setTexturePath(e){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(e)}}const dd={UVMapping:se,CubeReflectionMapping:ie,CubeRefractionMapping:ae,EquirectangularReflectionMapping:oe,EquirectangularRefractionMapping:le,CubeUVReflectionMapping:ue,CubeUVRefractionMapping:ce},pd={RepeatWrapping:he,ClampToEdgeWrapping:de,MirroredRepeatWrapping:pe},fd={NearestFilter:fe,NearestMipmapNearestFilter:me,NearestMipmapLinearFilter:ye,LinearFilter:ve,LinearMipmapNearestFilter:be,LinearMipmapLinearFilter:_e};class md extends Rh{constructor(e){super(e),"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,r){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,i=Ch.get(e);if(void 0!==i)return s.manager.itemStart(e),setTimeout((function(){t&&t(i),s.manager.itemEnd(e)}),0),i;const a={};a.credentials="anonymous"===this.crossOrigin?"same-origin":"include",a.headers=this.requestHeader,fetch(e,a).then((function(e){return e.blob()})).then((function(e){return createImageBitmap(e,Object.assign(s.options,{colorSpaceConversion:"none"}))})).then((function(n){Ch.add(e,n),t&&t(n),s.manager.itemEnd(e)})).catch((function(t){r&&r(t),s.manager.itemError(e),s.manager.itemEnd(e)})),s.manager.itemStart(e)}}md.prototype.isImageBitmapLoader=!0;class gd{constructor(){this.type="ShapePath",this.color=new Is,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Uh,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,r){return this.currentPath.quadraticCurveTo(e,t,n,r),this}bezierCurveTo(e,t,n,r,s,i){return this.currentPath.bezierCurveTo(e,t,n,r,s,i),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e,t){function n(e){const t=[];for(let n=0,r=e.length;n<r;n++){const r=e[n],s=new zh;s.curves=r.curves,t.push(s)}return t}function r(e,t){const n=t.length;let r=!1;for(let s=n-1,i=0;i<n;s=i++){let n=t[s],a=t[i],o=a.x-n.x,l=a.y-n.y;if(Math.abs(l)>Number.EPSILON){if(l<0&&(n=t[i],o=-o,a=t[s],l=-l),e.y<n.y||e.y>a.y)continue;if(e.y===n.y){if(e.x===n.x)return!0}else{const t=l*(e.x-n.x)-o*(e.y-n.y);if(0===t)return!0;if(t<0)continue;r=!r}}else{if(e.y!==n.y)continue;if(a.x<=e.x&&e.x<=n.x||n.x<=e.x&&e.x<=a.x)return!0}}return r}const s=Pc.isClockWise,i=this.subPaths;if(0===i.length)return[];if(!0===t)return n(i);let a,o,l;const u=[];if(1===i.length)return o=i[0],l=new zh,l.curves=o.curves,u.push(l),u;let c=!s(i[0].getPoints());c=e?!c:c;const h=[],d=[];let p,f,m=[],g=0;d[g]=void 0,m[g]=[];for(let t=0,n=i.length;t<n;t++)o=i[t],p=o.getPoints(),a=s(p),a=e?!a:a,a?(!c&&d[g]&&g++,d[g]={s:new zh,p},d[g].s.curves=o.curves,c&&g++,m[g]=[]):m[g].push({h:o,p:p[0]});if(!d[0])return n(i);if(d.length>1){let e=!1;const t=[];for(let e=0,t=d.length;e<t;e++)h[e]=[];for(let n=0,s=d.length;n<s;n++){const s=m[n];for(let i=0;i<s.length;i++){const a=s[i];let o=!0;for(let s=0;s<d.length;s++)r(a.p,d[s].p)&&(n!==s&&t.push({froms:n,tos:s,hole:i}),o?(o=!1,h[s].push(a)):e=!0);o&&h[n].push(a)}}t.length>0&&(e||(m=h))}for(let e=0,t=d.length;e<t;e++){l=d[e].s,u.push(l),f=m[e];for(let e=0,t=f.length;e<t;e++)l.holes.push(f[e].h)}return u}}class yd{constructor(e){this.type="Font",this.data=e}generateShapes(e,t=100){const n=[],r=function(e,t,n){const r=Array.from(e),s=t/n.resolution,i=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*s,a=[];let o=0,l=0;for(let e=0;e<r.length;e++){const t=r[e];if("\n"===t)o=0,l-=i;else{const e=xd(t,s,o,l,n);o+=e.offsetX,a.push(e.path)}}return a}(e,t,this.data);for(let e=0,t=r.length;e<t;e++)Array.prototype.push.apply(n,r[e].toShapes());return n}}function xd(e,t,n,r,s){const i=s.glyphs[e]||s.glyphs["?"];if(!i)return void console.error('THREE.Font: character "'+e+'" does not exists in font family '+s.familyName+".");const a=new gd;let o,l,u,c,h,d,p,f;if(i.o){const e=i._cachedOutline||(i._cachedOutline=i.o.split(" "));for(let s=0,i=e.length;s<i;)switch(e[s++]){case"m":o=e[s++]*t+n,l=e[s++]*t+r,a.moveTo(o,l);break;case"l":o=e[s++]*t+n,l=e[s++]*t+r,a.lineTo(o,l);break;case"q":u=e[s++]*t+n,c=e[s++]*t+r,h=e[s++]*t+n,d=e[s++]*t+r,a.quadraticCurveTo(h,d,u,c);break;case"b":u=e[s++]*t+n,c=e[s++]*t+r,h=e[s++]*t+n,d=e[s++]*t+r,p=e[s++]*t+n,f=e[s++]*t+r,a.bezierCurveTo(h,d,p,f,u,c)}}return{offsetX:i.ha*t,path:a}}yd.prototype.isFont=!0;class vd extends Rh{constructor(e){super(e)}load(e,t,n,r){const s=this,i=new Nh(this.manager);i.setPath(this.path),i.setRequestHeader(this.requestHeader),i.setWithCredentials(s.withCredentials),i.load(e,(function(e){let n;try{n=JSON.parse(e)}catch(t){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),n=JSON.parse(e.substring(65,e.length-2))}const r=s.parse(n);t&&t(r)}),n,r)}parse(e){return new yd(e)}}let bd;const wd={getContext:function(){return void 0===bd&&(bd=new(window.AudioContext||window.webkitAudioContext)),bd},setContext:function(e){bd=e}};class _d extends Rh{constructor(e){super(e)}load(e,t,n,r){const s=this,i=new Nh(this.manager);i.setResponseType("arraybuffer"),i.setPath(this.path),i.setRequestHeader(this.requestHeader),i.setWithCredentials(this.withCredentials),i.load(e,(function(n){try{const e=n.slice(0);wd.getContext().decodeAudioData(e,(function(e){t(e)}))}catch(t){r?r(t):console.error(t),s.manager.itemError(e)}}),n,r)}}class Sd extends ad{constructor(e,t,n=1){super(void 0,n);const r=(new Is).set(e),s=(new Is).set(t),i=new or(r.r,r.g,r.b),a=new or(s.r,s.g,s.b),o=Math.sqrt(Math.PI),l=o*Math.sqrt(.75);this.sh.coefficients[0].copy(i).add(a).multiplyScalar(o),this.sh.coefficients[1].copy(i).sub(a).multiplyScalar(l)}}Sd.prototype.isHemisphereLightProbe=!0;class Td extends ad{constructor(e,t=1){super(void 0,t);const n=(new Is).set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}Td.prototype.isAmbientLightProbe=!0;const Ed=new $r,Md=new $r;class Cd{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Mi,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Mi,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep;const n=e.projectionMatrix.clone(),r=t.eyeSep/2,s=r*t.near/t.focus,i=t.near*Math.tan(Bn*t.fov*.5)/t.zoom;let a,o;Md.elements[12]=-r,Ed.elements[12]=r,a=-i*t.aspect+s,o=i*t.aspect+s,n.elements[0]=2*t.near/(o-a),n.elements[8]=(o+a)/(o-a),this.cameraL.projectionMatrix.copy(n),a=-i*t.aspect-s,o=i*t.aspect-s,n.elements[0]=2*t.near/(o-a),n.elements[8]=(o+a)/(o-a),this.cameraR.projectionMatrix.copy(n)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(Md),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(Ed)}}class Ad{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Id(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=Id();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function Id(){return("undefined"==typeof performance?Date:performance).now()}const Rd=new or,kd=new ar,Nd=new or,Ld=new or;class Dd extends us{constructor(){super(),this.type="AudioListener",this.context=wd.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Ad}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Rd,kd,Nd),Ld.set(0,0,-1).applyQuaternion(kd),t.positionX){const e=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(Rd.x,e),t.positionY.linearRampToValueAtTime(Rd.y,e),t.positionZ.linearRampToValueAtTime(Rd.z,e),t.forwardX.linearRampToValueAtTime(Ld.x,e),t.forwardY.linearRampToValueAtTime(Ld.y,e),t.forwardZ.linearRampToValueAtTime(Ld.z,e),t.upX.linearRampToValueAtTime(n.x,e),t.upY.linearRampToValueAtTime(n.y,e),t.upZ.linearRampToValueAtTime(n.z,e)}else t.setPosition(Rd.x,Rd.y,Rd.z),t.setOrientation(Ld.x,Ld.y,Ld.z,n.x,n.y,n.z)}}class Od extends us{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),!0===this._connected?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(!1!==this.hasPlaybackControl)return this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(!1!==this.hasPlaybackControl)return this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const Pd=new or,Fd=new ar,$d=new or,Bd=new or;class Ud extends Od{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(Pd,Fd,$d),Bd.set(0,0,1).applyQuaternion(Fd);const t=this.panner;if(t.positionX){const e=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(Pd.x,e),t.positionY.linearRampToValueAtTime(Pd.y,e),t.positionZ.linearRampToValueAtTime(Pd.z,e),t.orientationX.linearRampToValueAtTime(Bd.x,e),t.orientationY.linearRampToValueAtTime(Bd.y,e),t.orientationZ.linearRampToValueAtTime(Bd.z,e)}else t.setPosition(Pd.x,Pd.y,Pd.z),t.setOrientation(Bd.x,Bd.y,Bd.z)}}class zd{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class Vd{constructor(e,t,n){let r,s,i;switch(this.binding=e,this.valueSize=n,t){case"quaternion":r=this._slerp,s=this._slerpAdditive,i=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case"string":case"bool":r=this._select,s=this._select,i=this._setAdditiveIdentityOther,this.buffer=new Array(5*n);break;default:r=this._lerp,s=this._lerpAdditive,i=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=r,this._mixBufferRegionAdditive=s,this._setIdentity=i,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,r=this.valueSize,s=e*r+r;let i=this.cumulativeWeight;if(0===i){for(let e=0;e!==r;++e)n[s+e]=n[e];i=t}else{i+=t;const e=t/i;this._mixBufferRegion(n,s,0,e,r)}this.cumulativeWeight=i}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,r=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(t,r,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,r=e*t+t,s=this.cumulativeWeight,i=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const e=t*this._origIndex;this._mixBufferRegion(n,r,e,1-s,t)}i>0&&this._mixBufferRegionAdditive(n,r,this._addIndex*t,1,t);for(let e=t,s=t+t;e!==s;++e)if(n[e]!==n[e+t]){a.setValue(n,r);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,r=n*this._origIndex;e.getValue(t,r);for(let e=n,s=r;e!==s;++e)t[e]=t[r+e%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=3*this.valueSize;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,r,s){if(r>=.5)for(let r=0;r!==s;++r)e[t+r]=e[n+r]}_slerp(e,t,n,r){ar.slerpFlat(e,t,e,t,e,n,r)}_slerpAdditive(e,t,n,r,s){const i=this._workIndex*s;ar.multiplyQuaternionsFlat(e,i,e,t,e,n),ar.slerpFlat(e,t,e,t,e,i,r)}_lerp(e,t,n,r,s){const i=1-r;for(let a=0;a!==s;++a){const s=t+a;e[s]=e[s]*i+e[n+a]*r}}_lerpAdditive(e,t,n,r,s){for(let i=0;i!==s;++i){const s=t+i;e[s]=e[s]+e[n+i]*r}}}const Gd="\\[\\]\\.:\\/",Wd=new RegExp("["+Gd+"]","g"),Hd="[^"+Gd+"]",jd="[^"+Gd.replace("\\.","")+"]",Xd=/((?:WC+[\/:])*)/.source.replace("WC",Hd),qd=/(WCOD+)?/.source.replace("WCOD",jd),Kd=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Hd),Yd=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Hd),Jd=new RegExp("^"+Xd+qd+Kd+Yd+"$"),Zd=["material","materials","bones"];class Qd{constructor(e,t,n){this.path=t,this.parsedPath=n||Qd.parseTrackName(t),this.node=Qd.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new Qd.Composite(e,t,n):new Qd(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(Wd,"")}static parseTrackName(e){const t=Jd.exec(e);if(!t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},r=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==r&&-1!==r){const e=n.nodeName.substring(r+1);-1!==Zd.indexOf(e)&&(n.nodeName=n.nodeName.substring(0,r),n.objectName=e)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(!t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(void 0!==n)return n}if(e.children){const n=function(e){for(let r=0;r<e.length;r++){const s=e[r];if(s.name===t||s.uuid===t)return s;const i=n(s.children);if(i)return i}return null},r=n(e.children);if(r)return r}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let r=0,s=n.length;r!==s;++r)e[t++]=n[r]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let r=0,s=n.length;r!==s;++r)n[r]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let r=0,s=n.length;r!==s;++r)n[r]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let r=0,s=n.length;r!==s;++r)n[r]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,r=t.propertyName;let s=t.propertyIndex;if(e||(e=Qd.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(n){let r=t.objectIndex;switch(n){case"materials":if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);e=e.material.materials;break;case"bones":if(!e.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);e=e.skeleton.bones;for(let t=0;t<e.length;t++)if(e[t].name===r){r=t;break}break;default:if(void 0===e[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);e=e[n]}if(void 0!==r){if(void 0===e[r])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);e=e[r]}}const i=e[r];if(void 0===i){const n=t.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+r+" but it wasn't found.",e)}let a=this.Versioning.None;this.targetObject=e,void 0!==e.needsUpdate?a=this.Versioning.NeedsUpdate:void 0!==e.matrixWorldNeedsUpdate&&(a=this.Versioning.MatrixWorldNeedsUpdate);let o=this.BindingType.Direct;if(void 0!==s){if("morphTargetInfluences"===r){if(!e.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!e.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!e.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==e.morphTargetDictionary[s]&&(s=e.morphTargetDictionary[s])}o=this.BindingType.ArrayElement,this.resolvedProperty=i,this.propertyIndex=s}else void 0!==i.fromArray&&void 0!==i.toArray?(o=this.BindingType.HasFromToArray,this.resolvedProperty=i):Array.isArray(i)?(o=this.BindingType.EntireArray,this.resolvedProperty=i):this.propertyName=r;this.getValue=this.GetterByBindingType[o],this.setValue=this.SetterByBindingTypeAndVersioning[o][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Qd.Composite=class{constructor(e,t,n){const r=n||Qd.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,r)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,r=this._bindings[n];void 0!==r&&r.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let r=this._targetGroup.nCachedObjects_,s=n.length;r!==s;++r)n[r].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}},Qd.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Qd.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},Qd.prototype.GetterByBindingType=[Qd.prototype._getValue_direct,Qd.prototype._getValue_array,Qd.prototype._getValue_arrayElement,Qd.prototype._getValue_toArray],Qd.prototype.SetterByBindingTypeAndVersioning=[[Qd.prototype._setValue_direct,Qd.prototype._setValue_direct_setNeedsUpdate,Qd.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Qd.prototype._setValue_array,Qd.prototype._setValue_array_setNeedsUpdate,Qd.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Qd.prototype._setValue_arrayElement,Qd.prototype._setValue_arrayElement_setNeedsUpdate,Qd.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Qd.prototype._setValue_fromArray,Qd.prototype._setValue_fromArray_setNeedsUpdate,Qd.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class ep{constructor(){this.uuid=zn(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let t=0,n=arguments.length;t!==n;++t)e[arguments[t].uuid]=t;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,r=this._parsedPaths,s=this._bindings,i=s.length;let a,o=e.length,l=this.nCachedObjects_;for(let u=0,c=arguments.length;u!==c;++u){const c=arguments[u],h=c.uuid;let d=t[h];if(void 0===d){d=o++,t[h]=d,e.push(c);for(let e=0,t=i;e!==t;++e)s[e].push(new Qd(c,n[e],r[e]))}else if(d<l){a=e[d];const o=--l,u=e[o];t[u.uuid]=d,e[d]=u,t[h]=o,e[o]=c;for(let e=0,t=i;e!==t;++e){const t=s[e],i=t[o];let a=t[d];t[d]=i,void 0===a&&(a=new Qd(c,n[e],r[e])),t[o]=a}}else e[d]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,r=n.length;let s=this.nCachedObjects_;for(let i=0,a=arguments.length;i!==a;++i){const a=arguments[i],o=a.uuid,l=t[o];if(void 0!==l&&l>=s){const i=s++,u=e[i];t[u.uuid]=l,e[l]=u,t[o]=i,e[i]=a;for(let e=0,t=r;e!==t;++e){const t=n[e],r=t[i],s=t[l];t[l]=r,t[i]=s}}}this.nCachedObjects_=s}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,r=n.length;let s=this.nCachedObjects_,i=e.length;for(let a=0,o=arguments.length;a!==o;++a){const o=arguments[a].uuid,l=t[o];if(void 0!==l)if(delete t[o],l<s){const a=--s,o=e[a],u=--i,c=e[u];t[o.uuid]=l,e[l]=o,t[c.uuid]=a,e[a]=c,e.pop();for(let e=0,t=r;e!==t;++e){const t=n[e],r=t[a],s=t[u];t[l]=r,t[a]=s,t.pop()}}else{const s=--i,a=e[s];s>0&&(t[a.uuid]=l),e[l]=a,e.pop();for(let e=0,t=r;e!==t;++e){const t=n[e];t[l]=t[s],t.pop()}}}this.nCachedObjects_=s}subscribe_(e,t){const n=this._bindingsIndicesByPath;let r=n[e];const s=this._bindings;if(void 0!==r)return s[r];const i=this._paths,a=this._parsedPaths,o=this._objects,l=o.length,u=this.nCachedObjects_,c=new Array(l);r=s.length,n[e]=r,i.push(e),a.push(t),s.push(c);for(let n=u,r=o.length;n!==r;++n){const r=o[n];c[n]=new Qd(r,e,t)}return c}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(void 0!==n){const r=this._paths,s=this._parsedPaths,i=this._bindings,a=i.length-1,o=i[a];t[e[a]]=n,i[n]=o,i.pop(),s[n]=s[a],s.pop(),r[n]=r[a],r.pop()}}}ep.prototype.isAnimationObjectGroup=!0;class tp{constructor(e,t,n=null,r=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=r;const s=t.tracks,i=s.length,a=new Array(i),o={endingStart:Vt,endingEnd:Vt};for(let e=0;e!==i;++e){const t=s[e].createInterpolant(null);a[e]=t,t.settings=o}this._interpolantSettings=o,this._interpolants=a,this._propertyBindings=new Array(i),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Ft,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const n=this._clip.duration,r=e._clip.duration,s=r/n,i=n/r;e.warp(1,s,t),this.warp(i,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const r=this._mixer,s=r.time,i=this.timeScale;let a=this._timeScaleInterpolant;null===a&&(a=r._lendControlInterpolant(),this._timeScaleInterpolant=a);const o=a.parameterPositions,l=a.sampleValues;return o[0]=s,o[1]=s+n,l[0]=e/i,l[1]=t/i,this}stopWarping(){const e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,r){if(!this.enabled)return void this._updateWeight(e);const s=this._startTime;if(null!==s){const r=(e-s)*n;if(r<0||0===n)return;this._startTime=null,t=n*r}t*=this._updateTimeScale(e);const i=this._updateTime(t),a=this._updateWeight(e);if(a>0){const e=this._interpolants,t=this._propertyBindings;if(this.blendMode===jt)for(let n=0,r=e.length;n!==r;++n)e[n].evaluate(i),t[n].accumulateAdditive(a);else for(let n=0,s=e.length;n!==s;++n)e[n].evaluate(i),t[n].accumulate(r,a)}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(null!==n){const r=n.evaluate(e)[0];t*=r,e>n.parameterPositions[1]&&(this.stopFading(),0===r&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;null!==n&&(t*=n.evaluate(e)[0],e>n.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t))}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let r=this.time+e,s=this._loopCount;const i=n===$t;if(0===e)return-1===s?r:i&&1==(1&s)?t-r:r;if(n===Pt){-1===s&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(r>=t)r=t;else{if(!(r<0)){this.time=r;break e}r=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(-1===s&&(e>=0?(s=0,this._setEndings(!0,0===this.repetitions,i)):this._setEndings(0===this.repetitions,!0,i)),r>=t||r<0){const n=Math.floor(r/t);r-=t*n,s+=Math.abs(n);const a=this.repetitions-s;if(a<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=e>0?t:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(1===a){const t=e<0;this._setEndings(t,!t,i)}else this._setEndings(!1,!1,i);this._loopCount=s,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:n})}}else this.time=r;if(i&&1==(1&s))return t-r}return r}_setEndings(e,t,n){const r=this._interpolantSettings;n?(r.endingStart=Gt,r.endingEnd=Gt):(r.endingStart=e?this.zeroSlopeAtStart?Gt:Vt:Wt,r.endingEnd=t?this.zeroSlopeAtEnd?Gt:Vt:Wt)}_scheduleFading(e,t,n){const r=this._mixer,s=r.time;let i=this._weightInterpolant;null===i&&(i=r._lendControlInterpolant(),this._weightInterpolant=i);const a=i.parameterPositions,o=i.sampleValues;return a[0]=s,o[0]=t,a[1]=s+e,o[1]=n,this}}class np extends Pn{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,r=e._clip.tracks,s=r.length,i=e._propertyBindings,a=e._interpolants,o=n.uuid,l=this._bindingsByRootAndName;let u=l[o];void 0===u&&(u={},l[o]=u);for(let e=0;e!==s;++e){const s=r[e],l=s.name;let c=u[l];if(void 0!==c)i[e]=c;else{if(c=i[e],void 0!==c){null===c._cacheIndex&&(++c.referenceCount,this._addInactiveBinding(c,o,l));continue}const r=t&&t._propertyBindings[e].binding.parsedPath;c=new Vd(Qd.create(n,l,r),s.ValueTypeName,s.getValueSize()),++c.referenceCount,this._addInactiveBinding(c,o,l),i[e]=c}a[e].resultBuffer=c.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(null===e._cacheIndex){const t=(e._localRoot||this._root).uuid,n=e._clip.uuid,r=this._actionsByClip[n];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,n,t)}const t=e._propertyBindings;for(let e=0,n=t.length;e!==n;++e){const n=t[e];0==n.useCount++&&(this._lendBinding(n),n.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let e=0,n=t.length;e!==n;++e){const n=t[e];0==--n.useCount&&(n.restoreOriginalState(),this._takeBackBinding(n))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return null!==t&&t<this._nActiveActions}_addInactiveAction(e,t,n){const r=this._actions,s=this._actionsByClip;let i=s[t];if(void 0===i)i={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=i;else{const t=i.knownActions;e._byClipCacheIndex=t.length,t.push(e)}e._cacheIndex=r.length,r.push(e),i.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],r=e._cacheIndex;n._cacheIndex=r,t[r]=n,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,i=this._actionsByClip,a=i[s],o=a.knownActions,l=o[o.length-1],u=e._byClipCacheIndex;l._byClipCacheIndex=u,o[u]=l,o.pop(),e._byClipCacheIndex=null,delete a.actionByRoot[(e._localRoot||this._root).uuid],0===o.length&&delete i[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let e=0,n=t.length;e!==n;++e){const n=t[e];0==--n.referenceCount&&this._removeInactiveBinding(n)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,r=this._nActiveActions++,s=t[r];e._cacheIndex=r,t[r]=e,s._cacheIndex=n,t[n]=s}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,r=--this._nActiveActions,s=t[r];e._cacheIndex=r,t[r]=e,s._cacheIndex=n,t[n]=s}_addInactiveBinding(e,t,n){const r=this._bindingsByRootAndName,s=this._bindings;let i=r[t];void 0===i&&(i={},r[t]=i),i[n]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,r=n.rootNode.uuid,s=n.path,i=this._bindingsByRootAndName,a=i[r],o=t[t.length-1],l=e._cacheIndex;o._cacheIndex=l,t[l]=o,t.pop(),delete a[s],0===Object.keys(a).length&&delete i[r]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,r=this._nActiveBindings++,s=t[r];e._cacheIndex=r,t[r]=e,s._cacheIndex=n,t[n]=s}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,r=--this._nActiveBindings,s=t[r];e._cacheIndex=r,t[r]=e,s._cacheIndex=n,t[n]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return void 0===n&&(n=new mh(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,r=--this._nActiveControlInterpolants,s=t[r];e.__cacheIndex=r,t[r]=e,s.__cacheIndex=n,t[n]=s}clipAction(e,t,n){const r=t||this._root,s=r.uuid;let i="string"==typeof e?Eh.findByName(r,e):e;const a=null!==i?i.uuid:e,o=this._actionsByClip[a];let l=null;if(void 0===n&&(n=null!==i?i.blendMode:Ht),void 0!==o){const e=o.actionByRoot[s];if(void 0!==e&&e.blendMode===n)return e;l=o.knownActions[0],null===i&&(i=l._clip)}if(null===i)return null;const u=new tp(this,i,t,n);return this._bindAction(u,l),this._addInactiveAction(u,a,s),u}existingAction(e,t){const n=t||this._root,r=n.uuid,s="string"==typeof e?Eh.findByName(n,e):e,i=s?s.uuid:e,a=this._actionsByClip[i];return void 0!==a&&a.actionByRoot[r]||null}stopAllAction(){const e=this._actions;for(let t=this._nActiveActions-1;t>=0;--t)e[t].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,r=this.time+=e,s=Math.sign(e),i=this._accuIndex^=1;for(let a=0;a!==n;++a)t[a]._update(r,e,s,i);const a=this._bindings,o=this._nActiveBindings;for(let e=0;e!==o;++e)a[e].apply(i);return this}setTime(e){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,r=this._actionsByClip,s=r[n];if(void 0!==s){const e=s.knownActions;for(let n=0,r=e.length;n!==r;++n){const r=e[n];this._deactivateAction(r);const s=r._cacheIndex,i=t[t.length-1];r._cacheIndex=null,r._byClipCacheIndex=null,i._cacheIndex=s,t[s]=i,t.pop(),this._removeInactiveBindingsForAction(r)}delete r[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const e in n){const r=n[e].actionByRoot[t];void 0!==r&&(this._deactivateAction(r),this._removeInactiveAction(r))}const r=this._bindingsByRootAndName[t];if(void 0!==r)for(const e in r){const t=r[e];t.restoreOriginalState(),this._removeInactiveBinding(t)}}uncacheAction(e,t){const n=this.existingAction(e,t);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}}np.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class rp{constructor(e){"string"==typeof e&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}clone(){return new rp(void 0===this.value.clone?this.value:this.value.clone())}}class sp extends Il{constructor(e,t,n=1){super(e,t),this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}sp.prototype.isInstancedInterleavedBuffer=!0;class ip{constructor(e,t,n,r,s){this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=r,this.count=s,this.version=0}set needsUpdate(e){!0===e&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}ip.prototype.isGLBufferAttribute=!0;class ap{constructor(e,t,n=0,r=1/0){this.ray=new Fr(e,t),this.near=n,this.far=r,this.camera=null,this.layers=new Kr,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t&&t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t&&t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!1,n=[]){return lp(e,this,n,t),n.sort(op),n}intersectObjects(e,t=!1,n=[]){for(let r=0,s=e.length;r<s;r++)lp(e[r],this,n,t);return n.sort(op),n}}function op(e,t){return e.distance-t.distance}function lp(e,t,n,r){if(e.layers.test(t.layers)&&e.raycast(t,n),!0===r){const r=e.children;for(let e=0,s=r.length;e<s;e++)lp(r[e],t,n,!0)}}class up{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){const e=1e-6;return this.phi=Math.max(e,Math.min(Math.PI-e,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(Vn(t/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}class cp{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return(new this.constructor).copy(this)}}const hp=new Kn;class dp{constructor(e=new Kn(1/0,1/0),t=new Kn(-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=hp.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return hp.copy(e).clamp(this.min,this.max).sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}dp.prototype.isBox2=!0;const pp=new or,fp=new or;class mp{constructor(e=new or,t=new or){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){pp.subVectors(e,this.start),fp.subVectors(this.end,this.start);const n=fp.dot(fp);let r=fp.dot(pp)/n;return t&&(r=Vn(r,0,1)),r}closestPointToPoint(e,t,n){const r=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(r).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}class gp extends us{constructor(e){super(),this.material=e,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}}gp.prototype.isImmediateRenderObject=!0;const yp=new or;class xp extends us{constructor(e,t){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;const n=new ei,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let e=0,t=1,n=32;e<n;e++,t++){const s=e/n*Math.PI*2,i=t/n*Math.PI*2;r.push(Math.cos(s),Math.sin(s),1,Math.cos(i),Math.sin(i),1)}n.setAttribute("position",new Vs(r,3));const s=new fu({fog:!1,toneMapped:!1});this.cone=new Su(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),yp.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(yp),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const vp=new or,bp=new $r,wp=new $r;class _p extends Su{constructor(e){const t=Sp(e),n=new ei,r=[],s=[],i=new Is(0,0,1),a=new Is(0,1,0);for(let e=0;e<t.length;e++){const n=t[e];n.parent&&n.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),s.push(i.r,i.g,i.b),s.push(a.r,a.g,a.b))}n.setAttribute("position",new Vs(r,3)),n.setAttribute("color",new Vs(s,3)),super(n,new fu({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,r=n.getAttribute("position");wp.copy(this.root.matrixWorld).invert();for(let e=0,n=0;e<t.length;e++){const s=t[e];s.parent&&s.parent.isBone&&(bp.multiplyMatrices(wp,s.matrixWorld),vp.setFromMatrixPosition(bp),r.setXYZ(n,vp.x,vp.y,vp.z),bp.multiplyMatrices(wp,s.parent.matrixWorld),vp.setFromMatrixPosition(bp),r.setXYZ(n+1,vp.x,vp.y,vp.z),n+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}function Sp(e){const t=[];e&&e.isBone&&t.push(e);for(let n=0;n<e.children.length;n++)t.push.apply(t,Sp(e.children[n]));return t}class Tp extends xi{constructor(e,t,n){super(new Xc(t,4,2),new Rs({wireframe:!0,fog:!1,toneMapped:!1})),this.light=e,this.light.updateMatrixWorld(),this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const Ep=new or,Mp=new Is,Cp=new Is;class Ap extends us{constructor(e,t,n){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;const r=new Gc(t);r.rotateY(.5*Math.PI),this.material=new Rs({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);const s=r.getAttribute("position"),i=new Float32Array(3*s.count);r.setAttribute("color",new Ls(i,3)),this.add(new xi(r,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");Mp.copy(this.light.color),Cp.copy(this.light.groundColor);for(let e=0,n=t.count;e<n;e++){const r=e<n/2?Mp:Cp;t.setXYZ(e,r.r,r.g,r.b)}t.needsUpdate=!0}e.lookAt(Ep.setFromMatrixPosition(this.light.matrixWorld).negate())}}class Ip extends Su{constructor(e=10,t=10,n=4473924,r=8947848){n=new Is(n),r=new Is(r);const s=t/2,i=e/t,a=e/2,o=[],l=[];for(let e=0,u=0,c=-a;e<=t;e++,c+=i){o.push(-a,0,c,a,0,c),o.push(c,0,-a,c,0,a);const t=e===s?n:r;t.toArray(l,u),u+=3,t.toArray(l,u),u+=3,t.toArray(l,u),u+=3,t.toArray(l,u),u+=3}const u=new ei;u.setAttribute("position",new Vs(o,3)),u.setAttribute("color",new Vs(l,3)),super(u,new fu({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}}class Rp extends Su{constructor(e=10,t=16,n=8,r=64,s=4473924,i=8947848){s=new Is(s),i=new Is(i);const a=[],o=[];for(let n=0;n<=t;n++){const r=n/t*(2*Math.PI),l=Math.sin(r)*e,u=Math.cos(r)*e;a.push(0,0,0),a.push(l,0,u);const c=1&n?s:i;o.push(c.r,c.g,c.b),o.push(c.r,c.g,c.b)}for(let t=0;t<=n;t++){const l=1&t?s:i,u=e-e/n*t;for(let e=0;e<r;e++){let t=e/r*(2*Math.PI),n=Math.sin(t)*u,s=Math.cos(t)*u;a.push(n,0,s),o.push(l.r,l.g,l.b),t=(e+1)/r*(2*Math.PI),n=Math.sin(t)*u,s=Math.cos(t)*u,a.push(n,0,s),o.push(l.r,l.g,l.b)}}const l=new ei;l.setAttribute("position",new Vs(a,3)),l.setAttribute("color",new Vs(o,3)),super(l,new fu({vertexColors:!0,toneMapped:!1})),this.type="PolarGridHelper"}}const kp=new or,Np=new or,Lp=new or;class Dp extends us{constructor(e,t,n){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,void 0===t&&(t=1);let r=new ei;r.setAttribute("position",new Vs([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new fu({fog:!1,toneMapped:!1});this.lightPlane=new bu(r,s),this.add(this.lightPlane),r=new ei,r.setAttribute("position",new Vs([0,0,0,0,0,1],3)),this.targetLine=new bu(r,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){kp.setFromMatrixPosition(this.light.matrixWorld),Np.setFromMatrixPosition(this.light.target.matrixWorld),Lp.subVectors(Np,kp),this.lightPlane.lookAt(Np),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Np),this.targetLine.scale.z=Lp.length()}}const Op=new or,Pp=new Ei;class Fp extends Su{constructor(e){const t=new ei,n=new fu({color:16777215,vertexColors:!0,toneMapped:!1}),r=[],s=[],i={},a=new Is(16755200),o=new Is(16711680),l=new Is(43775),u=new Is(16777215),c=new Is(3355443);function h(e,t,n){d(e,n),d(t,n)}function d(e,t){r.push(0,0,0),s.push(t.r,t.g,t.b),void 0===i[e]&&(i[e]=[]),i[e].push(r.length/3-1)}h("n1","n2",a),h("n2","n4",a),h("n4","n3",a),h("n3","n1",a),h("f1","f2",a),h("f2","f4",a),h("f4","f3",a),h("f3","f1",a),h("n1","f1",a),h("n2","f2",a),h("n3","f3",a),h("n4","f4",a),h("p","n1",o),h("p","n2",o),h("p","n3",o),h("p","n4",o),h("u1","u2",l),h("u2","u3",l),h("u3","u1",l),h("c","t",u),h("p","c",c),h("cn1","cn2",c),h("cn3","cn4",c),h("cf1","cf2",c),h("cf3","cf4",c),t.setAttribute("position",new Vs(r,3)),t.setAttribute("color",new Vs(s,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=i,this.update()}update(){const e=this.geometry,t=this.pointMap;Pp.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),$p("c",t,e,Pp,0,0,-1),$p("t",t,e,Pp,0,0,1),$p("n1",t,e,Pp,-1,-1,-1),$p("n2",t,e,Pp,1,-1,-1),$p("n3",t,e,Pp,-1,1,-1),$p("n4",t,e,Pp,1,1,-1),$p("f1",t,e,Pp,-1,-1,1),$p("f2",t,e,Pp,1,-1,1),$p("f3",t,e,Pp,-1,1,1),$p("f4",t,e,Pp,1,1,1),$p("u1",t,e,Pp,.7,1.1,-1),$p("u2",t,e,Pp,-.7,1.1,-1),$p("u3",t,e,Pp,0,2,-1),$p("cf1",t,e,Pp,-1,0,1),$p("cf2",t,e,Pp,1,0,1),$p("cf3",t,e,Pp,0,-1,1),$p("cf4",t,e,Pp,0,1,1),$p("cn1",t,e,Pp,-1,0,-1),$p("cn2",t,e,Pp,1,0,-1),$p("cn3",t,e,Pp,0,-1,-1),$p("cn4",t,e,Pp,0,1,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function $p(e,t,n,r,s,i,a){Op.set(s,i,a).unproject(r);const o=t[e];if(void 0!==o){const e=n.getAttribute("position");for(let t=0,n=o.length;t<n;t++)e.setXYZ(o[t],Op.x,Op.y,Op.z)}}const Bp=new cr;class Up extends Su{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(24),s=new ei;s.setIndex(new Ls(n,1)),s.setAttribute("position",new Ls(r,3)),super(s,new fu({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(void 0!==e&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&Bp.setFromObject(this.object),Bp.isEmpty())return;const t=Bp.min,n=Bp.max,r=this.geometry.attributes.position,s=r.array;s[0]=n.x,s[1]=n.y,s[2]=n.z,s[3]=t.x,s[4]=n.y,s[5]=n.z,s[6]=t.x,s[7]=t.y,s[8]=n.z,s[9]=n.x,s[10]=t.y,s[11]=n.z,s[12]=n.x,s[13]=n.y,s[14]=t.z,s[15]=t.x,s[16]=n.y,s[17]=t.z,s[18]=t.x,s[19]=t.y,s[20]=t.z,s[21]=n.x,s[22]=t.y,s[23]=t.z,r.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e){return Su.prototype.copy.call(this,e),this.object=e.object,this}}class zp extends Su{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new ei;r.setIndex(new Ls(n,1)),r.setAttribute("position",new Vs([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(r,new fu({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}}class Vp extends bu{constructor(e,t=1,n=16776960){const r=n,s=new ei;s.setAttribute("position",new Vs([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),s.computeBoundingSphere(),super(s,new fu({color:r,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const i=new ei;i.setAttribute("position",new Vs([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),i.computeBoundingSphere(),this.add(new xi(i,new Rs({color:r,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){let t=-this.plane.constant;Math.abs(t)<1e-8&&(t=1e-8),this.scale.set(.5*this.size,.5*this.size,t),this.children[0].material.side=t<0?m:f,this.lookAt(this.plane.normal),super.updateMatrixWorld(e)}}const Gp=new or;let Wp,Hp;class jp extends us{constructor(e=new or(0,0,1),t=new or(0,0,0),n=1,r=16776960,s=.2*n,i=.2*s){super(),this.type="ArrowHelper",void 0===Wp&&(Wp=new ei,Wp.setAttribute("position",new Vs([0,0,0,0,1,0],3)),Hp=new Fu(0,.5,1,5,1),Hp.translate(0,-.5,0)),this.position.copy(t),this.line=new bu(Wp,new fu({color:r,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new xi(Hp,new Rs({color:r,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,s,i)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{Gp.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(Gp,t)}}setLength(e,t=.2*e,n=.2*t){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}}class Xp extends Su{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=new ei;n.setAttribute("position",new Vs(t,3)),n.setAttribute("color",new Vs([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3)),super(n,new fu({vertexColors:!0,toneMapped:!1})),this.type="AxesHelper"}setColors(e,t,n){const r=new Is,s=this.geometry.attributes.color.array;return r.set(e),r.toArray(s,0),r.toArray(s,3),r.set(t),r.toArray(s,6),r.toArray(s,9),r.set(n),r.toArray(s,12),r.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}const qp=new Float32Array(1),Kp=new Int32Array(qp.buffer);class Yp{static toHalfFloat(e){qp[0]=e;const t=Kp[0];let n=t>>16&32768,r=t>>12&2047;const s=t>>23&255;return s<103?n:s>142?(n|=31744,n|=(255==s?0:1)&&8388607&t,n):s<113?(r|=2048,n|=(r>>114-s)+(r>>113-s&1),n):(n|=s-112<<10|r>>1,n+=1&r,n)}}const Jp=0,Zp=1,Qp=0,ef=1,tf=2;function nf(e){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),e}function rf(e=[]){return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),e.isMultiMaterial=!0,e.materials=e,e.clone=function(){return e.slice()},e}function sf(e,t){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new Ru(e,t)}function af(e){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new jl(e)}function of(e,t){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new Ru(e,t)}function lf(e){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new Eu(e)}function uf(e){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new Eu(e)}function cf(e){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new Eu(e)}function hf(e,t,n){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new or(e,t,n)}function df(e,t){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),new Ls(e,t).setUsage(Mn)}function pf(e,t){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new Ds(e,t)}function ff(e,t){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new Os(e,t)}function mf(e,t){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new Ps(e,t)}function gf(e,t){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new Fs(e,t)}function yf(e,t){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new $s(e,t)}function xf(e,t){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new Bs(e,t)}function vf(e,t){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new Us(e,t)}function bf(e,t){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new Vs(e,t)}function wf(e,t){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new Gs(e,t)}function _f(e){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new Xp(e)}function Sf(e,t){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new Up(e,t)}function Tf(e,t){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new Su(new Hu(e.geometry),new fu({color:void 0!==t?t:16777215}))}function Ef(e,t){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new Su(new Qc(e.geometry),new fu({color:void 0!==t?t:16777215}))}function Mf(e){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new Nh(e)}function Cf(e){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new Fh(e)}function Af(e,t,n){return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),new Ri(e,n)}function If(){console.error("THREE.CanvasRenderer has been removed")}function Rf(){console.error("THREE.JSONLoader has been removed.")}ju.create=function(e,t){return console.log("THREE.Curve.create() has been deprecated"),e.prototype=Object.create(ju.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e},Uh.prototype.fromPoints=function(e){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(e)},Ip.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},_p.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Rh.prototype.extractUrlBase=function(e){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),ld.extractUrlBase(e)},Rh.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},dp.prototype.center=function(e){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(e)},dp.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},dp.prototype.isIntersectionBox=function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},dp.prototype.size=function(e){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(e)},cr.prototype.center=function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},cr.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},cr.prototype.isIntersectionBox=function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},cr.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},cr.prototype.size=function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)},Ir.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Fi.prototype.setFromMatrix=function(e){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(e)},mp.prototype.center=function(e){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(e)},Yn.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},Yn.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},Yn.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},Yn.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},Yn.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},Yn.prototype.getInverse=function(e){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},$r.prototype.extractPosition=function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},$r.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},$r.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new or).setFromMatrixColumn(this,3)},$r.prototype.setRotationFromQuaternion=function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},$r.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},$r.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},$r.prototype.multiplyVector4=function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},$r.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},$r.prototype.rotateAxis=function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},$r.prototype.crossVector=function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},$r.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},$r.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},$r.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},$r.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},$r.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},$r.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},$r.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},$r.prototype.makeFrustum=function(e,t,n,r,s,i){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,r,n,s,i)},$r.prototype.getInverse=function(e){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},Di.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)},ar.prototype.multiplyVector3=function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},ar.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},Fr.prototype.isIntersectionBox=function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},Fr.prototype.isIntersectionPlane=function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},Fr.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},bs.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},bs.prototype.barycoordFromPoint=function(e,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(e,t)},bs.prototype.midpoint=function(e){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(e)},bs.prototypenormal=function(e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(e)},bs.prototype.plane=function(e){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(e)},bs.barycoordFromPoint=function(e,t,n,r,s){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),bs.getBarycoord(e,t,n,r,s)},bs.normal=function(e,t,n,r){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),bs.getNormal(e,t,n,r)},zh.prototype.extractAllPoints=function(e){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(e)},zh.prototype.extrude=function(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new Bc(this,e)},zh.prototype.makeGeometry=function(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new jc(this,e)},Kn.prototype.fromAttribute=function(e,t,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},Kn.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},Kn.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},or.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},or.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},or.prototype.getPositionFromMatrix=function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},or.prototype.getScaleFromMatrix=function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},or.prototype.getColumnFromMatrix=function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},or.prototype.applyProjection=function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},or.prototype.fromAttribute=function(e,t,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},or.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},or.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},nr.prototype.fromAttribute=function(e,t,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},nr.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},us.prototype.getChildByName=function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},us.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},us.prototype.translate=function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},us.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},us.prototype.applyMatrix=function(e){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(us.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),xi.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(xi.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),Xt},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),nu.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Mi.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==t&&(this.filmGauge=t),this.setFocalLength(e)},Object.defineProperties(Vh.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}}),Object.defineProperties(Ls.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===Mn},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(Mn)}}}),Ls.prototype.setDynamic=function(e){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?Mn:En),this},Ls.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},Ls.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},ei.prototype.addIndex=function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},ei.prototype.addAttribute=function(e,t){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),t&&t.isBufferAttribute||t&&t.isInterleavedBufferAttribute?"index"===e?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(e,t):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(e,new Ls(arguments[1],arguments[2])))},ei.prototype.addDrawCall=function(e,t,n){void 0!==n&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},ei.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},ei.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},ei.prototype.removeAttribute=function(e){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(e)},ei.prototype.applyMatrix=function(e){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(ei.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Il.prototype.setDynamic=function(e){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?Mn:En),this},Il.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},Bc.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},Bc.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},Bc.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},Al.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},rp.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(_s.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new Is}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=e===y}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=e}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}}),Object.defineProperties(Ti.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}}),Tl.prototype.clearTarget=function(e,t,n,r){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(e),this.clear(t,n,r)},Tl.prototype.animate=function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(e)},Tl.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},Tl.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},Tl.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},Tl.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},Tl.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},Tl.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},Tl.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},Tl.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},Tl.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},Tl.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},Tl.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},Tl.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},Tl.prototype.enableScissorTest=function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},Tl.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},Tl.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},Tl.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},Tl.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},Tl.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},Tl.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},Tl.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},Tl.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},Tl.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},Tl.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(Tl.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===e?Jt:Yt}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(fl.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(rr.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}}),Od.prototype.load=function(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const t=this;return(new _d).load(e,(function(e){t.setBuffer(e)})),this},zd.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},Ai.prototype.updateCubeMap=function(e,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(e,t)},Ai.prototype.clear=function(e,t,n,r){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(e,t,n,r)},Zn.crossOrigin=void 0,Zn.loadTexture=function(e,t,n,r){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const s=new $h;s.setCrossOrigin(this.crossOrigin);const i=s.load(e,n,void 0,r);return t&&(i.mapping=t),i},Zn.loadTextureCube=function(e,t,n,r){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const s=new Ph;s.setCrossOrigin(this.crossOrigin);const i=s.load(e,n,void 0,r);return t&&(i.mapping=t),i},Zn.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},Zn.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};const kf={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};function Nf(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:r}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=r)},75410:()=>{},48628:()=>{},75042:()=>{},85499:(e,t,n)=>{n(2212);const{FaceMeshFaceGeometry:r}=n(23478),s=n(4377);n(7737),e.exports={Controller:class{constructor(){this.inputSize=null,this.displaySize=null,this.rotation=null,this.scale=null,this.faceGeometry=null,this.customFaceGeometries=[]}async setup(){this.model=await s.load(s.SupportedPackages.mediapipeFacemesh),this.faceGeometry=new r({useVideoTexture:!0})}createFaceGeoemtry(){const e=new r({useVideoTexture:!0});return this.customFaceGeometries.push(e),e}setInputSize(e,t){this.inputSize={w:e,h:t}}setDisplaySize(e,t){this.displaySize={w:e,h:t},this.faceGeometry&&this.faceGeometry.setSize(e,t);for(let n=0;n<this.customFaceGeometries.length;n++)this.customFaceGeometries[n].setSize(e,t)}async detect(e){const t=await this.model.estimateFaces({input:e});if(t.length>0){this.inputSize&&this.displaySize&&t[0].scaledMesh.forEach((e=>{e[0]=e[0]*this.displaySize.w/this.inputSize.w,e[1]=e[1]*this.displaySize.h/this.inputSize.h})),this.faceGeometry.update(t[0]);for(let e=0;e<this.customFaceGeometries.length;e++)this.customFaceGeometries[e].update(t[0]);let e=1e6,n=-1e6;for(let t=0;t<this.faceGeometry.positions.length;t+=3)e=Math.min(e,this.faceGeometry.positions[t]),n=Math.max(n,this.faceGeometry.positions[t]);this.scale={x:n-e,y:n-e,z:n-e};const r=this.faceGeometry.track(225,193,230),s=this.faceGeometry.track(417,445,450),i=s.position.x-r.position.x,a=s.position.y-r.position.y,o=s.position.z-r.position.z,l=Math.atan2(o/2,i/2),u=Math.atan2(-o/2,i/2),c=Math.atan2(a/2,i/2);return this.rotation={x:l,y:u,z:c},!0}return!1}getLandmarkProperties(e){return{position:{x:this.faceGeometry.positions[3*e],y:this.faceGeometry.positions[3*e+1],z:this.faceGeometry.positions[3*e+2]},rotation:this.rotation,scale:this.scale}}}}},23478:(e,t,n)=>{const{FACES:r,UVS:s}=n(54108),{BufferGeometry:i,BufferAttribute:a,Vector3:o,Triangle:l,Matrix4:u}=n(2212);e.exports={FaceMeshFaceGeometry:class extends i{constructor(e={}){super(),this.useVideoTexture=e.useVideoTexture||!1,this.normalizeCoords=e.normalizeCoords||!1,this.flipped=!1,this.positions=new Float32Array(1404),this.uvs=new Float32Array(936),this.setAttribute("position",new a(this.positions,3)),this.setAttribute("uv",new a(this.uvs,2)),this.setUvs(),this.setIndex(r),this.computeVertexNormals(),this.applyMatrix4((new u).makeScale(10,10,10)),this.p0=new o,this.p1=new o,this.p2=new o,this.triangle=new l}setUvs(){for(let e=0;e<468;e++)this.uvs[2*e]=this.flipped?1-s[e][0]:s[e][0],this.uvs[2*e+1]=1-s[e][1];this.getAttribute("uv").needsUpdate=!0}setVideoUvs(){let e=0;for(let t=0;t<936;t+=2)this.uvs[t]=this.flipped?this.positions[e]/this.w+.5:1-(this.positions[e]/this.w+.5),this.uvs[t+1]=this.positions[e+1]/this.h+.5,e+=3;this.getAttribute("uv").needsUpdate=!0}setSize(e,t){this.w=e,this.h=t}update(e,t){let n=0;for(const r of e.scaledMesh)this.positions[n]=t?r[0]+.5*this.w:r[0]-.5*this.w,this.positions[n+1]=this.h-r[1]-.5*this.h,this.positions[n+2]=-r[2],n+=3;if(this.useVideoTexture){if(this.setVideoUvs(),this.normalizeCoords){let t=0;const n=this.h/this.w,r=2*Math.sqrt(this.w/1e3);for(const s of e.scaledMesh)this.positions[t]=r*(s[0]/this.w+.5),this.positions[t+1]=r*(-s[1]/this.h+.5)*n,this.positions[t+2]=r*(-s[2]/500),t+=3}}else t!==this.flipped&&(this.flipped=t,this.setUvs());this.attributes.position.needsUpdate=!0,this.computeVertexNormals()}track(e,t,n){const r=this.positions;this.p0.set(r[3*e],r[3*e+1],r[3*e+2]),this.p1.set(r[3*t],r[3*t+1],r[3*t+2]),this.p2.set(r[3*n],r[3*n+1],r[3*n+2]),this.triangle.set(this.p0,this.p1,this.p2);const s=new o;this.triangle.getMidpoint(s);const i=new o;this.triangle.getNormal(i);const a=new u,l=this.p1.clone().sub(this.p2).normalize(),c=this.p1.clone().sub(this.p0).normalize(),h=(new o).crossVectors(l,c),d=(new o).crossVectors(l,h).normalize(),p=(new o).crossVectors(l,d).normalize();return a.makeBasis(l,d,p),{position:s,normal:i,rotation:a}}}}},54108:e=>{e.exports={FACES:[127,34,139,11,0,37,232,231,120,72,37,39,128,121,47,232,121,128,104,69,67,175,171,148,157,154,155,118,50,101,73,39,40,9,151,108,48,115,131,194,204,211,74,40,185,80,42,183,40,92,186,230,229,118,202,212,214,83,18,17,76,61,146,160,29,30,56,157,173,106,204,194,135,214,192,203,165,98,21,71,68,51,45,4,144,24,23,77,146,91,205,50,187,201,200,18,91,106,182,90,91,181,85,84,17,206,203,36,148,171,140,92,40,39,193,189,244,159,158,28,247,246,161,236,3,196,54,68,104,193,168,8,117,228,31,189,193,55,98,97,99,126,47,100,166,79,218,155,154,26,209,49,131,135,136,150,47,126,217,223,52,53,45,51,134,211,170,140,67,69,108,43,106,91,230,119,120,226,130,247,63,53,52,238,20,242,46,70,156,78,62,96,46,53,63,143,34,227,173,155,133,123,117,111,44,125,19,236,134,51,216,206,205,154,153,22,39,37,167,200,201,208,36,142,100,57,212,202,20,60,99,28,158,157,35,226,113,160,159,27,204,202,210,113,225,46,43,202,204,62,76,77,137,123,116,41,38,72,203,129,142,64,98,240,49,102,64,41,73,74,212,216,207,42,74,184,169,170,211,170,149,176,105,66,69,122,6,168,123,147,187,96,77,90,65,55,107,89,90,180,101,100,120,63,105,104,93,137,227,15,86,85,129,102,49,14,87,86,55,8,9,100,47,121,145,23,22,88,89,179,6,122,196,88,95,96,138,172,136,215,58,172,115,48,219,42,80,81,195,3,51,43,146,61,171,175,199,81,82,38,53,46,225,144,163,110,246,33,7,52,65,66,229,228,117,34,127,234,107,108,69,109,108,151,48,64,235,62,78,191,129,209,126,111,35,143,163,161,246,117,123,50,222,65,52,19,125,141,221,55,65,3,195,197,25,7,33,220,237,44,70,71,139,122,193,245,247,130,33,71,21,162,153,158,159,170,169,150,188,174,196,216,186,92,144,160,161,2,97,167,141,125,241,164,167,37,72,38,12,145,159,160,38,82,13,63,68,71,226,35,111,158,153,154,101,50,205,206,92,165,209,198,217,165,167,97,220,115,218,133,112,243,239,238,241,214,135,169,190,173,133,171,208,32,125,44,237,86,87,178,85,86,179,84,85,180,83,84,181,201,83,182,137,93,132,76,62,183,61,76,184,57,61,185,212,57,186,214,207,187,34,143,156,79,239,237,123,137,177,44,1,4,201,194,32,64,102,129,213,215,138,59,166,219,242,99,97,2,94,141,75,59,235,24,110,228,25,130,226,23,24,229,22,23,230,26,22,231,112,26,232,189,190,243,221,56,190,28,56,221,27,28,222,29,27,223,30,29,224,247,30,225,238,79,20,166,59,75,60,75,240,147,177,215,20,79,166,187,147,213,112,233,244,233,128,245,128,114,188,114,217,174,131,115,220,217,198,236,198,131,134,177,132,58,143,35,124,110,163,7,228,110,25,356,389,368,11,302,267,452,350,349,302,303,269,357,343,277,452,453,357,333,332,297,175,152,377,384,398,382,347,348,330,303,304,270,9,336,337,278,279,360,418,262,431,304,408,409,310,415,407,270,409,410,450,348,347,422,430,434,313,314,17,306,307,375,387,388,260,286,414,398,335,406,418,364,367,416,423,358,327,251,284,298,281,5,4,373,374,253,307,320,321,425,427,411,421,313,18,321,405,406,320,404,405,315,16,17,426,425,266,377,400,369,322,391,269,417,465,464,386,257,258,466,260,388,456,399,419,284,332,333,417,285,8,346,340,261,413,441,285,327,460,328,355,371,329,392,439,438,382,341,256,429,420,360,364,394,379,277,343,437,443,444,283,275,440,363,431,262,369,297,338,337,273,375,321,450,451,349,446,342,467,293,334,282,458,461,462,276,353,383,308,324,325,276,300,293,372,345,447,382,398,362,352,345,340,274,1,19,456,248,281,436,427,425,381,256,252,269,391,393,200,199,428,266,330,329,287,273,422,250,462,328,258,286,384,265,353,342,387,259,257,424,431,430,342,353,276,273,335,424,292,325,307,366,447,345,271,303,302,423,266,371,294,455,460,279,278,294,271,272,304,432,434,427,272,407,408,394,430,431,395,369,400,334,333,299,351,417,168,352,280,411,325,319,320,295,296,336,319,403,404,330,348,349,293,298,333,323,454,447,15,16,315,358,429,279,14,15,316,285,336,9,329,349,350,374,380,252,318,402,403,6,197,419,318,319,325,367,364,365,435,367,397,344,438,439,272,271,311,195,5,281,273,287,291,396,428,199,311,271,268,283,444,445,373,254,339,263,466,249,282,334,296,449,347,346,264,447,454,336,296,299,338,10,151,278,439,455,292,407,415,358,371,355,340,345,372,390,249,466,346,347,280,442,443,282,19,94,370,441,442,295,248,419,197,263,255,359,440,275,274,300,383,368,351,412,465,263,467,466,301,368,389,380,374,386,395,378,379,412,351,419,436,426,322,373,390,388,2,164,393,370,462,461,164,0,267,302,11,12,374,373,387,268,12,13,293,300,301,446,261,340,385,384,381,330,266,425,426,423,391,429,355,437,391,327,326,440,457,438,341,382,362,459,457,461,434,430,394,414,463,362,396,369,262,354,461,457,316,403,402,315,404,403,314,405,404,313,406,405,421,418,406,366,401,361,306,408,407,291,409,408,287,410,409,432,436,410,434,416,411,264,368,383,309,438,457,352,376,401,274,275,4,421,428,262,294,327,358,433,416,367,289,455,439,462,370,326,2,326,370,305,460,455,254,449,448,255,261,446,253,450,449,252,451,450,256,452,451,341,453,452,413,464,463,441,413,414,258,442,441,257,443,442,259,444,443,260,445,444,467,342,445,459,458,250,289,392,290,290,328,460,376,433,435,250,290,392,411,416,433,341,463,464,453,464,465,357,465,412,343,412,399,360,363,440,437,399,456,420,456,363,401,435,288,372,383,353,339,255,249,448,261,255,133,243,190,133,155,112,33,246,247,33,130,25,398,384,286,362,398,414,362,463,341,263,359,467,263,249,255,466,467,260,75,60,166,238,239,79,162,127,139,72,11,37,121,232,120,73,72,39,114,128,47,233,232,128,103,104,67,152,175,148,173,157,155,119,118,101,74,73,40,107,9,108,49,48,131,32,194,211,184,74,185,191,80,183,185,40,186,119,230,118,210,202,214,84,83,17,77,76,146,161,160,30,190,56,173,182,106,194,138,135,192,129,203,98,54,21,68,5,51,4,145,144,23,90,77,91,207,205,187,83,201,18,181,91,182,180,90,181,16,85,17,205,206,36,176,148,140,165,92,39,245,193,244,27,159,28,30,247,161,174,236,196,103,54,104,55,193,8,111,117,31,221,189,55,240,98,99,142,126,100,219,166,218,112,155,26,198,209,131,169,135,150,114,47,217,224,223,53,220,45,134,32,211,140,109,67,108,146,43,91,231,230,120,113,226,247,105,63,52,241,238,242,124,46,156,95,78,96,70,46,63,116,143,227,116,123,111,1,44,19,3,236,51,207,216,205,26,154,22,165,39,167,199,200,208,101,36,100,43,57,202,242,20,99,56,28,157,124,35,113,29,160,27,211,204,210,124,113,46,106,43,204,96,62,77,227,137,116,73,41,72,36,203,142,235,64,240,48,49,64,42,41,74,214,212,207,183,42,184,210,169,211,140,170,176,104,105,69,193,122,168,50,123,187,89,96,90,66,65,107,179,89,180,119,101,120,68,63,104,234,93,227,16,15,85,209,129,49,15,14,86,107,55,9,120,100,121,153,145,22,178,88,179,197,6,196,89,88,96,135,138,136,138,215,172,218,115,219,41,42,81,5,195,51,57,43,61,208,171,199,41,81,38,224,53,225,24,144,110,105,52,66,118,229,117,227,34,234,66,107,69,10,109,151,219,48,235,183,62,191,142,129,126,116,111,143,7,163,246,118,117,50,223,222,52,94,19,141,222,221,65,196,3,197,45,220,44,156,70,139,188,122,245,139,71,162,145,153,159,149,170,150,122,188,196,206,216,92,163,144,161,164,2,167,242,141,241,0,164,37,11,72,12,144,145,160,12,38,13,70,63,71,31,226,111,157,158,154,36,101,205,203,206,165,126,209,217,98,165,97,237,220,218,237,239,241,210,214,169,140,171,32,241,125,237,179,86,178,180,85,179,181,84,180,182,83,181,194,201,182,177,137,132,184,76,183,185,61,184,186,57,185,216,212,186,192,214,187,139,34,156,218,79,237,147,123,177,45,44,4,208,201,32,98,64,129,192,213,138,235,59,219,141,242,97,97,2,141,240,75,235,229,24,228,31,25,226,230,23,229,231,22,230,232,26,231,233,112,232,244,189,243,189,221,190,222,28,221,223,27,222,224,29,223,225,30,224,113,247,225,99,60,240,213,147,215,60,20,166,192,187,213,243,112,244,244,233,245,245,128,188,188,114,174,134,131,220,174,217,236,236,198,134,215,177,58,156,143,124,25,110,7,31,228,25,264,356,368,0,11,267,451,452,349,267,302,269,350,357,277,350,452,357,299,333,297,396,175,377,381,384,382,280,347,330,269,303,270,151,9,337,344,278,360,424,418,431,270,304,409,272,310,407,322,270,410,449,450,347,432,422,434,18,313,17,291,306,375,259,387,260,424,335,418,434,364,416,391,423,327,301,251,298,275,281,4,254,373,253,375,307,321,280,425,411,200,421,18,335,321,406,321,320,405,314,315,17,423,426,266,396,377,369,270,322,269,413,417,464,385,386,258,248,456,419,298,284,333,168,417,8,448,346,261,417,413,285,326,327,328,277,355,329,309,392,438,381,382,256,279,429,360,365,364,379,355,277,437,282,443,283,281,275,363,395,431,369,299,297,337,335,273,321,348,450,349,359,446,467,283,293,282,250,458,462,300,276,383,292,308,325,283,276,293,264,372,447,346,352,340,354,274,19,363,456,281,426,436,425,380,381,252,267,269,393,421,200,428,371,266,329,432,287,422,290,250,328,385,258,384,446,265,342,386,387,257,422,424,430,445,342,276,422,273,424,306,292,307,352,366,345,268,271,302,358,423,371,327,294,460,331,279,294,303,271,304,436,432,427,304,272,408,395,394,431,378,395,400,296,334,299,6,351,168,376,352,411,307,325,320,285,295,336,320,319,404,329,330,349,334,293,333,366,323,447,316,15,315,331,358,279,317,14,316,8,285,9,277,329,350,253,374,252,319,318,403,351,6,419,324,318,325,397,367,365,288,435,397,278,344,439,310,272,311,248,195,281,375,273,291,175,396,199,312,311,268,276,283,445,390,373,339,295,282,296,448,449,346,356,264,454,337,336,299,337,338,151,294,278,455,308,292,415,429,358,355,265,340,372,388,390,466,352,346,280,295,442,282,354,19,370,285,441,295,195,248,197,457,440,274,301,300,368,417,351,465,251,301,389,385,380,386,394,395,379,399,412,419,410,436,322,387,373,388,326,2,393,354,370,461,393,164,267,268,302,12,386,374,387,312,268,13,298,293,301,265,446,340,380,385,381,280,330,425,322,426,391,420,429,437,393,391,326,344,440,438,458,459,461,364,434,394,428,396,262,274,354,457,317,316,402,316,315,403,315,314,404,314,313,405,313,421,406,323,366,361,292,306,407,306,291,408,291,287,409,287,432,410,427,434,411,372,264,383,459,309,457,366,352,401,1,274,4,418,421,262,331,294,358,435,433,367,392,289,439,328,462,326,94,2,370,289,305,455,339,254,448,359,255,446,254,253,449,253,252,450,252,256,451,256,341,452,414,413,463,286,441,414,286,258,441,258,257,442,257,259,443,259,260,444,260,467,445,309,459,250,305,289,290,305,290,460,401,376,435,309,250,392,376,411,433,453,341,464,357,453,465,343,357,412,437,343,399,344,360,440,420,437,456,360,420,363,361,401,288,265,372,353,390,339,249,339,448,255],UVS:[[.499976992607117,.652534008026123],[.500025987625122,.547487020492554],[.499974012374878,.602371990680695],[.482113003730774,.471979022026062],[.500150978565216,.527155995368958],[.499909996986389,.498252987861633],[.499523013830185,.40106201171875],[.289712011814117,.380764007568359],[.499954998493195,.312398016452789],[.499987006187439,.269918978214264],[.500023007392883,.107050001621246],[.500023007392883,.666234016418457],[.5000159740448,.679224014282227],[.500023007392883,.692348003387451],[.499976992607117,.695277988910675],[.499976992607117,.70593398809433],[.499976992607117,.719385027885437],[.499976992607117,.737019002437592],[.499967992305756,.781370997428894],[.499816000461578,.562981009483337],[.473773002624512,.573909997940063],[.104906998574734,.254140973091125],[.365929991006851,.409575998783112],[.338757991790771,.41302502155304],[.311120003461838,.409460008144379],[.274657994508743,.389131009578705],[.393361985683441,.403706014156342],[.345234006643295,.344011008739471],[.370094001293182,.346076011657715],[.319321990013123,.347265005111694],[.297903001308441,.353591024875641],[.24779200553894,.410809993743896],[.396889001131058,.842755019664764],[.280097991228104,.375599980354309],[.106310002505779,.399955987930298],[.2099249958992,.391353011131287],[.355807989835739,.534406006336212],[.471751004457474,.65040397644043],[.474155008792877,.680191993713379],[.439785003662109,.657229006290436],[.414617002010345,.66654098033905],[.450374007225037,.680860996246338],[.428770989179611,.682690978050232],[.374971002340317,.727805018424988],[.486716985702515,.547628998756409],[.485300987958908,.527395009994507],[.257764995098114,.314490020275116],[.401223003864288,.455172002315521],[.429818987846375,.548614978790283],[.421351999044418,.533740997314453],[.276895999908447,.532056987285614],[.483370006084442,.499586999416351],[.33721199631691,.282882988452911],[.296391993761063,.293242990970612],[.169294998049736,.193813979625702],[.447580009698868,.302609980106354],[.392390012741089,.353887975215912],[.354490011930466,.696784019470215],[.067304998636246,.730105042457581],[.442739009857178,.572826027870178],[.457098007202148,.584792017936707],[.381974011659622,.694710969924927],[.392388999462128,.694203019142151],[.277076005935669,.271932005882263],[.422551989555359,.563233017921448],[.385919004678726,.281364023685455],[.383103013038635,.255840003490448],[.331431001424789,.119714021682739],[.229923993349075,.232002973556519],[.364500999450684,.189113974571228],[.229622006416321,.299540996551514],[.173287004232407,.278747975826263],[.472878992557526,.666198015213013],[.446828007698059,.668527007102966],[.422762006521225,.673889994621277],[.445307999849319,.580065965652466],[.388103008270264,.693961024284363],[.403039008378983,.706539988517761],[.403629004955292,.693953037261963],[.460041999816895,.557139039039612],[.431158006191254,.692366003990173],[.452181994915009,.692366003990173],[.475387006998062,.692366003990173],[.465828001499176,.779190003871918],[.472328990697861,.736225962638855],[.473087012767792,.717857003211975],[.473122000694275,.704625964164734],[.473033010959625,.695277988910675],[.427942007780075,.695277988910675],[.426479011774063,.703539967536926],[.423162013292313,.711845993995667],[.4183090031147,.720062971115112],[.390094995498657,.639572978019714],[.013953999616206,.560034036636353],[.499913990497589,.58014702796936],[.413199990987778,.69539999961853],[.409626007080078,.701822996139526],[.468080013990402,.601534962654114],[.422728985548019,.585985004901886],[.463079988956451,.593783974647522],[.37211999297142,.47341400384903],[.334562003612518,.496073007583618],[.411671012639999,.546965003013611],[.242175996303558,.14767599105835],[.290776997804642,.201445996761322],[.327338010072708,.256527006626129],[.399509996175766,.748921036720276],[.441727995872498,.261676013469696],[.429764986038208,.187834024429321],[.412198007106781,.108901023864746],[.288955003023148,.398952007293701],[.218936994671822,.435410976409912],[.41278201341629,.398970007896423],[.257135003805161,.355440020561218],[.427684992551804,.437960982322693],[.448339998722076,.536936044692993],[.178560003638268,.45755398273468],[.247308000922203,.457193970680237],[.286267012357712,.467674970626831],[.332827985286713,.460712015628815],[.368755996227264,.447206974029541],[.398963987827301,.432654976844788],[.476410001516342,.405806005001068],[.189241006970406,.523923993110657],[.228962004184723,.348950982093811],[.490725994110107,.562400996685028],[.404670000076294,.485132992267609],[.019469000399113,.401564002037048],[.426243007183075,.420431017875671],[.396993011236191,.548797011375427],[.266469985246658,.376977026462555],[.439121007919312,.51895797252655],[.032313998788595,.644356966018677],[.419054001569748,.387154996395111],[.462783008813858,.505746960639954],[.238978996872902,.779744982719421],[.198220998048782,.831938028335571],[.107550002634525,.540755033493042],[.183610007166862,.740257024765015],[.134409993886948,.333683013916016],[.385764002799988,.883153975009918],[.490967005491257,.579378008842468],[.382384985685349,.508572995662689],[.174399003386497,.397670984268188],[.318785011768341,.39623498916626],[.343364000320435,.400596976280212],[.396100014448166,.710216999053955],[.187885001301765,.588537991046906],[.430987000465393,.944064974784851],[.318993002176285,.898285031318665],[.266247987747192,.869701027870178],[.500023007392883,.190576016902924],[.499976992607117,.954452991485596],[.366169989109039,.398822009563446],[.393207013607025,.39553701877594],[.410373002290726,.391080021858215],[.194993004202843,.342101991176605],[.388664990663528,.362284004688263],[.365961998701096,.355970978736877],[.343364000320435,.355356991291046],[.318785011768341,.35834002494812],[.301414996385574,.363156020641327],[.058132998645306,.319076001644135],[.301414996385574,.387449026107788],[.499987989664078,.618434011936188],[.415838003158569,.624195992946625],[.445681989192963,.566076993942261],[.465844005346298,.620640993118286],[.49992299079895,.351523995399475],[.288718998432159,.819945991039276],[.335278987884521,.852819979190826],[.440512001514435,.902418971061707],[.128294005990028,.791940987110138],[.408771991729736,.373893976211548],[.455606997013092,.451801002025604],[.499877005815506,.908990025520325],[.375436991453171,.924192011356354],[.11421000212431,.615022003650665],[.448662012815475,.695277988910675],[.4480200111866,.704632043838501],[.447111994028091,.715808033943176],[.444831997156143,.730794012546539],[.430011987686157,.766808986663818],[.406787008047104,.685672998428345],[.400738000869751,.681069016456604],[.392399996519089,.677703022956848],[.367855995893478,.663918972015381],[.247923001646996,.601333022117615],[.452769994735718,.420849978923798],[.43639200925827,.359887003898621],[.416164010763168,.368713974952698],[.413385987281799,.692366003990173],[.228018000721931,.683571994304657],[.468268007040024,.352671027183533],[.411361992359161,.804327011108398],[.499989002943039,.469825029373169],[.479153990745544,.442654013633728],[.499974012374878,.439637005329132],[.432112008333206,.493588984012604],[.499886006116867,.866917014122009],[.49991300702095,.821729004383087],[.456548988819122,.819200992584229],[.344549000263214,.745438992977142],[.37890899181366,.574010014533997],[.374292999505997,.780184984207153],[.319687992334366,.570737957954407],[.357154995203018,.604269981384277],[.295284003019333,.621580958366394],[.447750002145767,.862477004528046],[.410986006259918,.508723020553589],[.31395098567009,.775308012962341],[.354128003120422,.812552988529205],[.324548006057739,.703992962837219],[.189096003770828,.646299958229065],[.279776990413666,.71465802192688],[.1338230073452,.682700991630554],[.336768001317978,.644733011722565],[.429883986711502,.466521978378296],[.455527991056442,.548622965812683],[.437114000320435,.558896005153656],[.467287987470627,.529924988746643],[.414712011814117,.335219979286194],[.37704598903656,.322777986526489],[.344107985496521,.320150971412659],[.312875986099243,.32233202457428],[.283526003360748,.333190023899078],[.241245999932289,.382785975933075],[.102986000478268,.468762993812561],[.267612010240555,.424560010433197],[.297879010438919,.433175981044769],[.333433985710144,.433878004550934],[.366427004337311,.426115989685059],[.396012008190155,.416696012020111],[.420121014118195,.41022801399231],[.007561000064015,.480777025222778],[.432949006557465,.569517970085144],[.458638995885849,.479089021682739],[.473466008901596,.545744001865387],[.476087987422943,.563830018043518],[.468472003936768,.555056989192963],[.433990985155106,.582361996173859],[.483518004417419,.562983989715576],[.482482999563217,.57784903049469],[.42645001411438,.389798998832703],[.438998997211456,.39649498462677],[.450067013502121,.400434017181396],[.289712011814117,.368252992630005],[.276670008897781,.363372981548309],[.517862021923065,.471948027610779],[.710287988185883,.380764007568359],[.526226997375488,.573909997940063],[.895093023777008,.254140973091125],[.634069979190826,.409575998783112],[.661242008209229,.41302502155304],[.688880026340485,.409460008144379],[.725341975688934,.389131009578705],[.606630027294159,.40370500087738],[.654766023159027,.344011008739471],[.629905998706818,.346076011657715],[.680678009986877,.347265005111694],[.702096998691559,.353591024875641],[.75221198797226,.410804986953735],[.602918028831482,.842862963676453],[.719901978969574,.375599980354309],[.893692970275879,.399959981441498],[.790081977844238,.391354024410248],[.643998026847839,.534487962722778],[.528249025344849,.65040397644043],[.525849997997284,.680191040039062],[.560214996337891,.657229006290436],[.585384011268616,.66654098033905],[.549625992774963,.680860996246338],[.57122802734375,.682691991329193],[.624852001667023,.72809898853302],[.513050019741058,.547281980514526],[.51509702205658,.527251958847046],[.742246985435486,.314507007598877],[.598631024360657,.454979002475739],[.570338010787964,.548575043678284],[.578631997108459,.533622980117798],[.723087012767792,.532054007053375],[.516445994377136,.499638974666595],[.662801027297974,.282917976379395],[.70362401008606,.293271005153656],[.830704987049103,.193813979625702],[.552385985851288,.302568018436432],[.607609987258911,.353887975215912],[.645429015159607,.696707010269165],[.932694971561432,.730105042457581],[.557260990142822,.572826027870178],[.542901992797852,.584792017936707],[.6180260181427,.694710969924927],[.607590973377228,.694203019142151],[.722943007946014,.271963000297546],[.577413976192474,.563166975975037],[.614082992076874,.281386971473694],[.616907000541687,.255886018276215],[.668509006500244,.119913995265961],[.770092010498047,.232020974159241],[.635536015033722,.189248979091644],[.77039098739624,.299556016921997],[.826722025871277,.278755009174347],[.527121007442474,.666198015213013],[.553171992301941,.668527007102966],[.577238023281097,.673889994621277],[.554691970348358,.580065965652466],[.611896991729736,.693961024284363],[.59696102142334,.706539988517761],[.596370995044708,.693953037261963],[.539958000183105,.557139039039612],[.568841993808746,.692366003990173],[.547818005084991,.692366003990173],[.52461302280426,.692366003990173],[.534089982509613,.779141008853912],[.527670979499817,.736225962638855],[.526912987232208,.717857003211975],[.526877999305725,.704625964164734],[.526966989040375,.695277988910675],[.572058022022247,.695277988910675],[.573521018028259,.703539967536926],[.57683801651001,.711845993995667],[.581691026687622,.720062971115112],[.609944999217987,.639909982681274],[.986046016216278,.560034036636353],[.5867999792099,.69539999961853],[.590372025966644,.701822996139526],[.531915009021759,.601536989212036],[.577268004417419,.585934996604919],[.536915004253387,.593786001205444],[.627542972564697,.473352015018463],[.665585994720459,.495950996875763],[.588353991508484,.546862006187439],[.757824003696442,.14767599105835],[.709249973297119,.201507985591888],[.672684013843536,.256581008434296],[.600408971309662,.74900496006012],[.55826598405838,.261672019958496],[.570303976535797,.187870979309082],[.588165998458862,.109044015407562],[.711045026779175,.398952007293701],[.781069993972778,.435405015945435],[.587247014045715,.398931980133057],[.742869973182678,.355445981025696],[.572156012058258,.437651991844177],[.55186802148819,.536570012569427],[.821442008018494,.457556009292603],[.752701997756958,.457181990146637],[.71375697851181,.467626988887787],[.66711300611496,.460672974586487],[.631101012229919,.447153985500336],[.6008620262146,.432473003864288],[.523481011390686,.405627012252808],[.810747981071472,.523926019668579],[.771045982837677,.348959028720856],[.509127020835876,.562718033790588],[.595292985439301,.485023975372314],[.980530977249146,.401564002037048],[.573499977588654,.420000016689301],[.602994978427887,.548687994480133],[.733529984951019,.376977026462555],[.560611009597778,.519016981124878],[.967685997486115,.644356966018677],[.580985009670258,.387160003185272],[.537728011608124,.505385041236877],[.760966002941132,.779752969741821],[.801778972148895,.831938028335571],[.892440974712372,.54076099395752],[.816350996494293,.740260004997253],[.865594983100891,.333687007427216],[.614073991775513,.883246004581451],[.508952975273132,.579437971115112],[.617941975593567,.508316040039062],[.825608015060425,.397674977779388],[.681214988231659,.39623498916626],[.656635999679565,.400596976280212],[.603900015354156,.710216999053955],[.81208598613739,.588539004325867],[.56801301240921,.944564998149872],[.681007981300354,.898285031318665],[.733752012252808,.869701027870178],[.633830010890961,.398822009563446],[.606792986392975,.39553701877594],[.589659988880157,.391062021255493],[.805015981197357,.342108011245728],[.611334979534149,.362284004688263],[.634037971496582,.355970978736877],[.656635999679565,.355356991291046],[.681214988231659,.35834002494812],[.698584973812103,.363156020641327],[.941866993904114,.319076001644135],[.698584973812103,.387449026107788],[.584177017211914,.624107003211975],[.554318010807037,.566076993942261],[.534153997898102,.62064003944397],[.711217999458313,.819975018501282],[.664629995822906,.852871000766754],[.559099972248077,.902631998062134],[.871706008911133,.791940987110138],[.591234028339386,.373893976211548],[.544341027736664,.451583981513977],[.624562978744507,.924192011356354],[.88577002286911,.615028977394104],[.551338016986847,.695277988910675],[.551980018615723,.704632043838501],[.552887976169586,.715808033943176],[.555167973041534,.730794012546539],[.569944024085999,.767035007476807],[.593203008174896,.685675978660583],[.599261999130249,.681069016456604],[.607599973678589,.677703022956848],[.631937980651855,.663500010967255],[.752032995223999,.601315021514893],[.547226011753082,.420395016670227],[.563543975353241,.359827995300293],[.583841025829315,.368713974952698],[.586614012718201,.692366003990173],[.771915018558502,.683578014373779],[.531597018241882,.352482974529266],[.588370978832245,.804440975189209],[.52079701423645,.442565023899078],[.567984998226166,.493479013442993],[.543282985687256,.819254994392395],[.655317008495331,.745514988899231],[.621008992195129,.574018001556396],[.625559985637665,.78031200170517],[.680198013782501,.570719003677368],[.64276397228241,.604337990283966],[.704662978649139,.621529996395111],[.552012026309967,.862591981887817],[.589071989059448,.508637011051178],[.685944974422455,.775357007980347],[.645735025405884,.812640011310577],[.675342977046967,.703978002071381],[.810858011245728,.646304965019226],[.72012197971344,.714666962623596],[.866151988506317,.682704985141754],[.663187026977539,.644596993923187],[.570082008838654,.466325998306274],[.544561982154846,.548375964164734],[.562758982181549,.558784961700439],[.531987011432648,.530140042304993],[.585271000862122,.335177004337311],[.622952997684479,.32277899980545],[.655896008014679,.320163011550903],[.687132000923157,.322345972061157],[.716481983661652,.333200991153717],[.758756995201111,.382786989212036],[.897013008594513,.468769013881683],[.732392013072968,.424547016620636],[.70211398601532,.433162987232208],[.66652500629425,.433866024017334],[.633504986763,.426087975502014],[.603875994682312,.416586995124817],[.579657971858978,.409945011138916],[.992439985275269,.480777025222778],[.567192018032074,.569419980049133],[.54136598110199,.478899002075195],[.526564002037048,.546118021011353],[.523913025856018,.563830018043518],[.531529009342194,.555056989192963],[.566035985946655,.582329034805298],[.51631098985672,.563053965568542],[.5174720287323,.577877044677734],[.573594987392426,.389806985855103],[.560697972774506,.395331978797913],[.549755990505219,.399751007556915],[.710287988185883,.368252992630005],[.723330020904541,.363372981548309]]}},53365:(e,t,n)=>{const{Controller:r}=n(85499),{UI:s}=n(69856),i={Controller:r,UI:s};window.MINDAR||(window.MINDAR={}),window.MINDAR.FACE=i,e.exports=i},69856:(e,t,n)=>{n(74412);const r=n(69894).Z,s=n(97676).Z,i=n(22810).Z;e.exports={UI:class{constructor({uiLoading:e,uiScanning:t,uiError:n}){"yes"===e?this.loadingModal=this._loadHTML(r):"no"!==e&&(this.loadingModal=document.querySelector(e)),"yes"===n?this.compatibilityModal=this._loadHTML(s):"no"!==n&&(this.compatibilityModal=document.querySelector(n)),"yes"===t?this.scanningMask=this._loadHTML(i):"no"!==t&&(this.scanningMask=document.querySelector(t)),this.hideLoading(),this.hideCompatibility(),this.hideScanning()}showLoading(){this.loadingModal&&this.loadingModal.classList.remove("hidden")}hideLoading(){this.loadingModal&&this.loadingModal.classList.add("hidden")}showCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.remove("hidden")}hideCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.add("hidden")}showScanning(){this.scanningMask&&this.scanningMask.classList.remove("hidden")}hideScanning(){this.scanningMask&&this.scanningMask.classList.add("hidden")}_loadHTML(e){const t=document.createElement("template");t.innerHTML=e.trim();const n=t.content.firstChild;return document.getElementsByTagName("body")[0].appendChild(n),n}}}}},t={};function n(r){var s=t[r];if(void 0!==s)return s.exports;var i=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.loaded=!0,i.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),n.nc=void 0,n(53365)})();